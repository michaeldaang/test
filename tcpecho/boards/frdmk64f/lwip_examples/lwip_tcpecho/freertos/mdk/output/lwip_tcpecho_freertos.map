Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    lwip_tcpecho_freertos.o(.text.main) refers to pin_mux.o(.text.BOARD_InitBootPins) for BOARD_InitBootPins
    lwip_tcpecho_freertos.o(.text.main) refers to clock_config.o(.text.BOARD_InitBootClocks) for BOARD_InitBootClocks
    lwip_tcpecho_freertos.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    lwip_tcpecho_freertos.o(.text.main) refers to lwip_tcpecho_freertos.o(.text.stack_init) for stack_init
    lwip_tcpecho_freertos.o(.text.main) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    lwip_tcpecho_freertos.o(.text.main) refers to sys_arch.o(.text.sys_assert) for sys_assert
    lwip_tcpecho_freertos.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    lwip_tcpecho_freertos.o(.ARM.exidx.text.main) refers to lwip_tcpecho_freertos.o(.text.main) for [Anonymous Symbol]
    lwip_tcpecho_freertos.o(.text.stack_init) refers to lwip_tcpecho_freertos.o(.rodata..L__const.stack_init.enet_config) for .L__const.stack_init.enet_config
    lwip_tcpecho_freertos.o(.text.stack_init) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    lwip_tcpecho_freertos.o(.text.stack_init) refers to lwip_tcpecho_freertos.o(.data.mdioHandle) for mdioHandle
    lwip_tcpecho_freertos.o(.text.stack_init) refers to tcpip.o(.text.tcpip_init) for tcpip_init
    lwip_tcpecho_freertos.o(.text.stack_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif0_init) for ethernetif0_init
    lwip_tcpecho_freertos.o(.text.stack_init) refers to lwip_tcpecho_freertos.o(.bss.stack_init.netif) for stack_init.netif
    lwip_tcpecho_freertos.o(.text.stack_init) refers to tcpip.o(.text.tcpip_input) for tcpip_input
    lwip_tcpecho_freertos.o(.text.stack_init) refers to netifapi.o(.text.netifapi_netif_add) for netifapi_netif_add
    lwip_tcpecho_freertos.o(.text.stack_init) refers to netif.o(.text.netif_set_default) for netif_set_default
    lwip_tcpecho_freertos.o(.text.stack_init) refers to netifapi.o(.text.netifapi_netif_common) for netifapi_netif_common
    lwip_tcpecho_freertos.o(.text.stack_init) refers to netif.o(.text.netif_set_up) for netif_set_up
    lwip_tcpecho_freertos.o(.text.stack_init) refers to lwip_tcpecho_freertos.o(.rodata.str1.1) for .L.str.2
    lwip_tcpecho_freertos.o(.text.stack_init) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    lwip_tcpecho_freertos.o(.text.stack_init) refers to tcpecho.o(.text.tcpecho_init) for tcpecho_init
    lwip_tcpecho_freertos.o(.text.stack_init) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    lwip_tcpecho_freertos.o(.ARM.exidx.text.stack_init) refers to lwip_tcpecho_freertos.o(.text.stack_init) for [Anonymous Symbol]
    lwip_tcpecho_freertos.o(.data.phyHandle) refers to lwip_tcpecho_freertos.o(.data.mdioHandle) for [Anonymous Symbol]
    lwip_tcpecho_freertos.o(.data.phyHandle) refers to fsl_phyksz8081.o(.rodata.phyksz8081_ops) for phyksz8081_ops
    lwip_tcpecho_freertos.o(.rodata..L__const.stack_init.enet_config) refers to lwip_tcpecho_freertos.o(.data.phyHandle) for [Anonymous Symbol]
    lwip_tcpecho_freertos.o(.data.mdioHandle) refers to fsl_enet_mdio.o(.rodata.enet_ops) for enet_ops
    pin_mux.o(.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.PORT_SetPinMux) for PORT_SetPinMux
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.PORT_SetPinConfig) for PORT_SetPinConfig
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock) refers to pin_mux.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.PORT_SetPinMux) refers to pin_mux.o(.text.PORT_SetPinMux) for [Anonymous Symbol]
    pin_mux.o(.text.PORT_SetPinConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    pin_mux.o(.ARM.exidx.text.PORT_SetPinConfig) refers to pin_mux.o(.text.PORT_SetPinConfig) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for CLOCK_SetSimSafeDivs
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.oscConfig_BOARD_BootClockRUN) for oscConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for CLOCK_InitOsc0
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_SetXtal0Freq) for CLOCK_SetXtal0Freq
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv) for CLOCK_CONFIG_SetFllExtRefDiv
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.mcgConfig_BOARD_BootClockRUN) for mcgConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for CLOCK_BootToPeeMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.simConfig_BOARD_BootClockRUN) for simConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_SetSimSafeDivs) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for [Anonymous Symbol]
    clock_config.o(.text.CLOCK_SetXtal0Freq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    clock_config.o(.ARM.exidx.text.CLOCK_SetXtal0Freq) refers to clock_config.o(.text.CLOCK_SetXtal0Freq) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_CONFIG_SetFllExtRefDiv) refers to clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.CLOCK_SetSimSafeDivs) for CLOCK_SetSimSafeDivs
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for CLOCK_BootToBlpiMode
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.rodata.simConfig_BOARD_BootClockVLPR) for simConfig_BOARD_BootClockVLPR
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.SMC_SetPowerModeProtection) for SMC_SetPowerModeProtection
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for SMC_SetPowerModeVlpr
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.SMC_GetPowerModeState) for SMC_GetPowerModeState
    clock_config.o(.text.BOARD_BootClockVLPR) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.BOARD_BootClockVLPR) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.SMC_SetPowerModeProtection) refers to clock_config.o(.text.SMC_SetPowerModeProtection) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.SMC_GetPowerModeState) refers to clock_config.o(.text.SMC_GetPowerModeState) for [Anonymous Symbol]
    fsl_enet_mdio.o(.text.ENET_MDIO_Init) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet_mdio.o(.text.ENET_MDIO_Init) refers to fsl_enet.o(.rodata.s_enetClock) for s_enetClock
    fsl_enet_mdio.o(.text.ENET_MDIO_Init) refers to fsl_enet_mdio.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_enet_mdio.o(.text.ENET_MDIO_Init) refers to fsl_enet.o(.text.ENET_SetSMI) for ENET_SetSMI
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Init) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Init) for [Anonymous Symbol]
    fsl_enet_mdio.o(.text.ENET_MDIO_Write) refers to fsl_enet_mdio.o(.text.ENET_ClearInterruptStatus) for ENET_ClearInterruptStatus
    fsl_enet_mdio.o(.text.ENET_MDIO_Write) refers to fsl_enet.o(.text.ENET_StartSMIWrite) for ENET_StartSMIWrite
    fsl_enet_mdio.o(.text.ENET_MDIO_Write) refers to fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver) for ENET_MDIO_WaitTransferOver
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Write) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Write) for [Anonymous Symbol]
    fsl_enet_mdio.o(.text.ENET_MDIO_Read) refers to fsl_enet_mdio.o(.text.ENET_ClearInterruptStatus) for ENET_ClearInterruptStatus
    fsl_enet_mdio.o(.text.ENET_MDIO_Read) refers to fsl_enet.o(.text.ENET_StartSMIRead) for ENET_StartSMIRead
    fsl_enet_mdio.o(.text.ENET_MDIO_Read) refers to fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver) for ENET_MDIO_WaitTransferOver
    fsl_enet_mdio.o(.text.ENET_MDIO_Read) refers to fsl_enet_mdio.o(.text.ENET_ReadSMIData) for ENET_ReadSMIData
    fsl_enet_mdio.o(.text.ENET_MDIO_Read) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Read) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Read) for [Anonymous Symbol]
    fsl_enet_mdio.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_enet_mdio.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_ClearInterruptStatus) refers to fsl_enet_mdio.o(.text.ENET_ClearInterruptStatus) for [Anonymous Symbol]
    fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver) refers to fsl_enet_mdio.o(.text.ENET_GetInterruptStatus) for ENET_GetInterruptStatus
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_WaitTransferOver) refers to fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver) for [Anonymous Symbol]
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_GetInterruptStatus) refers to fsl_enet_mdio.o(.text.ENET_GetInterruptStatus) for [Anonymous Symbol]
    fsl_enet_mdio.o(.ARM.exidx.text.ENET_ReadSMIData) refers to fsl_enet_mdio.o(.text.ENET_ReadSMIData) for [Anonymous Symbol]
    fsl_enet_mdio.o(.rodata.enet_ops) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Init) for ENET_MDIO_Init
    fsl_enet_mdio.o(.rodata.enet_ops) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Write) for ENET_MDIO_Write
    fsl_enet_mdio.o(.rodata.enet_ops) refers to fsl_enet_mdio.o(.text.ENET_MDIO_Read) for ENET_MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.text.MDIO_Init) for MDIO_Init
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.text.MDIO_Write) for MDIO_Write
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) for PHY_KSZ8081_SetLinkSpeedDuplex
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.1
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Init) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Write) refers to fsl_phyksz8081.o(.text.MDIO_Write) for MDIO_Write
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Write) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Write) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_Read) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Read) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Read) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.2
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetAutoNegotiationStatus) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.2
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetLinkStatus) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.1
    fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.text.MDIO_Write) for MDIO_Write
    fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.4
    fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_SetLinkSpeedDuplex) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) for [Anonymous Symbol]
    fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) refers to fsl_phyksz8081.o(.text.MDIO_Write) for MDIO_Write
    fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) refers to fsl_phyksz8081.o(.text.MDIO_Read) for MDIO_Read
    fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) refers to fsl_phyksz8081.o(.rodata.str1.1) for .L.str.1
    fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_EnableLoopback) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) for [Anonymous Symbol]
    fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Init) refers to fsl_phyksz8081.o(.text.MDIO_Init) for [Anonymous Symbol]
    fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Read) refers to fsl_phyksz8081.o(.text.MDIO_Read) for [Anonymous Symbol]
    fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Write) refers to fsl_phyksz8081.o(.text.MDIO_Write) for [Anonymous Symbol]
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Init) for PHY_KSZ8081_Init
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Write) for PHY_KSZ8081_Write
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_Read) for PHY_KSZ8081_Read
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus) for PHY_KSZ8081_GetAutoNegotiationStatus
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus) for PHY_KSZ8081_GetLinkStatus
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex) for PHY_KSZ8081_GetLinkSpeedDuplex
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex) for PHY_KSZ8081_SetLinkSpeedDuplex
    fsl_phyksz8081.o(.rodata.phyksz8081_ops) refers to fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback) for PHY_KSZ8081_EnableLoopback
    tcpecho.o(.text.tcpecho_init) refers to tcpecho.o(.text.tcpecho_thread) for tcpecho_thread
    tcpecho.o(.text.tcpecho_init) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    tcpecho.o(.ARM.exidx.text.tcpecho_init) refers to tcpecho.o(.text.tcpecho_init) for [Anonymous Symbol]
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for netconn_new_with_proto_and_callback
    tcpecho.o(.text.tcpecho_thread) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_bind) for netconn_bind
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_listen_with_backlog) for netconn_listen_with_backlog
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_close) for netconn_close
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    tcpecho.o(.text.tcpecho_thread) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tcpecho.o(.text.tcpecho_thread) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_accept) for netconn_accept
    tcpecho.o(.text.tcpecho_thread) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_recv) for netconn_recv
    tcpecho.o(.text.tcpecho_thread) refers to netbuf.o(.text.netbuf_data) for netbuf_data
    tcpecho.o(.text.tcpecho_thread) refers to api_lib.o(.text.netconn_write_partly) for netconn_write_partly
    tcpecho.o(.text.tcpecho_thread) refers to netbuf.o(.text.netbuf_next) for netbuf_next
    tcpecho.o(.ARM.exidx.text.tcpecho_thread) refers to tcpecho.o(.text.tcpecho_thread) for [Anonymous Symbol]
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_enet_ptr) for ethernetif_enet_ptr
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif.o(.text.PHY_Init) for PHY_Init
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif.o(.text.PHY_GetAutoNegotiationStatus) for PHY_GetAutoNegotiationStatus
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif.o(.text.PHY_GetLinkStatus) for PHY_GetLinkStatus
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif.o(.rodata.str1.1) for .L.str.3
    enet_ethernetif.o(.text.ethernetif_phy_init) refers to enet_ethernetif.o(.text.PHY_GetLinkSpeedDuplex) for PHY_GetLinkSpeedDuplex
    enet_ethernetif.o(.ARM.exidx.text.ethernetif_phy_init) refers to enet_ethernetif.o(.text.ethernetif_phy_init) for [Anonymous Symbol]
    enet_ethernetif.o(.ARM.exidx.text.PHY_Init) refers to enet_ethernetif.o(.text.PHY_Init) for [Anonymous Symbol]
    enet_ethernetif.o(.ARM.exidx.text.PHY_GetAutoNegotiationStatus) refers to enet_ethernetif.o(.text.PHY_GetAutoNegotiationStatus) for [Anonymous Symbol]
    enet_ethernetif.o(.ARM.exidx.text.PHY_GetLinkStatus) refers to enet_ethernetif.o(.text.PHY_GetLinkStatus) for [Anonymous Symbol]
    enet_ethernetif.o(.ARM.exidx.text.PHY_GetLinkSpeedDuplex) refers to enet_ethernetif.o(.text.PHY_GetLinkSpeedDuplex) for [Anonymous Symbol]
    enet_ethernetif.o(.text.ethernetif_input) refers to enet_ethernetif.o(.rodata.str1.1) for .L.str.4
    enet_ethernetif.o(.text.ethernetif_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif.o(.text.ethernetif_input) refers to enet_ethernetif_kinetis.o(.text.ethernetif_linkinput) for ethernetif_linkinput
    enet_ethernetif.o(.text.ethernetif_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    enet_ethernetif.o(.ARM.exidx.text.ethernetif_input) refers to enet_ethernetif.o(.text.ethernetif_input) for [Anonymous Symbol]
    enet_ethernetif.o(.ARM.exidx.text.ethernetif_get_enet_base) refers to enet_ethernetif.o(.text.ethernetif_get_enet_base) for [Anonymous Symbol]
    enet_ethernetif.o(.text.ethernetif_init) refers to etharp.o(.text.etharp_output) for etharp_output
    enet_ethernetif.o(.text.ethernetif_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) for ethernetif_linkoutput
    enet_ethernetif.o(.text.ethernetif_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_enet_ptr) for ethernetif_enet_ptr
    enet_ethernetif.o(.text.ethernetif_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif.o(.text.ethernetif_init) refers to memmove.o(.text) for memcpy
    enet_ethernetif.o(.text.ethernetif_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) for ethernetif_enet_init
    enet_ethernetif.o(.text.ethernetif_init) refers to enet_ethernetif.o(.rodata.str1.1) for .L.str.4
    enet_ethernetif.o(.ARM.exidx.text.ethernetif_init) refers to enet_ethernetif.o(.text.ethernetif_init) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to fsl_enet.o(.text.ENET_GetDefaultConfig) for ENET_GetDefaultConfig
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc) for ethernetif_rx_alloc
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) for ethernetif_rx_free
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif.o(.text.ethernetif_phy_init) for ethernetif_phy_init
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ethernet_callback) for ethernet_callback
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_release) for ethernetif_rx_release
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to fsl_enet.o(.text.ENET_Init) for ENET_Init
    enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ENET_ActiveRead) for ENET_ActiveRead
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_enet_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif_enet_init) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_alloc) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_free) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernet_callback) refers to enet_ethernetif_kinetis.o(.text.ENET_DisableInterrupts) for ENET_DisableInterrupts
    enet_ethernetif_kinetis.o(.text.ethernet_callback) refers to enet_ethernetif.o(.text.ethernetif_input) for ethernetif_input
    enet_ethernetif_kinetis.o(.text.ethernet_callback) refers to enet_ethernetif_kinetis.o(.text.ENET_EnableInterrupts) for ENET_EnableInterrupts
    enet_ethernetif_kinetis.o(.text.ethernet_callback) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    enet_ethernetif_kinetis.o(.text.ethernet_callback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernet_callback) refers to enet_ethernetif_kinetis.o(.text.ethernet_callback) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.ARM.exidx.text.__NVIC_SetPriority) refers to enet_ethernetif_kinetis.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_release) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_free) for ethernetif_rx_free
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_release) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_release) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_ActiveRead) refers to enet_ethernetif_kinetis.o(.text.ENET_ActiveRead) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_enet_ptr) refers to enet_ethernetif_kinetis.o(.text.ethernetif_enet_ptr) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_linkinput) refers to fsl_enet.o(.text.ENET_GetRxFrame) for ENET_GetRxFrame
    enet_ethernetif_kinetis.o(.text.ethernetif_linkinput) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs) for ethernetif_rx_frame_to_pbufs
    enet_ethernetif_kinetis.o(.text.ethernetif_linkinput) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_linkinput) refers to enet_ethernetif_kinetis.o(.text.ethernetif_linkinput) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs) refers to enet_ethernetif_kinetis.o(.rodata.str1.1) for .L.str.5
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs) refers to pbuf.o(.text.pbuf_alloced_custom) for pbuf_alloced_custom
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_frame_to_pbufs) refers to enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) refers to sys_arch.o(.text.sys_assert) for sys_assert
    enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) refers to enet_ethernetif_kinetis.o(.bss.enet_get_tx_buffer.ucBuffer) for enet_get_tx_buffer.ucBuffer
    enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) refers to memmove.o(.text) for memcpy
    enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) refers to enet_ethernetif_kinetis.o(.text.enet_send_frame) for enet_send_frame
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_linkoutput) refers to enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.enet_send_frame) refers to fsl_enet.o(.text.ENET_SendFrame) for ENET_SendFrame
    enet_ethernetif_kinetis.o(.text.enet_send_frame) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    enet_ethernetif_kinetis.o(.ARM.exidx.text.enet_send_frame) refers to enet_ethernetif_kinetis.o(.text.enet_send_frame) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.bss.ethernetif0_init.ethernetif_0) for ethernetif0_init.ethernetif_0
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxBuffDescrip_0) for ethernetif0_init.rxBuffDescrip_0
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txBuffDescrip_0) for ethernetif0_init.txBuffDescrip_0
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxDataBuff_0) for ethernetif0_init.rxDataBuff_0
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txDataBuff_0) for ethernetif0_init.txDataBuff_0
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif.o(.text.ethernetif_get_enet_base) for ethernetif_get_enet_base
    enet_ethernetif_kinetis.o(.text.ethernetif0_init) refers to enet_ethernetif.o(.text.ethernetif_init) for ethernetif_init
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif0_init) refers to enet_ethernetif_kinetis.o(.text.ethernetif0_init) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_DisableInterrupts) refers to enet_ethernetif_kinetis.o(.text.ENET_DisableInterrupts) for [Anonymous Symbol]
    enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_EnableInterrupts) refers to enet_ethernetif_kinetis.o(.text.ENET_EnableInterrupts) for [Anonymous Symbol]
    sys_arch.o(.text.sys_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sys_arch.o(.text.sys_assert) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    sys_arch.o(.ARM.exidx.text.sys_assert) refers to sys_arch.o(.text.sys_assert) for [Anonymous Symbol]
    sys_arch.o(.text.lwip_rand) refers to sys_arch.o(.bss._rand_value) for _rand_value
    sys_arch.o(.ARM.exidx.text.lwip_rand) refers to sys_arch.o(.text.lwip_rand) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_new) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    sys_arch.o(.ARM.exidx.text.sys_mbox_new) refers to sys_arch.o(.text.sys_mbox_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_free) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    sys_arch.o(.text.sys_mbox_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_mbox_free) refers to sys_arch.o(.text.sys_mbox_free) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_post) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mbox_post) refers to sys_arch.o(.text.sys_mbox_post) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_trypost) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    sys_arch.o(.text.sys_mbox_trypost) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mbox_trypost) refers to sys_arch.o(.text.sys_mbox_trypost) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mbox_trypost_fromisr) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    sys_arch.o(.ARM.exidx.text.sys_mbox_trypost_fromisr) refers to sys_arch.o(.text.sys_mbox_trypost_fromisr) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_mbox_fetch) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.text.sys_arch_mbox_fetch) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    sys_arch.o(.ARM.exidx.text.sys_arch_mbox_fetch) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_mbox_tryfetch) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    sys_arch.o(.ARM.exidx.text.sys_arch_mbox_tryfetch) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    sys_arch.o(.text.sys_sem_new) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_sem_new) refers to sys_arch.o(.text.sys_sem_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_sem_wait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.text.sys_arch_sem_wait) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_arch_sem_wait) refers to sys_arch.o(.text.sys_arch_sem_wait) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_new) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    sys_arch.o(.ARM.exidx.text.sys_mutex_new) refers to sys_arch.o(.text.sys_mutex_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_lock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    sys_arch.o(.ARM.exidx.text.sys_mutex_lock) refers to sys_arch.o(.text.sys_mutex_lock) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_unlock) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_mutex_unlock) refers to sys_arch.o(.text.sys_mutex_unlock) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_mutex_free) refers to sys_arch.o(.text.sys_mutex_free) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_signal) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    sys_arch.o(.ARM.exidx.text.sys_sem_signal) refers to sys_arch.o(.text.sys_sem_signal) for [Anonymous Symbol]
    sys_arch.o(.text.sys_sem_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    sys_arch.o(.ARM.exidx.text.sys_sem_free) refers to sys_arch.o(.text.sys_sem_free) for [Anonymous Symbol]
    sys_arch.o(.ARM.exidx.text.sys_init) refers to sys_arch.o(.text.sys_init) for [Anonymous Symbol]
    sys_arch.o(.text.sys_now) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    sys_arch.o(.ARM.exidx.text.sys_now) refers to sys_arch.o(.text.sys_now) for [Anonymous Symbol]
    sys_arch.o(.text.sys_thread_new) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    sys_arch.o(.text.sys_thread_new) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sys_arch.o(.ARM.exidx.text.sys_thread_new) refers to sys_arch.o(.text.sys_thread_new) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_protect) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    sys_arch.o(.ARM.exidx.text.sys_arch_protect) refers to sys_arch.o(.text.sys_arch_protect) for [Anonymous Symbol]
    sys_arch.o(.text.sys_arch_unprotect) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    sys_arch.o(.ARM.exidx.text.sys_arch_unprotect) refers to sys_arch.o(.text.sys_arch_unprotect) for [Anonymous Symbol]
    sys_arch.o(.text.sys_lock_tcpip_core) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sys_arch.o(.text.sys_lock_tcpip_core) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    sys_arch.o(.text.sys_lock_tcpip_core) refers to sys_arch.o(.bss.lwip_core_lock_count) for lwip_core_lock_count
    sys_arch.o(.text.sys_lock_tcpip_core) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    sys_arch.o(.text.sys_lock_tcpip_core) refers to sys_arch.o(.bss.lwip_core_lock_holder_thread) for lwip_core_lock_holder_thread
    sys_arch.o(.ARM.exidx.text.sys_lock_tcpip_core) refers to sys_arch.o(.text.sys_lock_tcpip_core) for [Anonymous Symbol]
    sys_arch.o(.text.sys_unlock_tcpip_core) refers to sys_arch.o(.bss.lwip_core_lock_count) for lwip_core_lock_count
    sys_arch.o(.text.sys_unlock_tcpip_core) refers to sys_arch.o(.bss.lwip_core_lock_holder_thread) for lwip_core_lock_holder_thread
    sys_arch.o(.text.sys_unlock_tcpip_core) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    sys_arch.o(.text.sys_unlock_tcpip_core) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    sys_arch.o(.ARM.exidx.text.sys_unlock_tcpip_core) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for [Anonymous Symbol]
    sys_arch.o(.text.sys_mark_tcpip_thread) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    sys_arch.o(.text.sys_mark_tcpip_thread) refers to sys_arch.o(.bss.lwip_tcpip_thread) for lwip_tcpip_thread
    sys_arch.o(.ARM.exidx.text.sys_mark_tcpip_thread) refers to sys_arch.o(.text.sys_mark_tcpip_thread) for [Anonymous Symbol]
    sys_arch.o(.text.sys_check_core_locking) refers to sys_arch.o(.bss.lwip_tcpip_thread) for lwip_tcpip_thread
    sys_arch.o(.text.sys_check_core_locking) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    sys_arch.o(.text.sys_check_core_locking) refers to sys_arch.o(.bss.lwip_core_lock_holder_thread) for lwip_core_lock_holder_thread
    sys_arch.o(.text.sys_check_core_locking) refers to sys_arch.o(.bss.lwip_core_lock_count) for lwip_core_lock_count
    sys_arch.o(.text.sys_check_core_locking) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sys_arch.o(.ARM.exidx.text.sys_check_core_locking) refers to sys_arch.o(.text.sys_check_core_locking) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.lwip_socket_thread_init) refers to sockets.o(.text.lwip_socket_thread_init) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.lwip_socket_thread_cleanup) refers to sockets.o(.text.lwip_socket_thread_cleanup) for [Anonymous Symbol]
    sockets.o(.text.lwip_socket_dbg_get_socket) refers to sockets.o(.text.tryget_socket_unconn_nouse) for tryget_socket_unconn_nouse
    sockets.o(.ARM.exidx.text.lwip_socket_dbg_get_socket) refers to sockets.o(.text.lwip_socket_dbg_get_socket) for [Anonymous Symbol]
    sockets.o(.text.tryget_socket_unconn_nouse) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.ARM.exidx.text.tryget_socket_unconn_nouse) refers to sockets.o(.text.tryget_socket_unconn_nouse) for [Anonymous Symbol]
    sockets.o(.text.lwip_accept) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_accept) for netconn_accept
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_accept) refers to sockets.o(.text.alloc_socket) for alloc_socket
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_accept) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_accept) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.lwip_accept) refers to sockets.o(.text.free_socket) for free_socket
    sockets.o(.text.lwip_accept) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_accept) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.text.lwip_accept) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_accept) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_accept) refers to memmove.o(.text) for memcpy
    sockets.o(.ARM.exidx.text.lwip_accept) refers to sockets.o(.text.lwip_accept) for [Anonymous Symbol]
    sockets.o(.text.get_socket) refers to sockets.o(.text.tryget_socket) for tryget_socket
    sockets.o(.text.get_socket) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.get_socket) refers to sockets.o(.text.get_socket) for [Anonymous Symbol]
    sockets.o(.text.alloc_socket) refers to sockets.o(.bss.sockets) for sockets
    sockets.o(.text.alloc_socket) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.alloc_socket) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.alloc_socket) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.alloc_socket) refers to sockets.o(.text.alloc_socket) for [Anonymous Symbol]
    sockets.o(.text.free_socket) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.free_socket) refers to sockets.o(.text.free_socket_locked) for free_socket_locked
    sockets.o(.text.free_socket) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.free_socket) refers to sockets.o(.text.free_socket_free_elements) for free_socket_free_elements
    sockets.o(.ARM.exidx.text.free_socket) refers to sockets.o(.text.free_socket) for [Anonymous Symbol]
    sockets.o(.text.lwip_bind) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_bind) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_bind) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_bind) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_bind) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_bind) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_bind) refers to api_lib.o(.text.netconn_bind) for netconn_bind
    sockets.o(.ARM.exidx.text.lwip_bind) refers to sockets.o(.text.lwip_bind) for [Anonymous Symbol]
    sockets.o(.text.lwip_close) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_close) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_close) refers to api_lib.o(.text.netconn_prepare_delete) for netconn_prepare_delete
    sockets.o(.text.lwip_close) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_close) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_close) refers to sockets.o(.text.free_socket) for free_socket
    sockets.o(.ARM.exidx.text.lwip_close) refers to sockets.o(.text.lwip_close) for [Anonymous Symbol]
    sockets.o(.text.lwip_connect) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_connect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_connect) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_connect) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_connect) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_connect) refers to api_lib.o(.text.netconn_disconnect) for netconn_disconnect
    sockets.o(.text.lwip_connect) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_connect) refers to api_lib.o(.text.netconn_connect) for netconn_connect
    sockets.o(.ARM.exidx.text.lwip_connect) refers to sockets.o(.text.lwip_connect) for [Anonymous Symbol]
    sockets.o(.text.lwip_listen) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_listen) refers to api_lib.o(.text.netconn_listen_with_backlog) for netconn_listen_with_backlog
    sockets.o(.text.lwip_listen) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_listen) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_listen) refers to sockets.o(.text.lwip_listen) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recv_tcp) for lwip_recv_tcp
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recv_tcp_from) for lwip_recv_tcp_from
    sockets.o(.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for lwip_recvfrom_udp_raw
    sockets.o(.text.lwip_recvfrom) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_recvfrom) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_recvfrom) refers to sockets.o(.text.lwip_recvfrom) for [Anonymous Symbol]
    sockets.o(.text.lwip_recv_tcp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_free_header) for pbuf_free_header
    sockets.o(.text.lwip_recv_tcp) refers to api_lib.o(.text.netconn_recv_tcp_pbuf_flags) for netconn_recv_tcp_pbuf_flags
    sockets.o(.text.lwip_recv_tcp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_recv_tcp) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_recv_tcp) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_recv_tcp) refers to api_lib.o(.text.netconn_tcp_recvd) for netconn_tcp_recvd
    sockets.o(.ARM.exidx.text.lwip_recv_tcp) refers to sockets.o(.text.lwip_recv_tcp) for [Anonymous Symbol]
    sockets.o(.text.lwip_recv_tcp_from) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_recv_tcp_from) refers to sockets.o(.text.lwip_sock_make_addr) for lwip_sock_make_addr
    sockets.o(.ARM.exidx.text.lwip_recv_tcp_from) refers to sockets.o(.text.lwip_recv_tcp_from) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to sockets.o(.text.lwip_sock_make_addr) for lwip_sock_make_addr
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) for netconn_recv_udp_raw_netbuf_flags
    sockets.o(.text.lwip_recvfrom_udp_raw) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.lwip_recvfrom_udp_raw) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for [Anonymous Symbol]
    sockets.o(.text.lwip_read) refers to sockets.o(.text.lwip_recvfrom) for lwip_recvfrom
    sockets.o(.ARM.exidx.text.lwip_read) refers to sockets.o(.text.lwip_read) for [Anonymous Symbol]
    sockets.o(.text.lwip_readv) refers to sockets.o(.text.lwip_recvmsg) for lwip_recvmsg
    sockets.o(.ARM.exidx.text.lwip_readv) refers to sockets.o(.text.lwip_readv) for [Anonymous Symbol]
    sockets.o(.text.lwip_recvmsg) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_recvmsg) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_recvmsg) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recv_tcp) for lwip_recv_tcp
    sockets.o(.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recvfrom_udp_raw) for lwip_recvfrom_udp_raw
    sockets.o(.ARM.exidx.text.lwip_recvmsg) refers to sockets.o(.text.lwip_recvmsg) for [Anonymous Symbol]
    sockets.o(.text.lwip_recv) refers to sockets.o(.text.lwip_recvfrom) for lwip_recvfrom
    sockets.o(.ARM.exidx.text.lwip_recv) refers to sockets.o(.text.lwip_recv) for [Anonymous Symbol]
    sockets.o(.text.lwip_send) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_send) refers to api_lib.o(.text.netconn_write_partly) for netconn_write_partly
    sockets.o(.text.lwip_send) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_send) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_send) refers to sockets.o(.text.lwip_sendto) for lwip_sendto
    sockets.o(.ARM.exidx.text.lwip_send) refers to sockets.o(.text.lwip_send) for [Anonymous Symbol]
    sockets.o(.text.lwip_sendto) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_sendto) refers to sockets.o(.text.lwip_send) for lwip_send
    sockets.o(.text.lwip_sendto) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_sendto) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_sendto) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_sendto) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_sendto) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_sendto) refers to netbuf.o(.text.netbuf_ref) for netbuf_ref
    sockets.o(.text.lwip_sendto) refers to api_lib.o(.text.netconn_send) for netconn_send
    sockets.o(.text.lwip_sendto) refers to netbuf.o(.text.netbuf_free) for netbuf_free
    sockets.o(.ARM.exidx.text.lwip_sendto) refers to sockets.o(.text.lwip_sendto) for [Anonymous Symbol]
    sockets.o(.text.lwip_sendmsg) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_sendmsg) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_sendmsg) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_sendmsg) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_sendmsg) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_sendmsg) refers to api_lib.o(.text.netconn_write_vectors_partly) for netconn_write_vectors_partly
    sockets.o(.text.lwip_sendmsg) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_sendmsg) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.lwip_sendmsg) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    sockets.o(.text.lwip_sendmsg) refers to netbuf.o(.text.netbuf_free) for netbuf_free
    sockets.o(.text.lwip_sendmsg) refers to api_lib.o(.text.netconn_send) for netconn_send
    sockets.o(.ARM.exidx.text.lwip_sendmsg) refers to sockets.o(.text.lwip_sendmsg) for [Anonymous Symbol]
    sockets.o(.text.lwip_socket) refers to sockets.o(.text.event_callback) for event_callback
    sockets.o(.text.lwip_socket) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for netconn_new_with_proto_and_callback
    sockets.o(.text.lwip_socket) refers to sockets.o(.text.alloc_socket) for alloc_socket
    sockets.o(.text.lwip_socket) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.text.lwip_socket) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_socket) refers to sockets.o(.text.lwip_socket) for [Anonymous Symbol]
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.event_callback) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.event_callback) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.event_callback) refers to sockets.o(.text.select_check_waiters) for select_check_waiters
    sockets.o(.ARM.exidx.text.event_callback) refers to sockets.o(.text.event_callback) for [Anonymous Symbol]
    sockets.o(.text.lwip_write) refers to sockets.o(.text.lwip_send) for lwip_send
    sockets.o(.ARM.exidx.text.lwip_write) refers to sockets.o(.text.lwip_write) for [Anonymous Symbol]
    sockets.o(.text.lwip_writev) refers to sockets.o(.text.lwip_sendmsg) for lwip_sendmsg
    sockets.o(.ARM.exidx.text.lwip_writev) refers to sockets.o(.text.lwip_writev) for [Anonymous Symbol]
    sockets.o(.text.lwip_select) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_select) refers to sockets.o(.text.lwip_selscan) for lwip_selscan
    sockets.o(.text.lwip_select) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sockets.o(.text.lwip_select) refers to sockets.o(.text.lwip_link_select_cb) for lwip_link_select_cb
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_select) refers to sockets.o(.text.tryget_socket_unconn_locked) for tryget_socket_unconn_locked
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sockets.o(.text.lwip_select) refers to sockets.o(.text.tryget_socket_unconn_nouse) for tryget_socket_unconn_nouse
    sockets.o(.text.lwip_select) refers to sockets.o(.rodata.str1.1) for .L.str.16
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_select) refers to sockets.o(.text.lwip_unlink_select_cb) for lwip_unlink_select_cb
    sockets.o(.text.lwip_select) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sockets.o(.ARM.exidx.text.lwip_select) refers to sockets.o(.text.lwip_select) for [Anonymous Symbol]
    sockets.o(.text.lwip_selscan) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_selscan) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_selscan) refers to sockets.o(.text.tryget_socket_unconn_locked) for tryget_socket_unconn_locked
    sockets.o(.text.lwip_selscan) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.text.lwip_selscan) refers to sockets.o(.rodata.str1.1) for .L.str.30
    sockets.o(.text.lwip_selscan) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.lwip_selscan) refers to sockets.o(.text.lwip_selscan) for [Anonymous Symbol]
    sockets.o(.text.lwip_link_select_cb) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_link_select_cb) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.lwip_link_select_cb) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.ARM.exidx.text.lwip_link_select_cb) refers to sockets.o(.text.lwip_link_select_cb) for [Anonymous Symbol]
    sockets.o(.text.tryget_socket_unconn_locked) refers to sockets.o(.text.tryget_socket_unconn_nouse) for tryget_socket_unconn_nouse
    sockets.o(.ARM.exidx.text.tryget_socket_unconn_locked) refers to sockets.o(.text.tryget_socket_unconn_locked) for [Anonymous Symbol]
    sockets.o(.text.lwip_unlink_select_cb) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_unlink_select_cb) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.lwip_unlink_select_cb) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_unlink_select_cb) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.ARM.exidx.text.lwip_unlink_select_cb) refers to sockets.o(.text.lwip_unlink_select_cb) for [Anonymous Symbol]
    sockets.o(.text.lwip_poll) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    sockets.o(.text.lwip_poll) refers to sockets.o(.rodata.str1.1) for .L.str.3
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_poll) refers to sockets.o(.text.lwip_pollscan) for lwip_pollscan
    sockets.o(.text.lwip_poll) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sockets.o(.text.lwip_poll) refers to sockets.o(.text.lwip_link_select_cb) for lwip_link_select_cb
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sockets.o(.text.lwip_poll) refers to sockets.o(.text.lwip_unlink_select_cb) for lwip_unlink_select_cb
    sockets.o(.text.lwip_poll) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sockets.o(.ARM.exidx.text.lwip_poll) refers to sockets.o(.text.lwip_poll) for [Anonymous Symbol]
    sockets.o(.text.lwip_pollscan) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    sockets.o(.text.lwip_pollscan) refers to sockets.o(.text.tryget_socket_unconn_locked) for tryget_socket_unconn_locked
    sockets.o(.text.lwip_pollscan) refers to sockets.o(.rodata.str1.1) for .L.str.16
    sockets.o(.text.lwip_pollscan) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.text.lwip_pollscan) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    sockets.o(.ARM.exidx.text.lwip_pollscan) refers to sockets.o(.text.lwip_pollscan) for [Anonymous Symbol]
    sockets.o(.text.lwip_shutdown) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_shutdown) refers to api_lib.o(.text.netconn_shutdown) for netconn_shutdown
    sockets.o(.text.lwip_shutdown) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_shutdown) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_shutdown) refers to sockets.o(.text.lwip_shutdown) for [Anonymous Symbol]
    sockets.o(.text.lwip_getpeername) refers to sockets.o(.text.lwip_getaddrname) for lwip_getaddrname
    sockets.o(.ARM.exidx.text.lwip_getpeername) refers to sockets.o(.text.lwip_getpeername) for [Anonymous Symbol]
    sockets.o(.text.lwip_getaddrname) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_getaddrname) refers to api_lib.o(.text.netconn_getaddr) for netconn_getaddr
    sockets.o(.text.lwip_getaddrname) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.text.lwip_getaddrname) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_getaddrname) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_getaddrname) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_getaddrname) refers to memmove.o(.text) for memcpy
    sockets.o(.ARM.exidx.text.lwip_getaddrname) refers to sockets.o(.text.lwip_getaddrname) for [Anonymous Symbol]
    sockets.o(.text.lwip_getsockname) refers to sockets.o(.text.lwip_getaddrname) for lwip_getaddrname
    sockets.o(.ARM.exidx.text.lwip_getsockname) refers to sockets.o(.text.lwip_getsockname) for [Anonymous Symbol]
    sockets.o(.text.lwip_getsockopt) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_getsockopt) refers to sockets.o(.text.lwip_getsockopt_impl) for lwip_getsockopt_impl
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.text.lwip_getsockopt) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_getsockopt) refers to sockets.o(.text.lwip_getsockopt) for [Anonymous Symbol]
    sockets.o(.text.lwip_getsockopt_impl) refers to sockets.o(.text.tryget_socket) for tryget_socket
    sockets.o(.text.lwip_getsockopt_impl) refers to sockets.o(.text.lwip_sockopt_to_ipopt) for lwip_sockopt_to_ipopt
    sockets.o(.text.lwip_getsockopt_impl) refers to api_lib.o(.text.netconn_err) for netconn_err
    sockets.o(.text.lwip_getsockopt_impl) refers to err.o(.text.err_to_errno) for err_to_errno
    sockets.o(.ARM.exidx.text.lwip_getsockopt_impl) refers to sockets.o(.text.lwip_getsockopt_impl) for [Anonymous Symbol]
    sockets.o(.text.lwip_setsockopt) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_setsockopt) refers to sockets.o(.text.lwip_setsockopt_impl) for lwip_setsockopt_impl
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.text.lwip_setsockopt) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_setsockopt) refers to sockets.o(.text.lwip_setsockopt) for [Anonymous Symbol]
    sockets.o(.text.lwip_setsockopt_impl) refers to sockets.o(.text.tryget_socket) for tryget_socket
    sockets.o(.text.lwip_setsockopt_impl) refers to netif.o(.text.netif_find) for netif_find
    sockets.o(.text.lwip_setsockopt_impl) refers to sockets.o(.text.lwip_sockopt_to_ipopt) for lwip_sockopt_to_ipopt
    sockets.o(.text.lwip_setsockopt_impl) refers to tcp.o(.text.tcp_bind_netif) for tcp_bind_netif
    sockets.o(.text.lwip_setsockopt_impl) refers to udp.o(.text.udp_bind_netif) for udp_bind_netif
    sockets.o(.text.lwip_setsockopt_impl) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.lwip_setsockopt_impl) refers to sockets.o(.text.lwip_setsockopt_impl) for [Anonymous Symbol]
    sockets.o(.text.lwip_ioctl) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_ioctl) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_ioctl) refers to sockets.o(.text.lwip_ioctl) for [Anonymous Symbol]
    sockets.o(.text.lwip_fcntl) refers to sockets.o(.text.get_socket) for get_socket
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.text.lwip_fcntl) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    sockets.o(.ARM.exidx.text.lwip_fcntl) refers to sockets.o(.text.lwip_fcntl) for [Anonymous Symbol]
    sockets.o(.text.lwip_inet_ntop) refers to ip4_addr.o(.text.ip4addr_ntoa_r) for ip4addr_ntoa_r
    sockets.o(.text.lwip_inet_ntop) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_inet_ntop) refers to sockets.o(.text.lwip_inet_ntop) for [Anonymous Symbol]
    sockets.o(.text.lwip_inet_pton) refers to ip4_addr.o(.text.ip4addr_aton) for ip4addr_aton
    sockets.o(.text.lwip_inet_pton) refers to sys_arch.o(.bss.errno) for errno
    sockets.o(.ARM.exidx.text.lwip_inet_pton) refers to sockets.o(.text.lwip_inet_pton) for [Anonymous Symbol]
    sockets.o(.text.tryget_socket) refers to sockets.o(.text.tryget_socket_unconn) for tryget_socket_unconn
    sockets.o(.ARM.exidx.text.tryget_socket) refers to sockets.o(.text.tryget_socket) for [Anonymous Symbol]
    sockets.o(.text.tryget_socket_unconn) refers to sockets.o(.text.tryget_socket_unconn_nouse) for tryget_socket_unconn_nouse
    sockets.o(.ARM.exidx.text.tryget_socket_unconn) refers to sockets.o(.text.tryget_socket_unconn) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.free_socket_locked) refers to sockets.o(.text.free_socket_locked) for [Anonymous Symbol]
    sockets.o(.text.free_socket_free_elements) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    sockets.o(.text.free_socket_free_elements) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    sockets.o(.text.free_socket_free_elements) refers to api_lib.o(.text.netconn_delete) for netconn_delete
    sockets.o(.ARM.exidx.text.free_socket_free_elements) refers to sockets.o(.text.free_socket_free_elements) for [Anonymous Symbol]
    sockets.o(.text.lwip_sock_make_addr) refers to def.o(.text.lwip_htons) for lwip_htons
    sockets.o(.text.lwip_sock_make_addr) refers to memseta.o(.text) for memset
    sockets.o(.text.lwip_sock_make_addr) refers to memmove.o(.text) for memcpy
    sockets.o(.text.lwip_sock_make_addr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.lwip_sock_make_addr) refers to sockets.o(.text.lwip_sock_make_addr) for [Anonymous Symbol]
    sockets.o(.text.select_check_waiters) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    sockets.o(.text.select_check_waiters) refers to sockets.o(.bss.select_cb_list) for select_cb_list
    sockets.o(.text.select_check_waiters) refers to sockets.o(.text.lwip_poll_should_wake) for lwip_poll_should_wake
    sockets.o(.text.select_check_waiters) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    sockets.o(.ARM.exidx.text.select_check_waiters) refers to sockets.o(.text.select_check_waiters) for [Anonymous Symbol]
    sockets.o(.ARM.exidx.text.lwip_poll_should_wake) refers to sockets.o(.text.lwip_poll_should_wake) for [Anonymous Symbol]
    sockets.o(.text.lwip_sockopt_to_ipopt) refers to sys_arch.o(.text.sys_assert) for sys_assert
    sockets.o(.ARM.exidx.text.lwip_sockopt_to_ipopt) refers to sockets.o(.text.lwip_sockopt_to_ipopt) for [Anonymous Symbol]
    netifapi.o(.ARM.exidx.text.netifapi_arp_add) refers to netifapi.o(.text.netifapi_arp_add) for [Anonymous Symbol]
    netifapi.o(.ARM.exidx.text.netifapi_arp_remove) refers to netifapi.o(.text.netifapi_arp_remove) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_netif_add) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netifapi.o(.text.netifapi_netif_add) refers to netifapi.o(.text.netifapi_do_netif_add) for netifapi_do_netif_add
    netifapi.o(.text.netifapi_netif_add) refers to tcpip.o(.text.tcpip_api_call) for tcpip_api_call
    netifapi.o(.ARM.exidx.text.netifapi_netif_add) refers to netifapi.o(.text.netifapi_netif_add) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_do_netif_add) refers to netif.o(.text.netif_add) for netif_add
    netifapi.o(.ARM.exidx.text.netifapi_do_netif_add) refers to netifapi.o(.text.netifapi_do_netif_add) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_netif_set_addr) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netifapi.o(.text.netifapi_netif_set_addr) refers to netifapi.o(.text.netifapi_do_netif_set_addr) for netifapi_do_netif_set_addr
    netifapi.o(.text.netifapi_netif_set_addr) refers to tcpip.o(.text.tcpip_api_call) for tcpip_api_call
    netifapi.o(.ARM.exidx.text.netifapi_netif_set_addr) refers to netifapi.o(.text.netifapi_netif_set_addr) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_do_netif_set_addr) refers to netif.o(.text.netif_set_addr) for netif_set_addr
    netifapi.o(.ARM.exidx.text.netifapi_do_netif_set_addr) refers to netifapi.o(.text.netifapi_do_netif_set_addr) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_netif_common) refers to netifapi.o(.text.netifapi_do_netif_common) for netifapi_do_netif_common
    netifapi.o(.text.netifapi_netif_common) refers to tcpip.o(.text.tcpip_api_call) for tcpip_api_call
    netifapi.o(.ARM.exidx.text.netifapi_netif_common) refers to netifapi.o(.text.netifapi_netif_common) for [Anonymous Symbol]
    netifapi.o(.ARM.exidx.text.netifapi_do_netif_common) refers to netifapi.o(.text.netifapi_do_netif_common) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_netif_name_to_index) refers to netifapi.o(.text.netifapi_do_name_to_index) for netifapi_do_name_to_index
    netifapi.o(.text.netifapi_netif_name_to_index) refers to tcpip.o(.text.tcpip_api_call) for tcpip_api_call
    netifapi.o(.ARM.exidx.text.netifapi_netif_name_to_index) refers to netifapi.o(.text.netifapi_netif_name_to_index) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_do_name_to_index) refers to netif.o(.text.netif_name_to_index) for netif_name_to_index
    netifapi.o(.ARM.exidx.text.netifapi_do_name_to_index) refers to netifapi.o(.text.netifapi_do_name_to_index) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_netif_index_to_name) refers to netifapi.o(.text.netifapi_do_index_to_name) for netifapi_do_index_to_name
    netifapi.o(.text.netifapi_netif_index_to_name) refers to tcpip.o(.text.tcpip_api_call) for tcpip_api_call
    netifapi.o(.ARM.exidx.text.netifapi_netif_index_to_name) refers to netifapi.o(.text.netifapi_netif_index_to_name) for [Anonymous Symbol]
    netifapi.o(.text.netifapi_do_index_to_name) refers to netif.o(.text.netif_index_to_name) for netif_index_to_name
    netifapi.o(.ARM.exidx.text.netifapi_do_index_to_name) refers to netifapi.o(.text.netifapi_do_index_to_name) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    netbuf.o(.text.netbuf_new) refers to memseta.o(.text) for memset
    netbuf.o(.ARM.exidx.text.netbuf_new) refers to netbuf.o(.text.netbuf_new) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_delete) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_delete) refers to memp.o(.text.memp_free) for memp_free
    netbuf.o(.ARM.exidx.text.netbuf_delete) refers to netbuf.o(.text.netbuf_delete) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_alloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_alloc) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    netbuf.o(.text.netbuf_alloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    netbuf.o(.text.netbuf_alloc) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_alloc) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_alloc) refers to netbuf.o(.text.netbuf_alloc) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_free) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_free) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_free) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_free) refers to netbuf.o(.text.netbuf_free) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_ref) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    netbuf.o(.text.netbuf_ref) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    netbuf.o(.text.netbuf_ref) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_ref) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_ref) refers to netbuf.o(.text.netbuf_ref) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_chain) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    netbuf.o(.text.netbuf_chain) refers to memp.o(.text.memp_free) for memp_free
    netbuf.o(.text.netbuf_chain) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_chain) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_chain) refers to netbuf.o(.text.netbuf_chain) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_data) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_data) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_data) refers to netbuf.o(.text.netbuf_data) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_next) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_next) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_next) refers to netbuf.o(.text.netbuf_next) for [Anonymous Symbol]
    netbuf.o(.text.netbuf_first) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netbuf.o(.text.netbuf_first) refers to netbuf.o(.rodata.str1.1) for .L.str.1
    netbuf.o(.ARM.exidx.text.netbuf_first) refers to netbuf.o(.text.netbuf_first) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_inpkt) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_inpkt) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_inpkt) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_inpkt) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_inpkt) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.tcpip_inpkt) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_inpkt) refers to tcpip.o(.text.tcpip_inpkt) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_input) refers to ethernet.o(.text.ethernet_input) for ethernet_input
    tcpip.o(.text.tcpip_input) refers to ip4.o(.text.ip4_input) for ip4_input
    tcpip.o(.text.tcpip_input) refers to tcpip.o(.text.tcpip_inpkt) for tcpip_inpkt
    tcpip.o(.ARM.exidx.text.tcpip_input) refers to tcpip.o(.text.tcpip_input) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callback) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_callback) refers to sys_arch.o(.text.sys_mbox_post) for sys_mbox_post
    tcpip.o(.ARM.exidx.text.tcpip_callback) refers to tcpip.o(.text.tcpip_callback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_try_callback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_try_callback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_try_callback) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_try_callback) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.text.tcpip_try_callback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.text.tcpip_try_callback) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_try_callback) refers to tcpip.o(.text.tcpip_try_callback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_send_msg_wait_sem) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    tcpip.o(.text.tcpip_send_msg_wait_sem) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    tcpip.o(.ARM.exidx.text.tcpip_send_msg_wait_sem) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_api_call) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    tcpip.o(.text.tcpip_api_call) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    tcpip.o(.ARM.exidx.text.tcpip_api_call) refers to tcpip.o(.text.tcpip_api_call) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_new) refers to tcpip.o(.text.tcpip_callbackmsg_new) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_delete) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_delete) refers to tcpip.o(.text.tcpip_callbackmsg_delete) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_callbackmsg_trycallback) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback) refers to tcpip.o(.text.tcpip_callbackmsg_trycallback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.rodata.str1.1) for .L.str
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) refers to sys_arch.o(.text.sys_mbox_trypost_fromisr) for sys_mbox_trypost_fromisr
    tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback_fromisr) refers to tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_callback_wait) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    tcpip.o(.text.tcpip_callback_wait) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    tcpip.o(.ARM.exidx.text.tcpip_callback_wait) refers to tcpip.o(.text.tcpip_callback_wait) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_init) refers to init.o(.text.lwip_init) for lwip_init
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_init_done) for tcpip_init_done
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_init_done_arg) for tcpip_init_done_arg
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.bss.lock_tcpip_core) for lock_tcpip_core
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_mutex_new) for sys_mutex_new
    tcpip.o(.text.tcpip_init) refers to tcpip.o(.text.tcpip_thread) for tcpip_thread
    tcpip.o(.text.tcpip_init) refers to sys_arch.o(.text.sys_thread_new) for sys_thread_new
    tcpip.o(.ARM.exidx.text.tcpip_init) refers to tcpip.o(.text.tcpip_init) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_mark_tcpip_thread) for sys_mark_tcpip_thread
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.tcpip_init_done) for tcpip_init_done
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.bss.tcpip_init_done_arg) for tcpip_init_done_arg
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.rodata.str1.1) for .L.str.4
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.text.tcpip_thread_handle_msg) for tcpip_thread_handle_msg
    tcpip.o(.text.tcpip_thread) refers to tcpip.o(.text.tcpip_timeouts_mbox_fetch) for tcpip_timeouts_mbox_fetch
    tcpip.o(.text.tcpip_thread) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.ARM.exidx.text.tcpip_thread) refers to tcpip.o(.text.tcpip_thread) for [Anonymous Symbol]
    tcpip.o(.text.pbuf_free_callback) refers to tcpip.o(.text.pbuf_free_int) for pbuf_free_int
    tcpip.o(.text.pbuf_free_callback) refers to tcpip.o(.text.tcpip_try_callback) for tcpip_try_callback
    tcpip.o(.ARM.exidx.text.pbuf_free_callback) refers to tcpip.o(.text.pbuf_free_callback) for [Anonymous Symbol]
    tcpip.o(.text.pbuf_free_int) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcpip.o(.ARM.exidx.text.pbuf_free_int) refers to tcpip.o(.text.pbuf_free_int) for [Anonymous Symbol]
    tcpip.o(.text.mem_free_callback) refers to mem.o(.text.mem_free) for mem_free
    tcpip.o(.text.mem_free_callback) refers to tcpip.o(.text.tcpip_try_callback) for tcpip_try_callback
    tcpip.o(.ARM.exidx.text.mem_free_callback) refers to tcpip.o(.text.mem_free_callback) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to tcpip.o(.bss.tcpip_mbox) for tcpip_mbox
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to timeouts.o(.text.sys_check_timeouts) for sys_check_timeouts
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to timeouts.o(.text.sys_timeouts_sleeptime) for sys_timeouts_sleeptime
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    tcpip.o(.text.tcpip_timeouts_mbox_fetch) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    tcpip.o(.ARM.exidx.text.tcpip_timeouts_mbox_fetch) refers to tcpip.o(.text.tcpip_timeouts_mbox_fetch) for [Anonymous Symbol]
    tcpip.o(.text.tcpip_thread_handle_msg) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcpip.o(.text.tcpip_thread_handle_msg) refers to memp.o(.text.memp_free) for memp_free
    tcpip.o(.text.tcpip_thread_handle_msg) refers to tcpip.o(.rodata.str1.1) for .L.str.4
    tcpip.o(.text.tcpip_thread_handle_msg) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcpip.o(.ARM.exidx.text.tcpip_thread_handle_msg) refers to tcpip.o(.text.tcpip_thread_handle_msg) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_reset) for netconn_reset
    api_msg.o(.text.lwip_netconn_is_err_msg) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.ARM.exidx.text.lwip_netconn_is_err_msg) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.pcb_new) for pcb_new
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_newconn) refers to api_msg.o(.text.lwip_netconn_do_newconn) for [Anonymous Symbol]
    api_msg.o(.text.pcb_new) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.pcb_new) refers to udp.o(.text.udp_new_ip_type) for udp_new_ip_type
    api_msg.o(.text.pcb_new) refers to api_msg.o(.text.recv_udp) for recv_udp
    api_msg.o(.text.pcb_new) refers to udp.o(.text.udp_recv) for udp_recv
    api_msg.o(.text.pcb_new) refers to tcp.o(.text.tcp_new_ip_type) for tcp_new_ip_type
    api_msg.o(.text.pcb_new) refers to api_msg.o(.text.setup_tcp) for setup_tcp
    api_msg.o(.ARM.exidx.text.pcb_new) refers to api_msg.o(.text.pcb_new) for [Anonymous Symbol]
    api_msg.o(.text.netconn_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.netconn_alloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.netconn_alloc) refers to memp.o(.text.memp_free) for memp_free
    api_msg.o(.ARM.exidx.text.netconn_alloc) refers to api_msg.o(.text.netconn_alloc) for [Anonymous Symbol]
    api_msg.o(.text.netconn_free) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.netconn_free) refers to api_msg.o(.rodata.str1.1) for .L.str.4
    api_msg.o(.text.netconn_free) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    api_msg.o(.text.netconn_free) refers to memp.o(.text.memp_free) for memp_free
    api_msg.o(.ARM.exidx.text.netconn_free) refers to api_msg.o(.text.netconn_free) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.netconn_drain) for netconn_drain
    api_msg.o(.text.lwip_netconn_do_delconn) refers to udp.o(.text.udp_remove) for udp_remove
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.rodata.str1.1) for .L.str.7
    api_msg.o(.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_delconn) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_delconn) refers to api_msg.o(.text.lwip_netconn_do_delconn) for [Anonymous Symbol]
    api_msg.o(.text.netconn_drain) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_msg.o(.text.netconn_drain) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for lwip_netconn_is_err_msg
    api_msg.o(.text.netconn_drain) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.text.netconn_drain) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.netconn_drain) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_msg.o(.text.netconn_drain) refers to tcp.o(.text.tcp_abort) for tcp_abort
    api_msg.o(.ARM.exidx.text.netconn_drain) refers to api_msg.o(.text.netconn_drain) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.rodata.str1.1) for .L.str.22
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_accept) for tcp_accept
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_shutdown) for tcp_shutdown
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_close) for tcp_close
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to tcp.o(.text.tcp_abort) for tcp_abort
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.lwip_netconn_do_close_internal) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_close_internal) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_bind) refers to udp.o(.text.udp_bind) for udp_bind
    api_msg.o(.text.lwip_netconn_do_bind) refers to tcp.o(.text.tcp_bind) for tcp_bind
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind) refers to api_msg.o(.text.lwip_netconn_do_bind) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to udp.o(.text.udp_bind_netif) for udp_bind_netif
    api_msg.o(.text.lwip_netconn_do_bind_if) refers to tcp.o(.text.tcp_bind_netif) for tcp_bind_netif
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind_if) refers to api_msg.o(.text.lwip_netconn_do_bind_if) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_connect) refers to udp.o(.text.udp_connect) for udp_connect
    api_msg.o(.text.lwip_netconn_do_connect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.setup_tcp) for setup_tcp
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.text.lwip_netconn_do_connected) for lwip_netconn_do_connected
    api_msg.o(.text.lwip_netconn_do_connect) refers to tcp.o(.text.tcp_connect) for tcp_connect
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_connect) refers to api_msg.o(.rodata.str1.1) for .L.str.8
    api_msg.o(.text.lwip_netconn_do_connect) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_connect) refers to api_msg.o(.text.lwip_netconn_do_connect) for [Anonymous Symbol]
    api_msg.o(.text.setup_tcp) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.setup_tcp) refers to api_msg.o(.text.recv_tcp) for recv_tcp
    api_msg.o(.text.setup_tcp) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.setup_tcp) refers to api_msg.o(.text.sent_tcp) for sent_tcp
    api_msg.o(.text.setup_tcp) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.setup_tcp) refers to api_msg.o(.text.poll_tcp) for poll_tcp
    api_msg.o(.text.setup_tcp) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.setup_tcp) refers to api_msg.o(.text.err_tcp) for err_tcp
    api_msg.o(.text.setup_tcp) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.ARM.exidx.text.setup_tcp) refers to api_msg.o(.text.setup_tcp) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_connected) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_connected) refers to api_msg.o(.text.setup_tcp) for setup_tcp
    api_msg.o(.text.lwip_netconn_do_connected) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_connected) refers to api_msg.o(.text.lwip_netconn_do_connected) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_disconnect) refers to udp.o(.text.udp_disconnect) for udp_disconnect
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_disconnect) refers to api_msg.o(.text.lwip_netconn_do_disconnect) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_listen) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for tcp_listen_with_backlog_and_err
    api_msg.o(.text.lwip_netconn_do_listen) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.lwip_netconn_do_listen) refers to sys_arch.o(.text.sys_mbox_new) for sys_mbox_new
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_close) for tcp_close
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.lwip_netconn_do_listen) refers to api_msg.o(.text.accept_function) for accept_function
    api_msg.o(.text.lwip_netconn_do_listen) refers to tcp.o(.text.tcp_accept) for tcp_accept
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_listen) refers to api_msg.o(.text.lwip_netconn_do_listen) for [Anonymous Symbol]
    api_msg.o(.text.accept_function) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.netconn_alloc) for netconn_alloc
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.setup_tcp) for setup_tcp
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_backlog_delayed) for tcp_backlog_delayed
    api_msg.o(.text.accept_function) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_arg) for tcp_arg
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_recv) for tcp_recv
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_sent) for tcp_sent
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_poll) for tcp_poll
    api_msg.o(.text.accept_function) refers to tcp.o(.text.tcp_err) for tcp_err
    api_msg.o(.text.accept_function) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_msg.o(.text.accept_function) refers to api_msg.o(.text.lwip_netconn_err_to_msg) for lwip_netconn_err_to_msg
    api_msg.o(.ARM.exidx.text.accept_function) refers to api_msg.o(.text.accept_function) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_send) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_msg.o(.text.lwip_netconn_do_send) refers to udp.o(.text.udp_sendto) for udp_sendto
    api_msg.o(.text.lwip_netconn_do_send) refers to udp.o(.text.udp_send) for udp_send
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_send) refers to api_msg.o(.text.lwip_netconn_do_send) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_recv) refers to tcp.o(.text.tcp_recved) for tcp_recved
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_recv) refers to api_msg.o(.text.lwip_netconn_do_recv) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_accepted) refers to tcp.o(.text.tcp_backlog_accepted) for tcp_backlog_accepted
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_accepted) refers to api_msg.o(.text.lwip_netconn_do_accepted) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_write) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_msg.o(.text.lwip_netconn_do_write) refers to api_msg.o(.rodata.str1.1) for .L.str.7
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_write) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_write) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_write) refers to api_msg.o(.text.lwip_netconn_do_write) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_writemore) refers to api_msg.o(.rodata.str1.1) for .L.str.25
    api_msg.o(.text.lwip_netconn_do_writemore) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_writemore) refers to tcp_out.o(.text.tcp_write) for tcp_write
    api_msg.o(.text.lwip_netconn_do_writemore) refers to tcp_out.o(.text.tcp_output) for tcp_output
    api_msg.o(.text.lwip_netconn_do_writemore) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_writemore) refers to api_msg.o(.text.lwip_netconn_do_writemore) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_getaddr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_getaddr) refers to api_msg.o(.text.lwip_netconn_do_getaddr) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.text.netconn_drain) for netconn_drain
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.rodata.str1.1) for .L.str.7
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_do_close) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_unlock_tcpip_core) for sys_unlock_tcpip_core
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    api_msg.o(.text.lwip_netconn_do_close) refers to sys_arch.o(.text.sys_lock_tcpip_core) for sys_lock_tcpip_core
    api_msg.o(.ARM.exidx.text.lwip_netconn_do_close) refers to api_msg.o(.text.lwip_netconn_do_close) for [Anonymous Symbol]
    api_msg.o(.text.recv_udp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.recv_udp) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_msg.o(.text.recv_udp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.recv_udp) refers to netbuf.o(.text.netbuf_delete) for netbuf_delete
    api_msg.o(.text.recv_udp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.ARM.exidx.text.recv_udp) refers to api_msg.o(.text.recv_udp) for [Anonymous Symbol]
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str.25
    api_msg.o(.text.sent_tcp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.sent_tcp) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.ARM.exidx.text.sent_tcp) refers to api_msg.o(.text.sent_tcp) for [Anonymous Symbol]
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str.25
    api_msg.o(.text.poll_tcp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.text.lwip_netconn_do_writemore) for lwip_netconn_do_writemore
    api_msg.o(.text.poll_tcp) refers to api_msg.o(.text.lwip_netconn_do_close_internal) for lwip_netconn_do_close_internal
    api_msg.o(.ARM.exidx.text.poll_tcp) refers to api_msg.o(.text.poll_tcp) for [Anonymous Symbol]
    api_msg.o(.text.err_tcp) refers to api_msg.o(.rodata.str1.1) for .L.str.25
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_msg.o(.text.err_tcp) refers to api_msg.o(.text.lwip_netconn_err_to_msg) for lwip_netconn_err_to_msg
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.text.err_tcp) refers to sys_arch.o(.text.sys_sem_signal) for sys_sem_signal
    api_msg.o(.ARM.exidx.text.err_tcp) refers to api_msg.o(.text.err_tcp) for [Anonymous Symbol]
    api_msg.o(.text.lwip_netconn_err_to_msg) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.lwip_netconn_err_to_msg) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.text.lwip_netconn_err_to_msg) refers to api_msg.o(.rodata.netconn_reset) for netconn_reset
    api_msg.o(.text.lwip_netconn_err_to_msg) refers to api_msg.o(.rodata.netconn_aborted) for netconn_aborted
    api_msg.o(.ARM.exidx.text.lwip_netconn_err_to_msg) refers to api_msg.o(.text.lwip_netconn_err_to_msg) for [Anonymous Symbol]
    api_msg.o(.text.recv_tcp) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_msg.o(.text.recv_tcp) refers to tcp.o(.text.tcp_recved) for tcp_recved
    api_msg.o(.text.recv_tcp) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    api_msg.o(.text.recv_tcp) refers to api_msg.o(.rodata.netconn_closed) for netconn_closed
    api_msg.o(.text.recv_tcp) refers to sys_arch.o(.text.sys_mbox_trypost) for sys_mbox_trypost
    api_msg.o(.ARM.exidx.text.recv_tcp) refers to api_msg.o(.text.recv_tcp) for [Anonymous Symbol]
    err.o(.text.err_to_errno) refers to err.o(.rodata.err_to_errno_table) for err_to_errno_table
    err.o(.ARM.exidx.text.err_to_errno) refers to err.o(.text.err_to_errno) for [Anonymous Symbol]
    err.o(.text.lwip_strerr) refers to err.o(.rodata.err_strerr) for err_strerr
    err.o(.ARM.exidx.text.lwip_strerr) refers to err.o(.text.lwip_strerr) for [Anonymous Symbol]
    err.o(.rodata.err_strerr) refers to err.o(.rodata.str1.1) for [Anonymous Symbol]
    if_api.o(.text.lwip_if_indextoname) refers to netifapi.o(.text.netifapi_netif_index_to_name) for netifapi_netif_index_to_name
    if_api.o(.text.lwip_if_indextoname) refers to sys_arch.o(.bss.errno) for errno
    if_api.o(.ARM.exidx.text.lwip_if_indextoname) refers to if_api.o(.text.lwip_if_indextoname) for [Anonymous Symbol]
    if_api.o(.text.lwip_if_nametoindex) refers to netifapi.o(.text.netifapi_netif_name_to_index) for netifapi_netif_name_to_index
    if_api.o(.ARM.exidx.text.lwip_if_nametoindex) refers to if_api.o(.text.lwip_if_nametoindex) for [Anonymous Symbol]
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_msg.o(.text.netconn_alloc) for netconn_alloc
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_msg.o(.text.lwip_netconn_do_newconn) for lwip_netconn_do_newconn
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to sys_arch.o(.text.sys_mbox_free) for sys_mbox_free
    api_lib.o(.text.netconn_new_with_proto_and_callback) refers to memp.o(.text.memp_free) for memp_free
    api_lib.o(.ARM.exidx.text.netconn_new_with_proto_and_callback) refers to api_lib.o(.text.netconn_new_with_proto_and_callback) for [Anonymous Symbol]
    api_lib.o(.text.netconn_apimsg) refers to tcpip.o(.text.tcpip_send_msg_wait_sem) for tcpip_send_msg_wait_sem
    api_lib.o(.ARM.exidx.text.netconn_apimsg) refers to api_lib.o(.text.netconn_apimsg) for [Anonymous Symbol]
    api_lib.o(.text.netconn_prepare_delete) refers to api_msg.o(.text.lwip_netconn_do_delconn) for lwip_netconn_do_delconn
    api_lib.o(.text.netconn_prepare_delete) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.ARM.exidx.text.netconn_prepare_delete) refers to api_lib.o(.text.netconn_prepare_delete) for [Anonymous Symbol]
    api_lib.o(.text.netconn_delete) refers to api_lib.o(.text.netconn_prepare_delete) for netconn_prepare_delete
    api_lib.o(.text.netconn_delete) refers to api_msg.o(.text.netconn_free) for netconn_free
    api_lib.o(.ARM.exidx.text.netconn_delete) refers to api_lib.o(.text.netconn_delete) for [Anonymous Symbol]
    api_lib.o(.text.netconn_getaddr) refers to api_msg.o(.text.lwip_netconn_do_getaddr) for lwip_netconn_do_getaddr
    api_lib.o(.text.netconn_getaddr) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_getaddr) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_getaddr) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_getaddr) refers to api_lib.o(.text.netconn_getaddr) for [Anonymous Symbol]
    api_lib.o(.text.netconn_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    api_lib.o(.text.netconn_bind) refers to api_msg.o(.text.lwip_netconn_do_bind) for lwip_netconn_do_bind
    api_lib.o(.text.netconn_bind) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_bind) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_bind) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_bind) refers to api_lib.o(.text.netconn_bind) for [Anonymous Symbol]
    api_lib.o(.text.netconn_bind_if) refers to api_msg.o(.text.lwip_netconn_do_bind_if) for lwip_netconn_do_bind_if
    api_lib.o(.text.netconn_bind_if) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_bind_if) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_bind_if) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_bind_if) refers to api_lib.o(.text.netconn_bind_if) for [Anonymous Symbol]
    api_lib.o(.text.netconn_connect) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    api_lib.o(.text.netconn_connect) refers to api_msg.o(.text.lwip_netconn_do_connect) for lwip_netconn_do_connect
    api_lib.o(.text.netconn_connect) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_connect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_connect) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_connect) refers to api_lib.o(.text.netconn_connect) for [Anonymous Symbol]
    api_lib.o(.text.netconn_disconnect) refers to api_msg.o(.text.lwip_netconn_do_disconnect) for lwip_netconn_do_disconnect
    api_lib.o(.text.netconn_disconnect) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_disconnect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_disconnect) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_disconnect) refers to api_lib.o(.text.netconn_disconnect) for [Anonymous Symbol]
    api_lib.o(.text.netconn_listen_with_backlog) refers to api_msg.o(.text.lwip_netconn_do_listen) for lwip_netconn_do_listen
    api_lib.o(.text.netconn_listen_with_backlog) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_listen_with_backlog) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_listen_with_backlog) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_listen_with_backlog) refers to api_lib.o(.text.netconn_listen_with_backlog) for [Anonymous Symbol]
    api_lib.o(.text.netconn_accept) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    api_lib.o(.text.netconn_accept) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_accept) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.text.netconn_accept) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_lib.o(.text.netconn_accept) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for lwip_netconn_is_err_msg
    api_lib.o(.text.netconn_accept) refers to api_msg.o(.text.lwip_netconn_do_accepted) for lwip_netconn_do_accepted
    api_lib.o(.text.netconn_accept) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.ARM.exidx.text.netconn_accept) refers to api_lib.o(.text.netconn_accept) for [Anonymous Symbol]
    api_lib.o(.text.netconn_err) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    api_lib.o(.text.netconn_err) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    api_lib.o(.ARM.exidx.text.netconn_err) refers to api_lib.o(.text.netconn_err) for [Anonymous Symbol]
    api_lib.o(.text.netconn_tcp_recvd) refers to api_lib.o(.text.netconn_tcp_recvd_msg) for netconn_tcp_recvd_msg
    api_lib.o(.text.netconn_tcp_recvd) refers to api_lib.o(.rodata.str1.1) for .L.str.15
    api_lib.o(.text.netconn_tcp_recvd) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.ARM.exidx.text.netconn_tcp_recvd) refers to api_lib.o(.text.netconn_tcp_recvd) for [Anonymous Symbol]
    api_lib.o(.text.netconn_tcp_recvd_msg) refers to api_msg.o(.text.lwip_netconn_do_recv) for lwip_netconn_do_recv
    api_lib.o(.text.netconn_tcp_recvd_msg) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_tcp_recvd_msg) refers to api_lib.o(.rodata.str1.1) for .L.str.15
    api_lib.o(.text.netconn_tcp_recvd_msg) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.ARM.exidx.text.netconn_tcp_recvd_msg) refers to api_lib.o(.text.netconn_tcp_recvd_msg) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.rodata.str1.1) for .L.str.15
    api_lib.o(.text.netconn_recv_tcp_pbuf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf) refers to api_lib.o(.text.netconn_recv_tcp_pbuf) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_tcp_recvd_msg) for netconn_tcp_recvd_msg
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_close_shutdown) for netconn_close_shutdown
    api_lib.o(.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_lib.o(.ARM.exidx.text.netconn_recv_data_tcp) refers to api_lib.o(.text.netconn_recv_data_tcp) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.rodata.str1.1) for .L.str.15
    api_lib.o(.text.netconn_recv_tcp_pbuf_flags) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf_flags) refers to api_lib.o(.text.netconn_recv_tcp_pbuf_flags) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.rodata.str1.1) for .L.str.16
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_mbox_tryfetch) for sys_arch_mbox_tryfetch
    api_lib.o(.text.netconn_recv_data) refers to api_msg.o(.text.lwip_netconn_is_err_msg) for lwip_netconn_is_err_msg
    api_lib.o(.text.netconn_recv_data) refers to api_lib.o(.rodata.str1.1) for .L.str.17
    api_lib.o(.text.netconn_recv_data) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_recv_data) refers to api_lib.o(.text.netconn_err) for netconn_err
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_lib.o(.text.netconn_recv_data) refers to sys_arch.o(.text.sys_arch_mbox_fetch) for sys_arch_mbox_fetch
    api_lib.o(.ARM.exidx.text.netconn_recv_data) refers to api_lib.o(.text.netconn_recv_data) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.rodata.str1.1) for .L.str.16
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf_flags) refers to api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags) for [Anonymous Symbol]
    api_lib.o(.text.netconn_recv) refers to memp.o(.text.memp_malloc) for memp_malloc
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.text.netconn_recv_data_tcp) for netconn_recv_data_tcp
    api_lib.o(.text.netconn_recv) refers to memp.o(.text.memp_free) for memp_free
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.rodata.str1.1) for .L.str.17
    api_lib.o(.text.netconn_recv) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_recv) refers to api_lib.o(.text.netconn_recv_data) for netconn_recv_data
    api_lib.o(.text.netconn_recv) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_lib.o(.ARM.exidx.text.netconn_recv) refers to api_lib.o(.text.netconn_recv) for [Anonymous Symbol]
    api_lib.o(.text.netconn_sendto) refers to api_lib.o(.text.netconn_send) for netconn_send
    api_lib.o(.ARM.exidx.text.netconn_sendto) refers to api_lib.o(.text.netconn_sendto) for [Anonymous Symbol]
    api_lib.o(.text.netconn_send) refers to api_msg.o(.text.lwip_netconn_do_send) for lwip_netconn_do_send
    api_lib.o(.text.netconn_send) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_send) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_send) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_send) refers to api_lib.o(.text.netconn_send) for [Anonymous Symbol]
    api_lib.o(.text.netconn_write_partly) refers to api_lib.o(.text.netconn_write_vectors_partly) for netconn_write_vectors_partly
    api_lib.o(.ARM.exidx.text.netconn_write_partly) refers to api_lib.o(.text.netconn_write_partly) for [Anonymous Symbol]
    api_lib.o(.text.netconn_write_vectors_partly) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_write_vectors_partly) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.text.netconn_write_vectors_partly) refers to api_msg.o(.text.lwip_netconn_do_write) for lwip_netconn_do_write
    api_lib.o(.text.netconn_write_vectors_partly) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_write_vectors_partly) refers to sys_arch.o(.text.sys_assert) for sys_assert
    api_lib.o(.ARM.exidx.text.netconn_write_vectors_partly) refers to api_lib.o(.text.netconn_write_vectors_partly) for [Anonymous Symbol]
    api_lib.o(.text.netconn_close) refers to api_lib.o(.text.netconn_close_shutdown) for netconn_close_shutdown
    api_lib.o(.ARM.exidx.text.netconn_close) refers to api_lib.o(.text.netconn_close) for [Anonymous Symbol]
    api_lib.o(.text.netconn_close_shutdown) refers to api_msg.o(.text.lwip_netconn_do_close) for lwip_netconn_do_close
    api_lib.o(.text.netconn_close_shutdown) refers to api_lib.o(.text.netconn_apimsg) for netconn_apimsg
    api_lib.o(.text.netconn_close_shutdown) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    api_lib.o(.text.netconn_close_shutdown) refers to api_lib.o(.rodata.str1.1) for .L.str.5
    api_lib.o(.ARM.exidx.text.netconn_close_shutdown) refers to api_lib.o(.text.netconn_close_shutdown) for [Anonymous Symbol]
    api_lib.o(.text.netconn_shutdown) refers to api_lib.o(.text.netconn_close_shutdown) for netconn_close_shutdown
    api_lib.o(.ARM.exidx.text.netconn_shutdown) refers to api_lib.o(.text.netconn_shutdown) for [Anonymous Symbol]
    memp.o(.ARM.exidx.text.memp_init_pool) refers to memp.o(.text.memp_init_pool) for [Anonymous Symbol]
    memp.o(.text.memp_init) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.text.memp_init) refers to memp.o(.text.memp_init_pool) for memp_init_pool
    memp.o(.ARM.exidx.text.memp_init) refers to memp.o(.text.memp_init) for [Anonymous Symbol]
    memp.o(.text.memp_malloc_pool) refers to memp.o(.text.do_memp_malloc_pool) for do_memp_malloc_pool
    memp.o(.text.memp_malloc_pool) refers to memp.o(.rodata.str1.1) for .L.str.13
    memp.o(.text.memp_malloc_pool) refers to sys_arch.o(.text.sys_assert) for sys_assert
    memp.o(.ARM.exidx.text.memp_malloc_pool) refers to memp.o(.text.memp_malloc_pool) for [Anonymous Symbol]
    memp.o(.text.do_memp_malloc_pool) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.do_memp_malloc_pool) refers to sys_arch.o(.text.sys_assert) for sys_assert
    memp.o(.text.do_memp_malloc_pool) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.do_memp_malloc_pool) refers to memp.o(.text.do_memp_malloc_pool) for [Anonymous Symbol]
    memp.o(.text.memp_malloc) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.text.memp_malloc) refers to memp.o(.text.do_memp_malloc_pool) for do_memp_malloc_pool
    memp.o(.text.memp_malloc) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    memp.o(.text.memp_malloc) refers to memp.o(.rodata.str1.1) for .L.str.15
    memp.o(.ARM.exidx.text.memp_malloc) refers to memp.o(.text.memp_malloc) for [Anonymous Symbol]
    memp.o(.text.memp_free_pool) refers to memp.o(.rodata.str1.1) for .L.str.13
    memp.o(.text.memp_free_pool) refers to sys_arch.o(.text.sys_assert) for sys_assert
    memp.o(.text.memp_free_pool) refers to memp.o(.text.do_memp_free_pool) for do_memp_free_pool
    memp.o(.ARM.exidx.text.memp_free_pool) refers to memp.o(.text.memp_free_pool) for [Anonymous Symbol]
    memp.o(.text.do_memp_free_pool) refers to sys_arch.o(.text.sys_assert) for sys_assert
    memp.o(.text.do_memp_free_pool) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    memp.o(.text.do_memp_free_pool) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    memp.o(.ARM.exidx.text.do_memp_free_pool) refers to memp.o(.text.do_memp_free_pool) for [Anonymous Symbol]
    memp.o(.text.memp_free) refers to memp.o(.rodata.memp_pools) for memp_pools
    memp.o(.text.memp_free) refers to memp.o(.text.do_memp_free_pool) for do_memp_free_pool
    memp.o(.text.memp_free) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    memp.o(.text.memp_free) refers to memp.o(.rodata.str1.1) for .L.str.15
    memp.o(.ARM.exidx.text.memp_free) refers to memp.o(.text.memp_free) for [Anonymous Symbol]
    memp.o(.rodata.memp_UDP_PCB) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_UDP_PCB) refers to memp.o(.bss.memp_memory_UDP_PCB_base) for memp_memory_UDP_PCB_base
    memp.o(.rodata.memp_UDP_PCB) refers to memp.o(.bss.memp_tab_UDP_PCB) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB) refers to memp.o(.bss.memp_memory_TCP_PCB_base) for memp_memory_TCP_PCB_base
    memp.o(.rodata.memp_TCP_PCB) refers to memp.o(.bss.memp_tab_TCP_PCB) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB_LISTEN) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_PCB_LISTEN) refers to memp.o(.bss.memp_memory_TCP_PCB_LISTEN_base) for memp_memory_TCP_PCB_LISTEN_base
    memp.o(.rodata.memp_TCP_PCB_LISTEN) refers to memp.o(.bss.memp_tab_TCP_PCB_LISTEN) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_SEG) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCP_SEG) refers to memp.o(.bss.memp_memory_TCP_SEG_base) for memp_memory_TCP_SEG_base
    memp.o(.rodata.memp_TCP_SEG) refers to memp.o(.bss.memp_tab_TCP_SEG) for [Anonymous Symbol]
    memp.o(.rodata.memp_REASSDATA) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_REASSDATA) refers to memp.o(.bss.memp_memory_REASSDATA_base) for memp_memory_REASSDATA_base
    memp.o(.rodata.memp_REASSDATA) refers to memp.o(.bss.memp_tab_REASSDATA) for [Anonymous Symbol]
    memp.o(.rodata.memp_FRAG_PBUF) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_FRAG_PBUF) refers to memp.o(.bss.memp_memory_FRAG_PBUF_base) for memp_memory_FRAG_PBUF_base
    memp.o(.rodata.memp_FRAG_PBUF) refers to memp.o(.bss.memp_tab_FRAG_PBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETBUF) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETBUF) refers to memp.o(.bss.memp_memory_NETBUF_base) for memp_memory_NETBUF_base
    memp.o(.rodata.memp_NETBUF) refers to memp.o(.bss.memp_tab_NETBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETCONN) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_NETCONN) refers to memp.o(.bss.memp_memory_NETCONN_base) for memp_memory_NETCONN_base
    memp.o(.rodata.memp_NETCONN) refers to memp.o(.bss.memp_tab_NETCONN) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_API) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_API) refers to memp.o(.bss.memp_memory_TCPIP_MSG_API_base) for memp_memory_TCPIP_MSG_API_base
    memp.o(.rodata.memp_TCPIP_MSG_API) refers to memp.o(.bss.memp_tab_TCPIP_MSG_API) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_INPKT) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_TCPIP_MSG_INPKT) refers to memp.o(.bss.memp_memory_TCPIP_MSG_INPKT_base) for memp_memory_TCPIP_MSG_INPKT_base
    memp.o(.rodata.memp_TCPIP_MSG_INPKT) refers to memp.o(.bss.memp_tab_TCPIP_MSG_INPKT) for [Anonymous Symbol]
    memp.o(.rodata.memp_SYS_TIMEOUT) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_SYS_TIMEOUT) refers to memp.o(.bss.memp_memory_SYS_TIMEOUT_base) for memp_memory_SYS_TIMEOUT_base
    memp.o(.rodata.memp_SYS_TIMEOUT) refers to memp.o(.bss.memp_tab_SYS_TIMEOUT) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF) refers to memp.o(.bss.memp_memory_PBUF_base) for memp_memory_PBUF_base
    memp.o(.rodata.memp_PBUF) refers to memp.o(.bss.memp_tab_PBUF) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF_POOL) refers to memp.o(.rodata.str1.1) for [Anonymous Symbol]
    memp.o(.rodata.memp_PBUF_POOL) refers to memp.o(.bss.memp_memory_PBUF_POOL_base) for memp_memory_PBUF_POOL_base
    memp.o(.rodata.memp_PBUF_POOL) refers to memp.o(.bss.memp_tab_PBUF_POOL) for [Anonymous Symbol]
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_UDP_PCB) for memp_UDP_PCB
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_PCB) for memp_TCP_PCB
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_PCB_LISTEN) for memp_TCP_PCB_LISTEN
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCP_SEG) for memp_TCP_SEG
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_REASSDATA) for memp_REASSDATA
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_FRAG_PBUF) for memp_FRAG_PBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_NETBUF) for memp_NETBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_NETCONN) for memp_NETCONN
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCPIP_MSG_API) for memp_TCPIP_MSG_API
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_TCPIP_MSG_INPKT) for memp_TCPIP_MSG_INPKT
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_SYS_TIMEOUT) for memp_SYS_TIMEOUT
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_PBUF) for memp_PBUF
    memp.o(.rodata.memp_pools) refers to memp.o(.rodata.memp_PBUF_POOL) for memp_PBUF_POOL
    def.o(.ARM.exidx.text.lwip_htons) refers to def.o(.text.lwip_htons) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_htonl) refers to def.o(.text.lwip_htonl) for [Anonymous Symbol]
    def.o(.text.lwip_strnstr) refers to strlen.o(.text) for strlen
    def.o(.text.lwip_strnstr) refers to strncmp.o(.text) for strncmp
    def.o(.ARM.exidx.text.lwip_strnstr) refers to def.o(.text.lwip_strnstr) for [Anonymous Symbol]
    def.o(.text.lwip_strnistr) refers to strlen.o(.text) for strlen
    def.o(.text.lwip_strnistr) refers to def.o(.text.lwip_strnicmp) for lwip_strnicmp
    def.o(.ARM.exidx.text.lwip_strnistr) refers to def.o(.text.lwip_strnistr) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_strnicmp) refers to def.o(.text.lwip_strnicmp) for [Anonymous Symbol]
    def.o(.ARM.exidx.text.lwip_stricmp) refers to def.o(.text.lwip_stricmp) for [Anonymous Symbol]
    def.o(.text.lwip_itoa) refers to memmove.o(.text) for memmove
    def.o(.ARM.exidx.text.lwip_itoa) refers to def.o(.text.lwip_itoa) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_alloc_reference) for pbuf_alloc_reference
    pbuf.o(.text.pbuf_alloc) refers to mem.o(.text.mem_malloc) for mem_malloc
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_init_alloced_pbuf) for pbuf_init_alloced_pbuf
    pbuf.o(.text.pbuf_alloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.rodata.str1.1) for .L.str.1
    pbuf.o(.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_alloc) refers to pbuf.o(.text.pbuf_alloc) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_alloc_reference) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_alloc_reference) refers to memp.o(.text.memp_malloc) for memp_malloc
    pbuf.o(.text.pbuf_alloc_reference) refers to pbuf.o(.text.pbuf_init_alloced_pbuf) for pbuf_init_alloced_pbuf
    pbuf.o(.ARM.exidx.text.pbuf_alloc_reference) refers to pbuf.o(.text.pbuf_alloc_reference) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_free) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_free) refers to memp.o(.text.memp_free) for memp_free
    pbuf.o(.text.pbuf_free) refers to mem.o(.text.mem_free) for mem_free
    pbuf.o(.text.pbuf_free) refers to pbuf.o(.rodata.str1.1) for .L.str.9
    pbuf.o(.ARM.exidx.text.pbuf_free) refers to pbuf.o(.text.pbuf_free) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_init_alloced_pbuf) refers to pbuf.o(.text.pbuf_init_alloced_pbuf) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_alloced_custom) refers to pbuf.o(.text.pbuf_init_alloced_pbuf) for pbuf_init_alloced_pbuf
    pbuf.o(.ARM.exidx.text.pbuf_alloced_custom) refers to pbuf.o(.text.pbuf_alloced_custom) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_realloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_realloc) refers to mem.o(.text.mem_trim) for mem_trim
    pbuf.o(.text.pbuf_realloc) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_realloc) refers to pbuf.o(.text.pbuf_realloc) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_add_header) refers to pbuf.o(.text.pbuf_add_header_impl) for pbuf_add_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_add_header) refers to pbuf.o(.text.pbuf_add_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_add_header_impl) refers to pbuf.o(.rodata.str1.1) for .L.str.9
    pbuf.o(.text.pbuf_add_header_impl) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.ARM.exidx.text.pbuf_add_header_impl) refers to pbuf.o(.text.pbuf_add_header_impl) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_add_header_force) refers to pbuf.o(.text.pbuf_add_header_impl) for pbuf_add_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_add_header_force) refers to pbuf.o(.text.pbuf_add_header_force) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_remove_header) refers to pbuf.o(.rodata.str1.1) for .L.str.9
    pbuf.o(.text.pbuf_remove_header) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_remove_header) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.ARM.exidx.text.pbuf_remove_header) refers to pbuf.o(.text.pbuf_remove_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header) refers to pbuf.o(.text.pbuf_header_impl) for pbuf_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_header) refers to pbuf.o(.text.pbuf_header) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header_impl) refers to pbuf.o(.text.pbuf_add_header_impl) for pbuf_add_header_impl
    pbuf.o(.text.pbuf_header_impl) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    pbuf.o(.ARM.exidx.text.pbuf_header_impl) refers to pbuf.o(.text.pbuf_header_impl) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_header_force) refers to pbuf.o(.text.pbuf_header_impl) for pbuf_header_impl
    pbuf.o(.ARM.exidx.text.pbuf_header_force) refers to pbuf.o(.text.pbuf_header_force) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_free_header) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    pbuf.o(.text.pbuf_free_header) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_free_header) refers to pbuf.o(.text.pbuf_free_header) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_clen) refers to pbuf.o(.text.pbuf_clen) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_ref) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    pbuf.o(.text.pbuf_ref) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    pbuf.o(.text.pbuf_ref) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.ARM.exidx.text.pbuf_ref) refers to pbuf.o(.text.pbuf_ref) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_cat) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_cat) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_cat) refers to pbuf.o(.rodata.str1.1) for .L.str.11
    pbuf.o(.ARM.exidx.text.pbuf_cat) refers to pbuf.o(.text.pbuf_cat) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_chain) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    pbuf.o(.text.pbuf_chain) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    pbuf.o(.ARM.exidx.text.pbuf_chain) refers to pbuf.o(.text.pbuf_chain) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_dechain) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_dechain) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_dechain) refers to pbuf.o(.text.pbuf_dechain) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_copy) refers to pbuf.o(.text.pbuf_copy_partial_pbuf) for pbuf_copy_partial_pbuf
    pbuf.o(.text.pbuf_copy) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_copy) refers to pbuf.o(.rodata.str1.1) for .L.str.11
    pbuf.o(.ARM.exidx.text.pbuf_copy) refers to pbuf.o(.text.pbuf_copy) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_copy_partial_pbuf) refers to pbuf.o(.rodata.str1.1) for .L.str.22
    pbuf.o(.text.pbuf_copy_partial_pbuf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_copy_partial_pbuf) refers to memmove.o(.text) for memcpy
    pbuf.o(.text.pbuf_copy_partial_pbuf) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.ARM.exidx.text.pbuf_copy_partial_pbuf) refers to pbuf.o(.text.pbuf_copy_partial_pbuf) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_copy_partial) refers to memmove.o(.text) for memcpy
    pbuf.o(.text.pbuf_copy_partial) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_copy_partial) refers to pbuf.o(.rodata.str1.1) for .L.str.11
    pbuf.o(.ARM.exidx.text.pbuf_copy_partial) refers to pbuf.o(.text.pbuf_copy_partial) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_get_contiguous) refers to pbuf.o(.rodata.str1.1) for .L.str.32
    pbuf.o(.text.pbuf_get_contiguous) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_get_contiguous) refers to pbuf.o(.text.pbuf_skip_const) for pbuf_skip_const
    pbuf.o(.text.pbuf_get_contiguous) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    pbuf.o(.ARM.exidx.text.pbuf_get_contiguous) refers to pbuf.o(.text.pbuf_get_contiguous) for [Anonymous Symbol]
    pbuf.o(.ARM.exidx.text.pbuf_skip_const) refers to pbuf.o(.text.pbuf_skip_const) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_skip) refers to pbuf.o(.text.pbuf_skip_const) for pbuf_skip_const
    pbuf.o(.ARM.exidx.text.pbuf_skip) refers to pbuf.o(.text.pbuf_skip) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_take) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    pbuf.o(.text.pbuf_take) refers to pbuf.o(.rodata.str1.1) for .L.str.11
    pbuf.o(.text.pbuf_take) refers to memmove.o(.text) for memcpy
    pbuf.o(.text.pbuf_take) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.ARM.exidx.text.pbuf_take) refers to pbuf.o(.text.pbuf_take) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_take_at) refers to pbuf.o(.text.pbuf_skip) for pbuf_skip
    pbuf.o(.text.pbuf_take_at) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.text.pbuf_take_at) refers to memmove.o(.text) for memcpy
    pbuf.o(.text.pbuf_take_at) refers to pbuf.o(.text.pbuf_take) for pbuf_take
    pbuf.o(.ARM.exidx.text.pbuf_take_at) refers to pbuf.o(.text.pbuf_take_at) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_clone) for pbuf_clone
    pbuf.o(.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    pbuf.o(.ARM.exidx.text.pbuf_coalesce) refers to pbuf.o(.text.pbuf_coalesce) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_clone) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    pbuf.o(.text.pbuf_clone) refers to pbuf.o(.text.pbuf_copy) for pbuf_copy
    pbuf.o(.text.pbuf_clone) refers to sys_arch.o(.text.sys_assert) for sys_assert
    pbuf.o(.ARM.exidx.text.pbuf_clone) refers to pbuf.o(.text.pbuf_clone) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_get_at) refers to pbuf.o(.text.pbuf_try_get_at) for pbuf_try_get_at
    pbuf.o(.ARM.exidx.text.pbuf_get_at) refers to pbuf.o(.text.pbuf_get_at) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_try_get_at) refers to pbuf.o(.text.pbuf_skip_const) for pbuf_skip_const
    pbuf.o(.ARM.exidx.text.pbuf_try_get_at) refers to pbuf.o(.text.pbuf_try_get_at) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_put_at) refers to pbuf.o(.text.pbuf_skip) for pbuf_skip
    pbuf.o(.ARM.exidx.text.pbuf_put_at) refers to pbuf.o(.text.pbuf_put_at) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_memcmp) refers to pbuf.o(.text.pbuf_get_at) for pbuf_get_at
    pbuf.o(.ARM.exidx.text.pbuf_memcmp) refers to pbuf.o(.text.pbuf_memcmp) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_memfind) refers to pbuf.o(.text.pbuf_memcmp) for pbuf_memcmp
    pbuf.o(.ARM.exidx.text.pbuf_memfind) refers to pbuf.o(.text.pbuf_memfind) for [Anonymous Symbol]
    pbuf.o(.text.pbuf_strstr) refers to strlen.o(.text) for strlen
    pbuf.o(.text.pbuf_strstr) refers to pbuf.o(.text.pbuf_memfind) for pbuf_memfind
    pbuf.o(.ARM.exidx.text.pbuf_strstr) refers to pbuf.o(.text.pbuf_strstr) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_write) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.text.tcp_write_checks) for tcp_write_checks
    tcp_out.o(.text.tcp_write) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.rodata.str1.1) for .L.str
    tcp_out.o(.text.tcp_write) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.text.tcp_pbuf_prealloc) for tcp_pbuf_prealloc
    tcp_out.o(.text.tcp_write) refers to memmove.o(.text) for memcpy
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    tcp_out.o(.text.tcp_write) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.text.tcp_write) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_write) refers to tcp.o(.text.tcp_segs_free) for tcp_segs_free
    tcp_out.o(.text.tcp_write) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.ARM.exidx.text.tcp_write) refers to tcp_out.o(.text.tcp_write) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_write_checks) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_write_checks) refers to tcp_out.o(.rodata.str1.1) for .L.str.41
    tcp_out.o(.ARM.exidx.text.tcp_write_checks) refers to tcp_out.o(.text.tcp_write_checks) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_pbuf_prealloc) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_pbuf_prealloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.ARM.exidx.text.tcp_pbuf_prealloc) refers to tcp_out.o(.text.tcp_pbuf_prealloc) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_create_segment) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp_out.o(.text.tcp_create_segment) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_create_segment) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    tcp_out.o(.text.tcp_create_segment) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_out.o(.text.tcp_create_segment) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.text.tcp_create_segment) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_create_segment) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_create_segment) refers to tcp_out.o(.text.tcp_create_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_split_unsent_seg) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    tcp_out.o(.text.tcp_split_unsent_seg) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_split_unsent_seg) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_split_unsent_seg) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    tcp_out.o(.text.tcp_split_unsent_seg) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.ARM.exidx.text.tcp_split_unsent_seg) refers to tcp_out.o(.text.tcp_split_unsent_seg) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_send_fin) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_send_fin) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_send_fin) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp_out.o(.ARM.exidx.text.tcp_send_fin) refers to tcp_out.o(.text.tcp_send_fin) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_enqueue_flags) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_enqueue_flags) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_enqueue_flags) refers to tcp_out.o(.text.tcp_create_segment) for tcp_create_segment
    tcp_out.o(.text.tcp_enqueue_flags) refers to tcp_out.o(.rodata.str1.1) for .L.str.26
    tcp_out.o(.text.tcp_enqueue_flags) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_out.o(.ARM.exidx.text.tcp_enqueue_flags) refers to tcp_out.o(.text.tcp_enqueue_flags) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp_out.o(.text.tcp_output) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp_out.o(.text.tcp_output) refers to tcp_out.o(.text.tcp_route) for tcp_route
    tcp_out.o(.text.tcp_output) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_output) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_out.o(.text.tcp_output) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_out.o(.text.tcp_output) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_output) refers to tcp_out.o(.text.tcp_output_segment) for tcp_output_segment
    tcp_out.o(.ARM.exidx.text.tcp_output) refers to tcp_out.o(.text.tcp_output) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_send_empty_ack) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_send_empty_ack) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_output_alloc_header) for tcp_output_alloc_header
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_output_fill_options) for tcp_output_fill_options
    tcp_out.o(.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_send_empty_ack) refers to tcp_out.o(.text.tcp_send_empty_ack) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_route) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    tcp_out.o(.text.tcp_route) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_out.o(.ARM.exidx.text.tcp_route) refers to tcp_out.o(.text.tcp_route) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_segment) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output_segment) refers to tcp_out.o(.text.tcp_output_segment_busy) for tcp_output_segment_busy
    tcp_out.o(.text.tcp_output_segment) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_output_segment) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_output_segment) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_out.o(.text.tcp_output_segment) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_out.o(.text.tcp_output_segment) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_out.o(.text.tcp_output_segment) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    tcp_out.o(.ARM.exidx.text.tcp_output_segment) refers to tcp_out.o(.text.tcp_output_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to tcp_out.o(.text.tcp_output_segment_busy) for tcp_output_segment_busy
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_rexmit_rto_prepare) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_prepare) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_segment_busy) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.ARM.exidx.text.tcp_output_segment_busy) refers to tcp_out.o(.text.tcp_output_segment_busy) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto_commit) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rexmit_rto_commit) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_commit) refers to tcp_out.o(.text.tcp_rexmit_rto_commit) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_rto) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for tcp_rexmit_rto_prepare
    tcp_out.o(.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_rexmit_rto_commit) for tcp_rexmit_rto_commit
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto) refers to tcp_out.o(.text.tcp_rexmit_rto) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rexmit) refers to tcp_out.o(.text.tcp_output_segment_busy) for tcp_output_segment_busy
    tcp_out.o(.text.tcp_rexmit) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_rexmit) refers to tcp_out.o(.text.tcp_rexmit) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rexmit_fast) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rexmit_fast) refers to tcp_out.o(.text.tcp_rexmit) for tcp_rexmit
    tcp_out.o(.ARM.exidx.text.tcp_rexmit_fast) refers to tcp_out.o(.text.tcp_rexmit_fast) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rst) refers to tcp_out.o(.text.tcp_rst_common) for tcp_rst_common
    tcp_out.o(.text.tcp_rst) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_rst) refers to tcp_out.o(.text.tcp_rst) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rst_common) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_rst_common) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_rst_common) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.text.tcp_rst_common) refers to tcp_out.o(.text.tcp_output_fill_options) for tcp_output_fill_options
    tcp_out.o(.ARM.exidx.text.tcp_rst_common) refers to tcp_out.o(.text.tcp_rst_common) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_control_segment) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output_control_segment) refers to tcp_out.o(.text.tcp_route) for tcp_route
    tcp_out.o(.text.tcp_output_control_segment) refers to tcp_out.o(.text.tcp_output_control_segment_netif) for tcp_output_control_segment_netif
    tcp_out.o(.text.tcp_output_control_segment) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.ARM.exidx.text.tcp_output_control_segment) refers to tcp_out.o(.text.tcp_output_control_segment) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_rst_netif) refers to tcp_out.o(.text.tcp_rst_common) for tcp_rst_common
    tcp_out.o(.text.tcp_rst_netif) refers to tcp_out.o(.text.tcp_output_control_segment_netif) for tcp_output_control_segment_netif
    tcp_out.o(.ARM.exidx.text.tcp_rst_netif) refers to tcp_out.o(.text.tcp_rst_netif) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_control_segment_netif) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output_control_segment_netif) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_out.o(.text.tcp_output_control_segment_netif) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    tcp_out.o(.text.tcp_output_control_segment_netif) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_out.o(.ARM.exidx.text.tcp_output_control_segment_netif) refers to tcp_out.o(.text.tcp_output_control_segment_netif) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_alloc_header) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output_alloc_header) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for tcp_output_alloc_header_common
    tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header) refers to tcp_out.o(.text.tcp_output_alloc_header) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_fill_options) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.ARM.exidx.text.tcp_output_fill_options) refers to tcp_out.o(.text.tcp_output_fill_options) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_keepalive) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_keepalive) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_output_alloc_header) for tcp_output_alloc_header
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_output_fill_options) for tcp_output_fill_options
    tcp_out.o(.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_keepalive) refers to tcp_out.o(.text.tcp_keepalive) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_zero_window_probe) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_zero_window_probe) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_output_alloc_header) for tcp_output_alloc_header
    tcp_out.o(.text.tcp_zero_window_probe) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    tcp_out.o(.text.tcp_zero_window_probe) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_output_fill_options) for tcp_output_fill_options
    tcp_out.o(.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_output_control_segment) for tcp_output_control_segment
    tcp_out.o(.ARM.exidx.text.tcp_zero_window_probe) refers to tcp_out.o(.text.tcp_zero_window_probe) for [Anonymous Symbol]
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_out.o(.text.tcp_output_alloc_header_common) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header_common) refers to tcp_out.o(.text.tcp_output_alloc_header_common) for [Anonymous Symbol]
    sys.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_sem_new) for sys_sem_new
    sys.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_arch_sem_wait) for sys_arch_sem_wait
    sys.o(.text.sys_msleep) refers to sys_arch.o(.text.sys_sem_free) for sys_sem_free
    sys.o(.ARM.exidx.text.sys_msleep) refers to sys.o(.text.sys_msleep) for [Anonymous Symbol]
    init.o(.text.lwip_init) refers to sys_arch.o(.text.sys_init) for sys_init
    init.o(.text.lwip_init) refers to mem.o(.text.mem_init) for mem_init
    init.o(.text.lwip_init) refers to memp.o(.text.memp_init) for memp_init
    init.o(.text.lwip_init) refers to netif.o(.text.netif_init) for netif_init
    init.o(.text.lwip_init) refers to udp.o(.text.udp_init) for udp_init
    init.o(.text.lwip_init) refers to tcp.o(.text.tcp_init) for tcp_init
    init.o(.text.lwip_init) refers to timeouts.o(.text.sys_timeouts_init) for sys_timeouts_init
    init.o(.ARM.exidx.text.lwip_init) refers to init.o(.text.lwip_init) for [Anonymous Symbol]
    inet_chksum.o(.ARM.exidx.text.lwip_standard_chksum) refers to inet_chksum.o(.text.lwip_standard_chksum) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum_pseudo) refers to inet_chksum.o(.text.inet_cksum_pseudo_base) for inet_cksum_pseudo_base
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo) refers to inet_chksum.o(.text.inet_chksum_pseudo) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_cksum_pseudo_base) refers to inet_chksum.o(.text.lwip_standard_chksum) for lwip_standard_chksum
    inet_chksum.o(.text.inet_cksum_pseudo_base) refers to def.o(.text.lwip_htons) for lwip_htons
    inet_chksum.o(.ARM.exidx.text.inet_cksum_pseudo_base) refers to inet_chksum.o(.text.inet_cksum_pseudo_base) for [Anonymous Symbol]
    inet_chksum.o(.text.ip_chksum_pseudo) refers to inet_chksum.o(.text.inet_chksum_pseudo) for inet_chksum_pseudo
    inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo) refers to inet_chksum.o(.text.ip_chksum_pseudo) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum_pseudo_partial) refers to inet_chksum.o(.text.inet_cksum_pseudo_partial_base) for inet_cksum_pseudo_partial_base
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo_partial) refers to inet_chksum.o(.text.inet_chksum_pseudo_partial) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_cksum_pseudo_partial_base) refers to inet_chksum.o(.text.lwip_standard_chksum) for lwip_standard_chksum
    inet_chksum.o(.text.inet_cksum_pseudo_partial_base) refers to sys_arch.o(.text.sys_assert) for sys_assert
    inet_chksum.o(.text.inet_cksum_pseudo_partial_base) refers to def.o(.text.lwip_htons) for lwip_htons
    inet_chksum.o(.ARM.exidx.text.inet_cksum_pseudo_partial_base) refers to inet_chksum.o(.text.inet_cksum_pseudo_partial_base) for [Anonymous Symbol]
    inet_chksum.o(.text.ip_chksum_pseudo_partial) refers to inet_chksum.o(.text.inet_chksum_pseudo_partial) for inet_chksum_pseudo_partial
    inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo_partial) refers to inet_chksum.o(.text.ip_chksum_pseudo_partial) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum) refers to inet_chksum.o(.text.lwip_standard_chksum) for lwip_standard_chksum
    inet_chksum.o(.ARM.exidx.text.inet_chksum) refers to inet_chksum.o(.text.inet_chksum) for [Anonymous Symbol]
    inet_chksum.o(.text.inet_chksum_pbuf) refers to inet_chksum.o(.text.lwip_standard_chksum) for lwip_standard_chksum
    inet_chksum.o(.ARM.exidx.text.inet_chksum_pbuf) refers to inet_chksum.o(.text.inet_chksum_pbuf) for [Anonymous Symbol]
    timeouts.o(.text.tcp_timer_needed) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.bss.tcpip_tcp_timer_active) for tcpip_tcp_timer_active
    timeouts.o(.text.tcp_timer_needed) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    timeouts.o(.text.tcp_timer_needed) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.text.tcpip_tcp_timer) for tcpip_tcp_timer
    timeouts.o(.text.tcp_timer_needed) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    timeouts.o(.ARM.exidx.text.tcp_timer_needed) refers to timeouts.o(.text.tcp_timer_needed) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeout) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    timeouts.o(.text.sys_timeout) refers to sys_arch.o(.text.sys_assert) for sys_assert
    timeouts.o(.text.sys_timeout) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.sys_timeout) refers to timeouts.o(.text.sys_timeout_abs) for sys_timeout_abs
    timeouts.o(.ARM.exidx.text.sys_timeout) refers to timeouts.o(.text.sys_timeout) for [Anonymous Symbol]
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.text.tcp_tmr) for tcp_tmr
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    timeouts.o(.text.tcpip_tcp_timer) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    timeouts.o(.text.tcpip_tcp_timer) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    timeouts.o(.text.tcpip_tcp_timer) refers to timeouts.o(.bss.tcpip_tcp_timer_active) for tcpip_tcp_timer_active
    timeouts.o(.ARM.exidx.text.tcpip_tcp_timer) refers to timeouts.o(.text.tcpip_tcp_timer) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.rodata.lwip_cyclic_timers) for lwip_cyclic_timers
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.text.lwip_cyclic_timer) for lwip_cyclic_timer
    timeouts.o(.text.sys_timeouts_init) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    timeouts.o(.ARM.exidx.text.sys_timeouts_init) refers to timeouts.o(.text.sys_timeouts_init) for [Anonymous Symbol]
    timeouts.o(.text.lwip_cyclic_timer) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.lwip_cyclic_timer) refers to timeouts.o(.bss.current_timeout_due_time) for current_timeout_due_time
    timeouts.o(.text.lwip_cyclic_timer) refers to timeouts.o(.text.sys_timeout_abs) for sys_timeout_abs
    timeouts.o(.ARM.exidx.text.lwip_cyclic_timer) refers to timeouts.o(.text.lwip_cyclic_timer) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeout_abs) refers to memp.o(.text.memp_malloc) for memp_malloc
    timeouts.o(.text.sys_timeout_abs) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_timeout_abs) refers to sys_arch.o(.text.sys_assert) for sys_assert
    timeouts.o(.ARM.exidx.text.sys_timeout_abs) refers to timeouts.o(.text.sys_timeout_abs) for [Anonymous Symbol]
    timeouts.o(.text.sys_untimeout) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    timeouts.o(.text.sys_untimeout) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_untimeout) refers to memp.o(.text.memp_free) for memp_free
    timeouts.o(.ARM.exidx.text.sys_untimeout) refers to timeouts.o(.text.sys_untimeout) for [Anonymous Symbol]
    timeouts.o(.text.sys_check_timeouts) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    timeouts.o(.text.sys_check_timeouts) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.text.sys_check_timeouts) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_check_timeouts) refers to timeouts.o(.bss.current_timeout_due_time) for current_timeout_due_time
    timeouts.o(.text.sys_check_timeouts) refers to memp.o(.text.memp_free) for memp_free
    timeouts.o(.ARM.exidx.text.sys_check_timeouts) refers to timeouts.o(.text.sys_check_timeouts) for [Anonymous Symbol]
    timeouts.o(.text.sys_restart_timeouts) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_restart_timeouts) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.ARM.exidx.text.sys_restart_timeouts) refers to timeouts.o(.text.sys_restart_timeouts) for [Anonymous Symbol]
    timeouts.o(.text.sys_timeouts_sleeptime) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    timeouts.o(.text.sys_timeouts_sleeptime) refers to timeouts.o(.bss.next_timeout) for next_timeout
    timeouts.o(.text.sys_timeouts_sleeptime) refers to sys_arch.o(.text.sys_now) for sys_now
    timeouts.o(.ARM.exidx.text.sys_timeouts_sleeptime) refers to timeouts.o(.text.sys_timeouts_sleeptime) for [Anonymous Symbol]
    timeouts.o(.rodata.lwip_cyclic_timers) refers to tcp.o(.text.tcp_tmr) for tcp_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to ip4_frag.o(.text.ip_reass_tmr) for ip_reass_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to etharp.o(.text.etharp_tmr) for etharp_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to dhcp.o(.text.dhcp_coarse_tmr) for dhcp_coarse_tmr
    timeouts.o(.rodata.lwip_cyclic_timers) refers to dhcp.o(.text.dhcp_fine_tmr) for dhcp_fine_tmr
    tcp_in.o(.text.tcp_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp_in.o(.text.tcp_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    tcp_in.o(.text.tcp_input) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    tcp_in.o(.text.tcp_input) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_optlen) for tcphdr_optlen
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_opt2) for tcphdr_opt2
    tcp_in.o(.text.tcp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcphdr_opt1len) for tcphdr_opt1len
    tcp_in.o(.text.tcp_input) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.rodata.str1.1) for .L.str.6
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_timewait_input) for tcp_timewait_input
    tcp_in.o(.text.tcp_input) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_listen_input) for tcp_listen_input
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.inseg.2) for inseg.2
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.inseg.5) for inseg.5
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.inseg.1) for inseg.1
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_data) for recv_data
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_process_refused_data) for tcp_process_refused_data
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_process) for tcp_process
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_rst_netif) for tcp_rst_netif
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp_in.o(.text.tcp_input) refers to tcp_in.o(.text.tcp_input_delayed_close) for tcp_input_delayed_close
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp_in.o(.text.tcp_input) refers to tcp.o(.text.tcp_recv_null) for tcp_recv_null
    tcp_in.o(.text.tcp_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.ARM.exidx.text.tcp_input) refers to tcp_in.o(.text.tcp_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_timewait_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_timewait_input) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_timewait_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.text.tcp_timewait_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.ARM.exidx.text.tcp_timewait_input) refers to tcp_in.o(.text.tcp_timewait_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_listen_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp_in.o(.text.tcp_listen_input) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_next_iss) for tcp_next_iss
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_listen_input) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.text.tcp_parseopt) for tcp_parseopt
    tcp_in.o(.text.tcp_listen_input) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp_in.o(.text.tcp_listen_input) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_listen_input) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_rst_netif) for tcp_rst_netif
    tcp_in.o(.text.tcp_listen_input) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp_in.o(.ARM.exidx.text.tcp_listen_input) refers to tcp_in.o(.text.tcp_listen_input) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_process) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.text.tcp_parseopt) for tcp_parseopt
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.text.tcp_receive) for tcp_receive
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_process) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rexmit) for tcp_rexmit
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp_in.o(.text.tcp_process) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp_in.o(.text.tcp_process) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_process) refers to ip.o(.bss.ip_data) for ip_data
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp_in.o(.text.tcp_process) refers to tcp_out.o(.text.tcp_rexmit_rto) for tcp_rexmit_rto
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_backlog_accepted) for tcp_backlog_accepted
    tcp_in.o(.text.tcp_process) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_process) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp_in.o(.ARM.exidx.text.tcp_process) refers to tcp_in.o(.text.tcp_process) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_input_delayed_close) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp_in.o(.text.tcp_input_delayed_close) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp_in.o(.ARM.exidx.text.tcp_input_delayed_close) refers to tcp_in.o(.text.tcp_input_delayed_close) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_trigger_input_pcb_close) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.ARM.exidx.text.tcp_trigger_input_pcb_close) refers to tcp_in.o(.text.tcp_trigger_input_pcb_close) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_parseopt) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcphdr_optlen) for tcphdr_optlen
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.bss.tcp_optidx) for tcp_optidx
    tcp_in.o(.text.tcp_parseopt) refers to tcp_in.o(.text.tcp_get_next_optbyte) for tcp_get_next_optbyte
    tcp_in.o(.ARM.exidx.text.tcp_parseopt) refers to tcp_in.o(.text.tcp_parseopt) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_get_next_optbyte) refers to tcp_in.o(.bss.tcp_optidx) for tcp_optidx
    tcp_in.o(.text.tcp_get_next_optbyte) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_get_next_optbyte) refers to tcp_in.o(.bss.tcphdr_opt1len) for tcphdr_opt1len
    tcp_in.o(.text.tcp_get_next_optbyte) refers to tcp_in.o(.bss.tcphdr_opt2) for tcphdr_opt2
    tcp_in.o(.ARM.exidx.text.tcp_get_next_optbyte) refers to tcp_in.o(.text.tcp_get_next_optbyte) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_receive) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.flags) for flags
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.tcplen) for tcplen
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.seqno) for seqno
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.tcphdr) for tcphdr
    tcp_in.o(.text.tcp_receive) refers to tcp_out.o(.text.tcp_rexmit_fast) for tcp_rexmit_fast
    tcp_in.o(.text.tcp_receive) refers to tcp_out.o(.text.tcp_send_empty_ack) for tcp_send_empty_ack
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.inseg.1) for inseg.1
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.inseg.2) for inseg.2
    tcp_in.o(.text.tcp_receive) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.inseg.5) for inseg.5
    tcp_in.o(.text.tcp_receive) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_receive) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.rodata.str1.1) for .L.str.27
    tcp_in.o(.text.tcp_receive) refers to tcp.o(.text.tcp_update_rcv_ann_wnd) for tcp_update_rcv_ann_wnd
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_data) for recv_data
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_flags) for recv_flags
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.text.tcp_free_acked_segments) for tcp_free_acked_segments
    tcp_in.o(.text.tcp_receive) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_receive) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.ARM.exidx.text.tcp_receive) refers to tcp_in.o(.text.tcp_receive) for [Anonymous Symbol]
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp_in.o(.bss.ackno) for ackno
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp_in.o(.bss.recv_acked) for recv_acked
    tcp_in.o(.text.tcp_free_acked_segments) refers to def.o(.text.lwip_htonl) for lwip_htonl
    tcp_in.o(.text.tcp_free_acked_segments) refers to def.o(.text.lwip_htons) for lwip_htons
    tcp_in.o(.text.tcp_free_acked_segments) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    tcp_in.o(.text.tcp_free_acked_segments) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp_in.o(.text.tcp_free_acked_segments) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp_in.o(.ARM.exidx.text.tcp_free_acked_segments) refers to tcp_in.o(.text.tcp_free_acked_segments) for [Anonymous Symbol]
    netif.o(.ARM.exidx.text.netif_init) refers to netif.o(.text.netif_init) for [Anonymous Symbol]
    netif.o(.text.netif_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_input) refers to ethernet.o(.text.ethernet_input) for ethernet_input
    netif.o(.text.netif_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    netif.o(.text.netif_input) refers to ip4.o(.text.ip4_input) for ip4_input
    netif.o(.ARM.exidx.text.netif_input) refers to netif.o(.text.netif_input) for [Anonymous Symbol]
    netif.o(.text.netif_add_noaddr) refers to netif.o(.text.netif_add) for netif_add
    netif.o(.ARM.exidx.text.netif_add_noaddr) refers to netif.o(.text.netif_add_noaddr) for [Anonymous Symbol]
    netif.o(.text.netif_add) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_add) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_add) refers to netif.o(.text.netif_null_output_ip4) for netif_null_output_ip4
    netif.o(.text.netif_add) refers to memseta.o(.text) for memset
    netif.o(.text.netif_add) refers to netif.o(.bss.netif_num) for netif_num
    netif.o(.text.netif_add) refers to netif.o(.text.netif_set_addr) for netif_set_addr
    netif.o(.text.netif_add) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.text.netif_add) refers to sys_arch.o(.text.sys_assert) for sys_assert
    netif.o(.text.netif_add) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_add) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_add) refers to netif.o(.text.netif_add) for [Anonymous Symbol]
    netif.o(.ARM.exidx.text.netif_null_output_ip4) refers to netif.o(.text.netif_null_output_ip4) for [Anonymous Symbol]
    netif.o(.text.netif_set_addr) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_addr) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_addr) refers to netif.o(.text.netif_do_set_netmask) for netif_do_set_netmask
    netif.o(.text.netif_set_addr) refers to netif.o(.text.netif_do_set_gw) for netif_do_set_gw
    netif.o(.text.netif_set_addr) refers to netif.o(.text.netif_do_set_ipaddr) for netif_do_set_ipaddr
    netif.o(.ARM.exidx.text.netif_set_addr) refers to netif.o(.text.netif_set_addr) for [Anonymous Symbol]
    netif.o(.text.netif_set_ipaddr) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_ipaddr) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_ipaddr) refers to netif.o(.text.netif_do_set_ipaddr) for netif_do_set_ipaddr
    netif.o(.text.netif_set_ipaddr) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_ipaddr) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_ipaddr) refers to netif.o(.text.netif_set_ipaddr) for [Anonymous Symbol]
    netif.o(.text.netif_do_set_ipaddr) refers to netif.o(.text.netif_do_ip_addr_changed) for netif_do_ip_addr_changed
    netif.o(.text.netif_do_set_ipaddr) refers to netif.o(.text.netif_issue_reports) for netif_issue_reports
    netif.o(.text.netif_do_set_ipaddr) refers to netif.o(.rodata.str1.1) for .L.str.14
    netif.o(.text.netif_do_set_ipaddr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    netif.o(.ARM.exidx.text.netif_do_set_ipaddr) refers to netif.o(.text.netif_do_set_ipaddr) for [Anonymous Symbol]
    netif.o(.text.netif_set_netmask) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_netmask) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_netmask) refers to netif.o(.text.netif_do_set_netmask) for netif_do_set_netmask
    netif.o(.text.netif_set_netmask) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_netmask) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_netmask) refers to netif.o(.text.netif_set_netmask) for [Anonymous Symbol]
    netif.o(.ARM.exidx.text.netif_do_set_netmask) refers to netif.o(.text.netif_do_set_netmask) for [Anonymous Symbol]
    netif.o(.text.netif_set_gw) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_gw) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    netif.o(.text.netif_set_gw) refers to netif.o(.text.netif_do_set_gw) for netif_do_set_gw
    netif.o(.text.netif_set_gw) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_gw) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_gw) refers to netif.o(.text.netif_set_gw) for [Anonymous Symbol]
    netif.o(.ARM.exidx.text.netif_do_set_gw) refers to netif.o(.text.netif_do_set_gw) for [Anonymous Symbol]
    netif.o(.text.netif_remove) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_remove) refers to netif.o(.text.netif_do_ip_addr_changed) for netif_do_ip_addr_changed
    netif.o(.text.netif_remove) refers to netif.o(.text.netif_set_down) for netif_set_down
    netif.o(.text.netif_remove) refers to netif.o(.bss.netif_default) for netif_default
    netif.o(.text.netif_remove) refers to netif.o(.text.netif_set_default) for netif_set_default
    netif.o(.text.netif_remove) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_remove) refers to netif.o(.text.netif_remove) for [Anonymous Symbol]
    netif.o(.text.netif_do_ip_addr_changed) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for tcp_netif_ip_addr_changed
    netif.o(.text.netif_do_ip_addr_changed) refers to udp.o(.text.udp_netif_ip_addr_changed) for udp_netif_ip_addr_changed
    netif.o(.ARM.exidx.text.netif_do_ip_addr_changed) refers to netif.o(.text.netif_do_ip_addr_changed) for [Anonymous Symbol]
    netif.o(.text.netif_set_down) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_down) refers to etharp.o(.text.etharp_cleanup_netif) for etharp_cleanup_netif
    netif.o(.text.netif_set_down) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_down) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_down) refers to netif.o(.text.netif_set_down) for [Anonymous Symbol]
    netif.o(.text.netif_set_default) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_default) refers to netif.o(.bss.netif_default) for netif_default
    netif.o(.ARM.exidx.text.netif_set_default) refers to netif.o(.text.netif_set_default) for [Anonymous Symbol]
    netif.o(.text.netif_set_up) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_up) refers to netif.o(.text.netif_issue_reports) for netif_issue_reports
    netif.o(.text.netif_set_up) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_up) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_up) refers to netif.o(.text.netif_set_up) for [Anonymous Symbol]
    netif.o(.text.netif_issue_reports) refers to sys_arch.o(.text.sys_assert) for sys_assert
    netif.o(.text.netif_issue_reports) refers to etharp.o(.text.etharp_request) for etharp_request
    netif.o(.ARM.exidx.text.netif_issue_reports) refers to netif.o(.text.netif_issue_reports) for [Anonymous Symbol]
    netif.o(.text.netif_set_link_up) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_link_up) refers to dhcp.o(.text.dhcp_network_changed_link_up) for dhcp_network_changed_link_up
    netif.o(.text.netif_set_link_up) refers to netif.o(.text.netif_issue_reports) for netif_issue_reports
    netif.o(.text.netif_set_link_up) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_link_up) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_link_up) refers to netif.o(.text.netif_set_link_up) for [Anonymous Symbol]
    netif.o(.text.netif_set_link_down) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_set_link_down) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    netif.o(.text.netif_set_link_down) refers to netif.o(.rodata.str1.1) for .L.str.3
    netif.o(.ARM.exidx.text.netif_set_link_down) refers to netif.o(.text.netif_set_link_down) for [Anonymous Symbol]
    netif.o(.text.netif_name_to_index) refers to netif.o(.text.netif_find) for netif_find
    netif.o(.ARM.exidx.text.netif_name_to_index) refers to netif.o(.text.netif_name_to_index) for [Anonymous Symbol]
    netif.o(.text.netif_find) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_find) refers to atoi.o(.text) for atoi
    netif.o(.text.netif_find) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_find) refers to netif.o(.text.netif_find) for [Anonymous Symbol]
    netif.o(.text.netif_index_to_name) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    netif.o(.text.netif_index_to_name) refers to def.o(.text.lwip_itoa) for lwip_itoa
    netif.o(.ARM.exidx.text.netif_index_to_name) refers to netif.o(.text.netif_index_to_name) for [Anonymous Symbol]
    netif.o(.text.netif_get_by_index) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    netif.o(.text.netif_get_by_index) refers to netif.o(.bss.netif_list) for netif_list
    netif.o(.ARM.exidx.text.netif_get_by_index) refers to netif.o(.text.netif_get_by_index) for [Anonymous Symbol]
    mem.o(.text.mem_init) refers to mem.o(.bss.ram_heap) for ram_heap
    mem.o(.text.mem_init) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_init) refers to mem.o(.text.ptr_to_mem) for ptr_to_mem
    mem.o(.text.mem_init) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_init) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_init) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_init) refers to sys_arch.o(.text.sys_mutex_new) for sys_mutex_new
    mem.o(.text.mem_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    mem.o(.ARM.exidx.text.mem_init) refers to mem.o(.text.mem_init) for [Anonymous Symbol]
    mem.o(.text.ptr_to_mem) refers to mem.o(.bss.ram) for ram
    mem.o(.ARM.exidx.text.ptr_to_mem) refers to mem.o(.text.ptr_to_mem) for [Anonymous Symbol]
    mem.o(.text.mem_free) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_free) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_free) refers to mem.o(.rodata.str1.1) for .L.str.2
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_assert) for sys_assert
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    mem.o(.text.mem_free) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_free) refers to mem.o(.text.mem_link_valid) for mem_link_valid
    mem.o(.text.mem_free) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_free) refers to mem.o(.text.plug_holes) for plug_holes
    mem.o(.text.mem_free) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.ARM.exidx.text.mem_free) refers to mem.o(.text.mem_free) for [Anonymous Symbol]
    mem.o(.text.mem_link_valid) refers to mem.o(.text.mem_to_ptr) for mem_to_ptr
    mem.o(.text.mem_link_valid) refers to mem.o(.text.ptr_to_mem) for ptr_to_mem
    mem.o(.text.mem_link_valid) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.ARM.exidx.text.mem_link_valid) refers to mem.o(.text.mem_link_valid) for [Anonymous Symbol]
    mem.o(.text.plug_holes) refers to mem.o(.bss.ram) for ram
    mem.o(.text.plug_holes) refers to sys_arch.o(.text.sys_assert) for sys_assert
    mem.o(.text.plug_holes) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.plug_holes) refers to mem.o(.text.ptr_to_mem) for ptr_to_mem
    mem.o(.text.plug_holes) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.plug_holes) refers to mem.o(.text.mem_to_ptr) for mem_to_ptr
    mem.o(.ARM.exidx.text.plug_holes) refers to mem.o(.text.plug_holes) for [Anonymous Symbol]
    mem.o(.text.mem_trim) refers to mem.o(.bss.ram) for ram
    mem.o(.text.mem_trim) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_assert) for sys_assert
    mem.o(.text.mem_trim) refers to mem.o(.text.mem_to_ptr) for mem_to_ptr
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_arch_protect) for sys_arch_protect
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_arch_unprotect) for sys_arch_unprotect
    mem.o(.text.mem_trim) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_trim) refers to mem.o(.text.ptr_to_mem) for ptr_to_mem
    mem.o(.text.mem_trim) refers to mem.o(.rodata.str1.1) for .L.str.7
    mem.o(.text.mem_trim) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_trim) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.ARM.exidx.text.mem_trim) refers to mem.o(.text.mem_trim) for [Anonymous Symbol]
    mem.o(.text.mem_to_ptr) refers to mem.o(.bss.ram) for ram
    mem.o(.ARM.exidx.text.mem_to_ptr) refers to mem.o(.text.mem_to_ptr) for [Anonymous Symbol]
    mem.o(.text.mem_malloc) refers to mem.o(.bss.mem_mutex) for mem_mutex
    mem.o(.text.mem_malloc) refers to sys_arch.o(.text.sys_mutex_lock) for sys_mutex_lock
    mem.o(.text.mem_malloc) refers to mem.o(.bss.lfree) for lfree
    mem.o(.text.mem_malloc) refers to mem.o(.text.mem_to_ptr) for mem_to_ptr
    mem.o(.text.mem_malloc) refers to mem.o(.text.ptr_to_mem) for ptr_to_mem
    mem.o(.text.mem_malloc) refers to sys_arch.o(.text.sys_mutex_unlock) for sys_mutex_unlock
    mem.o(.text.mem_malloc) refers to mem.o(.rodata.str1.1) for .L.str.7
    mem.o(.text.mem_malloc) refers to sys_arch.o(.text.sys_assert) for sys_assert
    mem.o(.text.mem_malloc) refers to mem.o(.bss.ram_end) for ram_end
    mem.o(.ARM.exidx.text.mem_malloc) refers to mem.o(.text.mem_malloc) for [Anonymous Symbol]
    mem.o(.text.mem_calloc) refers to mem.o(.text.mem_malloc) for mem_malloc
    mem.o(.text.mem_calloc) refers to memseta.o(.text) for memset
    mem.o(.ARM.exidx.text.mem_calloc) refers to mem.o(.text.mem_calloc) for [Anonymous Symbol]
    udp.o(.ARM.exidx.text.udp_init) refers to udp.o(.text.udp_init) for [Anonymous Symbol]
    udp.o(.text.udp_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_input) refers to ip.o(.bss.ip_data) for ip_data
    udp.o(.text.udp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    udp.o(.text.udp_input) refers to def.o(.text.lwip_htons) for lwip_htons
    udp.o(.text.udp_input) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_input) refers to udp.o(.text.udp_input_local_match) for udp_input_local_match
    udp.o(.text.udp_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    udp.o(.text.udp_input) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    udp.o(.text.udp_input) refers to pbuf.o(.text.pbuf_header_force) for pbuf_header_force
    udp.o(.text.udp_input) refers to icmp.o(.text.icmp_dest_unreach) for icmp_dest_unreach
    udp.o(.ARM.exidx.text.udp_input) refers to udp.o(.text.udp_input) for [Anonymous Symbol]
    udp.o(.text.udp_input_local_match) refers to ip.o(.bss.ip_data) for ip_data
    udp.o(.text.udp_input_local_match) refers to sys_arch.o(.text.sys_assert) for sys_assert
    udp.o(.ARM.exidx.text.udp_input_local_match) refers to udp.o(.text.udp_input_local_match) for [Anonymous Symbol]
    udp.o(.text.udp_send) refers to udp.o(.text.udp_sendto) for udp_sendto
    udp.o(.text.udp_send) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_send) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.ARM.exidx.text.udp_send) refers to udp.o(.text.udp_send) for [Anonymous Symbol]
    udp.o(.text.udp_sendto) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    udp.o(.text.udp_sendto) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_sendto) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.text.udp_sendto) refers to ip4.o(.text.ip4_route) for ip4_route
    udp.o(.text.udp_sendto) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    udp.o(.ARM.exidx.text.udp_sendto) refers to udp.o(.text.udp_sendto) for [Anonymous Symbol]
    udp.o(.text.udp_sendto_if) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_sendto_if) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.text.udp_sendto_if) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    udp.o(.ARM.exidx.text.udp_sendto_if) refers to udp.o(.text.udp_sendto_if) for [Anonymous Symbol]
    udp.o(.text.udp_sendto_if_src) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_sendto_if_src) refers to udp.o(.rodata.str1.1) for .L.str.13
    udp.o(.text.udp_sendto_if_src) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_chain) for pbuf_chain
    udp.o(.text.udp_sendto_if_src) refers to sys_arch.o(.text.sys_assert) for sys_assert
    udp.o(.text.udp_sendto_if_src) refers to def.o(.text.lwip_htons) for lwip_htons
    udp.o(.text.udp_sendto_if_src) refers to inet_chksum.o(.text.ip_chksum_pseudo) for ip_chksum_pseudo
    udp.o(.text.udp_sendto_if_src) refers to ip4.o(.text.ip4_output_if_src) for ip4_output_if_src
    udp.o(.text.udp_sendto_if_src) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    udp.o(.text.udp_sendto_if_src) refers to udp.o(.text.udp_bind) for udp_bind
    udp.o(.ARM.exidx.text.udp_sendto_if_src) refers to udp.o(.text.udp_sendto_if_src) for [Anonymous Symbol]
    udp.o(.text.udp_bind) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    udp.o(.text.udp_bind) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_bind) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_bind) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.text.udp_bind) refers to udp.o(.text.udp_new_port) for udp_new_port
    udp.o(.ARM.exidx.text.udp_bind) refers to udp.o(.text.udp_bind) for [Anonymous Symbol]
    udp.o(.text.udp_new_port) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_new_port) refers to udp.o(.data.udp_port) for udp_port
    udp.o(.ARM.exidx.text.udp_new_port) refers to udp.o(.text.udp_new_port) for [Anonymous Symbol]
    udp.o(.text.udp_bind_netif) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.ARM.exidx.text.udp_bind_netif) refers to udp.o(.text.udp_bind_netif) for [Anonymous Symbol]
    udp.o(.text.udp_connect) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_connect) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_connect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_connect) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.text.udp_connect) refers to udp.o(.text.udp_bind) for udp_bind
    udp.o(.ARM.exidx.text.udp_connect) refers to udp.o(.text.udp_connect) for [Anonymous Symbol]
    udp.o(.text.udp_disconnect) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_disconnect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_disconnect) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.ARM.exidx.text.udp_disconnect) refers to udp.o(.text.udp_disconnect) for [Anonymous Symbol]
    udp.o(.text.udp_recv) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_recv) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_recv) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.ARM.exidx.text.udp_recv) refers to udp.o(.text.udp_recv) for [Anonymous Symbol]
    udp.o(.text.udp_remove) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_remove) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.text.udp_remove) refers to memp.o(.text.memp_free) for memp_free
    udp.o(.text.udp_remove) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    udp.o(.text.udp_remove) refers to udp.o(.rodata.str1.1) for .L.str.4
    udp.o(.ARM.exidx.text.udp_remove) refers to udp.o(.text.udp_remove) for [Anonymous Symbol]
    udp.o(.text.udp_new) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_new) refers to memp.o(.text.memp_malloc) for memp_malloc
    udp.o(.text.udp_new) refers to memseta.o(.text) for memset
    udp.o(.ARM.exidx.text.udp_new) refers to udp.o(.text.udp_new) for [Anonymous Symbol]
    udp.o(.text.udp_new_ip_type) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    udp.o(.text.udp_new_ip_type) refers to udp.o(.text.udp_new) for udp_new
    udp.o(.ARM.exidx.text.udp_new_ip_type) refers to udp.o(.text.udp_new_ip_type) for [Anonymous Symbol]
    udp.o(.text.udp_netif_ip_addr_changed) refers to udp.o(.bss.udp_pcbs) for udp_pcbs
    udp.o(.ARM.exidx.text.udp_netif_ip_addr_changed) refers to udp.o(.text.udp_netif_ip_addr_changed) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_init) refers to tcp.o(.text.tcp_init) for [Anonymous Symbol]
    tcp.o(.text.tcp_free) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_free) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_free) refers to tcp.o(.text.tcp_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_tmr) refers to tcp.o(.text.tcp_fasttmr) for tcp_fasttmr
    tcp.o(.text.tcp_tmr) refers to tcp.o(.bss.tcp_timer) for tcp_timer
    tcp.o(.text.tcp_tmr) refers to tcp.o(.text.tcp_slowtmr) for tcp_slowtmr
    tcp.o(.ARM.exidx.text.tcp_tmr) refers to tcp.o(.text.tcp_tmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_fasttmr) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.text.tcp_fasttmr) refers to tcp.o(.text.tcp_process_refused_data) for tcp_process_refused_data
    tcp.o(.ARM.exidx.text.tcp_fasttmr) refers to tcp.o(.text.tcp_fasttmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_slowtmr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.rodata.str1.1) for .L.str.23
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rexmit_rto_prepare) for tcp_rexmit_rto_prepare
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.rodata.tcp_backoff) for tcp_backoff
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rexmit_rto_commit) for tcp_rexmit_rto_commit
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_split_unsent_seg) for tcp_split_unsent_seg
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_zero_window_probe) for tcp_zero_window_probe
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_keepalive) for tcp_keepalive
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_slowtmr) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp.o(.text.tcp_slowtmr) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.ARM.exidx.text.tcp_slowtmr) refers to tcp.o(.text.tcp_slowtmr) for [Anonymous Symbol]
    tcp.o(.text.tcp_backlog_delayed) refers to tcp.o(.rodata.str1.1) for .L.str.1
    tcp.o(.text.tcp_backlog_delayed) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_backlog_delayed) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.ARM.exidx.text.tcp_backlog_delayed) refers to tcp.o(.text.tcp_backlog_delayed) for [Anonymous Symbol]
    tcp.o(.text.tcp_backlog_accepted) refers to tcp.o(.rodata.str1.1) for .L.str.1
    tcp.o(.text.tcp_backlog_accepted) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_backlog_accepted) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.ARM.exidx.text.tcp_backlog_accepted) refers to tcp.o(.text.tcp_backlog_accepted) for [Anonymous Symbol]
    tcp.o(.text.tcp_close) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_close) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.text.tcp_close) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_close) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.ARM.exidx.text.tcp_close) refers to tcp.o(.text.tcp_close) for [Anonymous Symbol]
    tcp.o(.text.tcp_close_shutdown) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to tcp_in.o(.bss.tcp_input_pcb) for tcp_input_pcb
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_close_shutdown) refers to tcp_in.o(.text.tcp_trigger_input_pcb_close) for tcp_trigger_input_pcb_close
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_listen_closed) for tcp_listen_closed
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_free_listen) for tcp_free_listen
    tcp.o(.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.ARM.exidx.text.tcp_close_shutdown) refers to tcp.o(.text.tcp_close_shutdown) for [Anonymous Symbol]
    tcp.o(.text.tcp_shutdown) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_shutdown) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_shutdown) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_shutdown) refers to tcp.o(.text.tcp_close_shutdown) for tcp_close_shutdown
    tcp.o(.text.tcp_shutdown) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.ARM.exidx.text.tcp_shutdown) refers to tcp.o(.text.tcp_shutdown) for [Anonymous Symbol]
    tcp.o(.text.tcp_abandon) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_abandon) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.text.tcp_abandon) refers to tcp.o(.text.tcp_pcb_remove) for tcp_pcb_remove
    tcp.o(.text.tcp_abandon) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp.o(.text.tcp_abandon) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_abandon) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_abandon) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_abandon) refers to tcp.o(.text.tcp_segs_free) for tcp_segs_free
    tcp.o(.text.tcp_abandon) refers to tcp.o(.text.tcp_backlog_accepted) for tcp_backlog_accepted
    tcp.o(.text.tcp_abandon) refers to tcp_out.o(.text.tcp_rst) for tcp_rst
    tcp.o(.ARM.exidx.text.tcp_abandon) refers to tcp.o(.text.tcp_abandon) for [Anonymous Symbol]
    tcp.o(.text.tcp_pcb_remove) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_pcb_remove) refers to tcp.o(.text.tcp_pcb_purge) for tcp_pcb_purge
    tcp.o(.text.tcp_pcb_remove) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_pcb_remove) refers to tcp.o(.text.tcp_pcb_remove) for [Anonymous Symbol]
    tcp.o(.text.tcp_segs_free) refers to tcp.o(.text.tcp_seg_free) for tcp_seg_free
    tcp.o(.ARM.exidx.text.tcp_segs_free) refers to tcp.o(.text.tcp_segs_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_abort) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.ARM.exidx.text.tcp_abort) refers to tcp.o(.text.tcp_abort) for [Anonymous Symbol]
    tcp.o(.text.tcp_bind) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_bind) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    tcp.o(.text.tcp_bind) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_bind) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_bind) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.text.tcp_bind) refers to tcp.o(.text.tcp_new_port) for tcp_new_port
    tcp.o(.text.tcp_bind) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_bind) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.ARM.exidx.text.tcp_bind) refers to tcp.o(.text.tcp_bind) for [Anonymous Symbol]
    tcp.o(.text.tcp_new_port) refers to tcp.o(.data.tcp_port) for tcp_port
    tcp.o(.text.tcp_new_port) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.ARM.exidx.text.tcp_new_port) refers to tcp.o(.text.tcp_new_port) for [Anonymous Symbol]
    tcp.o(.text.tcp_bind_netif) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.ARM.exidx.text.tcp_bind_netif) refers to tcp.o(.text.tcp_bind_netif) for [Anonymous Symbol]
    tcp.o(.text.tcp_listen_with_backlog) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_listen_with_backlog) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for tcp_listen_with_backlog_and_err
    tcp.o(.ARM.exidx.text.tcp_listen_with_backlog) refers to tcp.o(.text.tcp_listen_with_backlog) for [Anonymous Symbol]
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.text.tcp_free) for tcp_free
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.text.tcp_accept_null) for tcp_accept_null
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.text.tcp_listen_with_backlog_and_err) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.ARM.exidx.text.tcp_listen_with_backlog_and_err) refers to tcp.o(.text.tcp_listen_with_backlog_and_err) for [Anonymous Symbol]
    tcp.o(.text.tcp_accept_null) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_accept_null) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp.o(.ARM.exidx.text.tcp_accept_null) refers to tcp.o(.text.tcp_accept_null) for [Anonymous Symbol]
    tcp.o(.text.tcp_update_rcv_ann_wnd) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_update_rcv_ann_wnd) refers to tcp.o(.text.tcp_update_rcv_ann_wnd) for [Anonymous Symbol]
    tcp.o(.text.tcp_recved) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_recved) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_recved) refers to tcp.o(.text.tcp_update_rcv_ann_wnd) for tcp_update_rcv_ann_wnd
    tcp.o(.text.tcp_recved) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.text.tcp_recved) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_recved) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.ARM.exidx.text.tcp_recved) refers to tcp.o(.text.tcp_recved) for [Anonymous Symbol]
    tcp.o(.text.tcp_connect) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_connect) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_connect) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_connect) refers to netif.o(.text.netif_get_by_index) for netif_get_by_index
    tcp.o(.text.tcp_connect) refers to ip4.o(.text.ip4_route) for ip4_route
    tcp.o(.text.tcp_connect) refers to tcp.o(.text.tcp_new_port) for tcp_new_port
    tcp.o(.text.tcp_connect) refers to tcp.o(.text.tcp_next_iss) for tcp_next_iss
    tcp.o(.text.tcp_connect) refers to tcp.o(.text.tcp_eff_send_mss_netif) for tcp_eff_send_mss_netif
    tcp.o(.text.tcp_connect) refers to tcp_out.o(.text.tcp_enqueue_flags) for tcp_enqueue_flags
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_connect) refers to timeouts.o(.text.tcp_timer_needed) for tcp_timer_needed
    tcp.o(.text.tcp_connect) refers to tcp.o(.bss.tcp_active_pcbs_changed) for tcp_active_pcbs_changed
    tcp.o(.text.tcp_connect) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_connect) refers to tcp.o(.text.tcp_connect) for [Anonymous Symbol]
    tcp.o(.text.tcp_next_iss) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_next_iss) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_next_iss) refers to tcp.o(.data.tcp_next_iss.iss) for tcp_next_iss.iss
    tcp.o(.ARM.exidx.text.tcp_next_iss) refers to tcp.o(.text.tcp_next_iss) for [Anonymous Symbol]
    tcp.o(.text.tcp_eff_send_mss_netif) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_eff_send_mss_netif) refers to tcp.o(.text.tcp_eff_send_mss_netif) for [Anonymous Symbol]
    tcp.o(.text.tcp_pcb_purge) refers to tcp.o(.text.tcp_backlog_accepted) for tcp_backlog_accepted
    tcp.o(.text.tcp_pcb_purge) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_pcb_purge) refers to tcp.o(.text.tcp_segs_free) for tcp_segs_free
    tcp.o(.text.tcp_pcb_purge) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_pcb_purge) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.ARM.exidx.text.tcp_pcb_purge) refers to tcp.o(.text.tcp_pcb_purge) for [Anonymous Symbol]
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp.o(.rodata.str1.1) for .L.str.1
    tcp.o(.text.tcp_close_shutdown_fin) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp_out.o(.text.tcp_send_fin) for tcp_send_fin
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp.o(.text.tcp_backlog_accepted) for tcp_backlog_accepted
    tcp.o(.text.tcp_close_shutdown_fin) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_close_shutdown_fin) refers to tcp.o(.text.tcp_close_shutdown_fin) for [Anonymous Symbol]
    tcp.o(.text.tcp_process_refused_data) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_process_refused_data) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_process_refused_data) refers to tcp.o(.text.tcp_recv_null) for tcp_recv_null
    tcp.o(.ARM.exidx.text.tcp_process_refused_data) refers to tcp.o(.text.tcp_process_refused_data) for [Anonymous Symbol]
    tcp.o(.text.tcp_txnow) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_txnow) refers to tcp_out.o(.text.tcp_output) for tcp_output
    tcp.o(.ARM.exidx.text.tcp_txnow) refers to tcp.o(.text.tcp_txnow) for [Anonymous Symbol]
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.text.tcp_recved) for tcp_recved
    tcp.o(.text.tcp_recv_null) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_recv_null) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.text.tcp_recv_null) refers to tcp.o(.text.tcp_close) for tcp_close
    tcp.o(.ARM.exidx.text.tcp_recv_null) refers to tcp.o(.text.tcp_recv_null) for [Anonymous Symbol]
    tcp.o(.text.tcp_seg_free) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    tcp.o(.text.tcp_seg_free) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_seg_free) refers to tcp.o(.text.tcp_seg_free) for [Anonymous Symbol]
    tcp.o(.text.tcp_setprio) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_setprio) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_setprio) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.ARM.exidx.text.tcp_setprio) refers to tcp.o(.text.tcp_setprio) for [Anonymous Symbol]
    tcp.o(.text.tcp_alloc) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_alloc) refers to memp.o(.text.memp_malloc) for memp_malloc
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_handle_closepend) for tcp_handle_closepend
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_kill_timewait) for tcp_kill_timewait
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_kill_state) for tcp_kill_state
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_kill_prio) for tcp_kill_prio
    tcp.o(.text.tcp_alloc) refers to memseta.o(.text) for memset
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_alloc) refers to tcp.o(.bss.tcp_timer_ctr) for tcp_timer_ctr
    tcp.o(.text.tcp_alloc) refers to tcp.o(.text.tcp_recv_null) for tcp_recv_null
    tcp.o(.ARM.exidx.text.tcp_alloc) refers to tcp.o(.text.tcp_alloc) for [Anonymous Symbol]
    tcp.o(.text.tcp_handle_closepend) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_handle_closepend) refers to tcp.o(.text.tcp_close_shutdown_fin) for tcp_close_shutdown_fin
    tcp.o(.ARM.exidx.text.tcp_handle_closepend) refers to tcp.o(.text.tcp_handle_closepend) for [Anonymous Symbol]
    tcp.o(.text.tcp_kill_timewait) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    tcp.o(.text.tcp_kill_timewait) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_kill_timewait) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp.o(.ARM.exidx.text.tcp_kill_timewait) refers to tcp.o(.text.tcp_kill_timewait) for [Anonymous Symbol]
    tcp.o(.text.tcp_kill_state) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_kill_state) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_kill_state) refers to tcp.o(.text.tcp_abandon) for tcp_abandon
    tcp.o(.ARM.exidx.text.tcp_kill_state) refers to tcp.o(.text.tcp_kill_state) for [Anonymous Symbol]
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.bss.tcp_ticks) for tcp_ticks
    tcp.o(.text.tcp_kill_prio) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp.o(.ARM.exidx.text.tcp_kill_prio) refers to tcp.o(.text.tcp_kill_prio) for [Anonymous Symbol]
    tcp.o(.text.tcp_new) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp.o(.ARM.exidx.text.tcp_new) refers to tcp.o(.text.tcp_new) for [Anonymous Symbol]
    tcp.o(.text.tcp_new_ip_type) refers to tcp.o(.text.tcp_alloc) for tcp_alloc
    tcp.o(.ARM.exidx.text.tcp_new_ip_type) refers to tcp.o(.text.tcp_new_ip_type) for [Anonymous Symbol]
    tcp.o(.text.tcp_arg) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.ARM.exidx.text.tcp_arg) refers to tcp.o(.text.tcp_arg) for [Anonymous Symbol]
    tcp.o(.text.tcp_recv) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_recv) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_recv) refers to tcp.o(.text.tcp_recv) for [Anonymous Symbol]
    tcp.o(.text.tcp_sent) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_sent) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_sent) refers to tcp.o(.text.tcp_sent) for [Anonymous Symbol]
    tcp.o(.text.tcp_err) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_err) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_err) refers to tcp.o(.text.tcp_err) for [Anonymous Symbol]
    tcp.o(.text.tcp_accept) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.ARM.exidx.text.tcp_accept) refers to tcp.o(.text.tcp_accept) for [Anonymous Symbol]
    tcp.o(.text.tcp_poll) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    tcp.o(.text.tcp_poll) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_poll) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    tcp.o(.text.tcp_poll) refers to tcp.o(.rodata.str1.1) for .L.str.4
    tcp.o(.ARM.exidx.text.tcp_poll) refers to tcp.o(.text.tcp_poll) for [Anonymous Symbol]
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.text.tcp_netif_ip_addr_changed_pcblist) for tcp_netif_ip_addr_changed_pcblist
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.text.tcp_netif_ip_addr_changed) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed) refers to tcp.o(.text.tcp_netif_ip_addr_changed) for [Anonymous Symbol]
    tcp.o(.text.tcp_netif_ip_addr_changed_pcblist) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_netif_ip_addr_changed_pcblist) refers to tcp.o(.text.tcp_abort) for tcp_abort
    tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed_pcblist) refers to tcp.o(.text.tcp_netif_ip_addr_changed_pcblist) for [Anonymous Symbol]
    tcp.o(.text.tcp_debug_state_str) refers to tcp.o(.rodata.str1.1) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_debug_state_str) refers to tcp.o(.text.tcp_debug_state_str) for [Anonymous Symbol]
    tcp.o(.ARM.exidx.text.tcp_tcp_get_tcp_addrinfo) refers to tcp.o(.text.tcp_tcp_get_tcp_addrinfo) for [Anonymous Symbol]
    tcp.o(.text.tcp_listen_closed) refers to tcp.o(.rodata.str1.1) for .L.str.1
    tcp.o(.text.tcp_listen_closed) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_listen_closed) refers to tcp.o(.rodata.tcp_pcb_lists) for tcp_pcb_lists
    tcp.o(.text.tcp_listen_closed) refers to tcp.o(.text.tcp_remove_listener) for tcp_remove_listener
    tcp.o(.ARM.exidx.text.tcp_listen_closed) refers to tcp.o(.text.tcp_listen_closed) for [Anonymous Symbol]
    tcp.o(.text.tcp_free_listen) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.text.tcp_free_listen) refers to memp.o(.text.memp_free) for memp_free
    tcp.o(.ARM.exidx.text.tcp_free_listen) refers to tcp.o(.text.tcp_free_listen) for [Anonymous Symbol]
    tcp.o(.text.tcp_remove_listener) refers to sys_arch.o(.text.sys_assert) for sys_assert
    tcp.o(.ARM.exidx.text.tcp_remove_listener) refers to tcp.o(.text.tcp_remove_listener) for [Anonymous Symbol]
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_listen_pcbs) for tcp_listen_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_bound_pcbs) for tcp_bound_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_active_pcbs) for tcp_active_pcbs
    tcp.o(.rodata.tcp_pcb_lists) refers to tcp.o(.bss.tcp_tw_pcbs) for tcp_tw_pcbs
    dhcp.o(.text.dhcp_coarse_tmr) refers to netif.o(.bss.netif_list) for netif_list
    dhcp.o(.text.dhcp_coarse_tmr) refers to dhcp.o(.text.dhcp_release_and_stop) for dhcp_release_and_stop
    dhcp.o(.text.dhcp_coarse_tmr) refers to dhcp.o(.text.dhcp_start) for dhcp_start
    dhcp.o(.text.dhcp_coarse_tmr) refers to dhcp.o(.text.dhcp_t2_timeout) for dhcp_t2_timeout
    dhcp.o(.text.dhcp_coarse_tmr) refers to dhcp.o(.text.dhcp_t1_timeout) for dhcp_t1_timeout
    dhcp.o(.ARM.exidx.text.dhcp_coarse_tmr) refers to dhcp.o(.text.dhcp_coarse_tmr) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_release_and_stop) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_supplied_address) for dhcp_supplied_address
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_release_and_stop) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_option_long) for dhcp_option_long
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_release_and_stop) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    dhcp.o(.text.dhcp_release_and_stop) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.text.dhcp_release_and_stop) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    dhcp.o(.text.dhcp_release_and_stop) refers to netif.o(.text.netif_set_addr) for netif_set_addr
    dhcp.o(.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_dec_pcb_refcount) for dhcp_dec_pcb_refcount
    dhcp.o(.ARM.exidx.text.dhcp_release_and_stop) refers to dhcp.o(.text.dhcp_release_and_stop) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_start) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_start) refers to dhcp.o(.rodata.str1.1) for .L.str
    dhcp.o(.text.dhcp_start) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    dhcp.o(.text.dhcp_start) refers to dhcp.o(.text.dhcp_dec_pcb_refcount) for dhcp_dec_pcb_refcount
    dhcp.o(.text.dhcp_start) refers to mem.o(.text.mem_malloc) for mem_malloc
    dhcp.o(.text.dhcp_start) refers to memseta.o(.text) for memset
    dhcp.o(.text.dhcp_start) refers to dhcp.o(.text.dhcp_inc_pcb_refcount) for dhcp_inc_pcb_refcount
    dhcp.o(.text.dhcp_start) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_start) refers to dhcp.o(.text.dhcp_discover) for dhcp_discover
    dhcp.o(.ARM.exidx.text.dhcp_start) refers to dhcp.o(.text.dhcp_start) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_t2_timeout) refers to dhcp.o(.text.dhcp_rebind) for dhcp_rebind
    dhcp.o(.ARM.exidx.text.dhcp_t2_timeout) refers to dhcp.o(.text.dhcp_t2_timeout) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_t1_timeout) refers to dhcp.o(.text.dhcp_renew) for dhcp_renew
    dhcp.o(.ARM.exidx.text.dhcp_t1_timeout) refers to dhcp.o(.text.dhcp_t1_timeout) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_fine_tmr) refers to netif.o(.bss.netif_list) for netif_list
    dhcp.o(.text.dhcp_fine_tmr) refers to dhcp.o(.text.dhcp_timeout) for dhcp_timeout
    dhcp.o(.ARM.exidx.text.dhcp_fine_tmr) refers to dhcp.o(.text.dhcp_fine_tmr) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_discover) for dhcp_discover
    dhcp.o(.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_select) for dhcp_select
    dhcp.o(.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_reboot) for dhcp_reboot
    dhcp.o(.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_release_and_stop) for dhcp_release_and_stop
    dhcp.o(.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_start) for dhcp_start
    dhcp.o(.ARM.exidx.text.dhcp_timeout) refers to dhcp.o(.text.dhcp_timeout) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_set_struct) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_set_struct) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_set_struct) refers to memseta.o(.text) for memset
    dhcp.o(.text.dhcp_set_struct) refers to dhcp.o(.rodata.str1.1) for .L.str
    dhcp.o(.ARM.exidx.text.dhcp_set_struct) refers to dhcp.o(.text.dhcp_set_struct) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_cleanup) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_cleanup) refers to dhcp.o(.rodata.str1.1) for .L.str
    dhcp.o(.text.dhcp_cleanup) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_cleanup) refers to mem.o(.text.mem_free) for mem_free
    dhcp.o(.ARM.exidx.text.dhcp_cleanup) refers to dhcp.o(.text.dhcp_cleanup) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_dec_pcb_refcount) refers to dhcp.o(.bss.dhcp_pcb_refcount) for dhcp_pcb_refcount
    dhcp.o(.text.dhcp_dec_pcb_refcount) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_dec_pcb_refcount) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_dec_pcb_refcount) refers to udp.o(.text.udp_remove) for udp_remove
    dhcp.o(.ARM.exidx.text.dhcp_dec_pcb_refcount) refers to dhcp.o(.text.dhcp_dec_pcb_refcount) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to dhcp.o(.bss.dhcp_pcb_refcount) for dhcp_pcb_refcount
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to udp.o(.text.udp_new) for udp_new
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to udp.o(.text.udp_bind) for udp_bind
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to udp.o(.text.udp_connect) for udp_connect
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to dhcp.o(.text.dhcp_recv) for dhcp_recv
    dhcp.o(.text.dhcp_inc_pcb_refcount) refers to udp.o(.text.udp_recv) for udp_recv
    dhcp.o(.ARM.exidx.text.dhcp_inc_pcb_refcount) refers to dhcp.o(.text.dhcp_inc_pcb_refcount) for [Anonymous Symbol]
    dhcp.o(.ARM.exidx.text.dhcp_set_state) refers to dhcp.o(.text.dhcp_set_state) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.rodata.dhcp_discover_request_options) for dhcp_discover_request_options
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_discover) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_discover) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    dhcp.o(.text.dhcp_discover) refers to ip4_addr.o(.rodata.ip_addr_broadcast) for ip_addr_broadcast
    dhcp.o(.text.dhcp_discover) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    dhcp.o(.text.dhcp_discover) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.ARM.exidx.text.dhcp_discover) refers to dhcp.o(.text.dhcp_discover) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_inform) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_inc_pcb_refcount) for dhcp_inc_pcb_refcount
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.rodata.str1.1) for .L.str
    dhcp.o(.text.dhcp_inform) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    dhcp.o(.text.dhcp_inform) refers to memseta.o(.text) for memset
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_inform) refers to ip4_addr.o(.rodata.ip_addr_broadcast) for ip_addr_broadcast
    dhcp.o(.text.dhcp_inform) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    dhcp.o(.text.dhcp_inform) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.text.dhcp_inform) refers to dhcp.o(.text.dhcp_dec_pcb_refcount) for dhcp_dec_pcb_refcount
    dhcp.o(.ARM.exidx.text.dhcp_inform) refers to dhcp.o(.text.dhcp_inform) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_create_msg) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    dhcp.o(.text.dhcp_create_msg) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_create_msg) refers to dhcp.o(.data.dhcp_create_msg.xid) for dhcp_create_msg.xid
    dhcp.o(.text.dhcp_create_msg) refers to memseta.o(.text) for memset
    dhcp.o(.text.dhcp_create_msg) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_create_msg) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_create_msg) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_create_msg) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    dhcp.o(.text.dhcp_create_msg) refers to dhcp.o(.rodata.str1.1) for .L.str.3
    dhcp.o(.ARM.exidx.text.dhcp_create_msg) refers to dhcp.o(.text.dhcp_create_msg) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_option) refers to dhcp.o(.rodata.str1.1) for .L.str.13
    dhcp.o(.text.dhcp_option) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.ARM.exidx.text.dhcp_option) refers to dhcp.o(.text.dhcp_option) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_option_short) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.ARM.exidx.text.dhcp_option_short) refers to dhcp.o(.text.dhcp_option_short) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_option_trailer) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    dhcp.o(.ARM.exidx.text.dhcp_option_trailer) refers to dhcp.o(.text.dhcp_option_trailer) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_network_changed_link_up) refers to dhcp.o(.text.dhcp_reboot) for dhcp_reboot
    dhcp.o(.text.dhcp_network_changed_link_up) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_network_changed_link_up) refers to dhcp.o(.text.dhcp_discover) for dhcp_discover
    dhcp.o(.ARM.exidx.text.dhcp_network_changed_link_up) refers to dhcp.o(.text.dhcp_network_changed_link_up) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_reboot) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_option_long) for dhcp_option_long
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.rodata.dhcp_discover_request_options) for dhcp_discover_request_options
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_reboot) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_reboot) refers to ip4_addr.o(.rodata.ip_addr_broadcast) for ip_addr_broadcast
    dhcp.o(.text.dhcp_reboot) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    dhcp.o(.text.dhcp_reboot) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.ARM.exidx.text.dhcp_reboot) refers to dhcp.o(.text.dhcp_reboot) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_renew) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.rodata.dhcp_discover_request_options) for dhcp_discover_request_options
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_renew) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_renew) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    dhcp.o(.text.dhcp_renew) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.ARM.exidx.text.dhcp_renew) refers to dhcp.o(.text.dhcp_renew) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_option_byte) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.ARM.exidx.text.dhcp_option_byte) refers to dhcp.o(.text.dhcp_option_byte) for [Anonymous Symbol]
    dhcp.o(.ARM.exidx.text.dhcp_supplied_address) refers to dhcp.o(.text.dhcp_supplied_address) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_option_long) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.ARM.exidx.text.dhcp_option_long) refers to dhcp.o(.text.dhcp_option_long) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_release) refers to dhcp.o(.text.dhcp_release_and_stop) for dhcp_release_and_stop
    dhcp.o(.ARM.exidx.text.dhcp_release) refers to dhcp.o(.text.dhcp_release) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_stop) refers to dhcp.o(.text.dhcp_release_and_stop) for dhcp_release_and_stop
    dhcp.o(.ARM.exidx.text.dhcp_stop) refers to dhcp.o(.text.dhcp_stop) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_select) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_option_long) for dhcp_option_long
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.rodata.dhcp_discover_request_options) for dhcp_discover_request_options
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_select) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    dhcp.o(.text.dhcp_select) refers to ip4_addr.o(.rodata.ip_addr_broadcast) for ip_addr_broadcast
    dhcp.o(.text.dhcp_select) refers to udp.o(.text.udp_sendto_if_src) for udp_sendto_if_src
    dhcp.o(.text.dhcp_select) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.text.dhcp_select) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    dhcp.o(.text.dhcp_select) refers to dhcp.o(.rodata.str1.1) for .L.str.3
    dhcp.o(.ARM.exidx.text.dhcp_select) refers to dhcp.o(.text.dhcp_select) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_create_msg) for dhcp_create_msg
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_option) for dhcp_option
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_option_short) for dhcp_option_short
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.rodata.dhcp_discover_request_options) for dhcp_discover_request_options
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_option_byte) for dhcp_option_byte
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_option_trailer) for dhcp_option_trailer
    dhcp.o(.text.dhcp_rebind) refers to dhcp.o(.bss.dhcp_pcb) for dhcp_pcb
    dhcp.o(.text.dhcp_rebind) refers to ip4_addr.o(.rodata.ip_addr_broadcast) for ip_addr_broadcast
    dhcp.o(.text.dhcp_rebind) refers to udp.o(.text.udp_sendto_if) for udp_sendto_if
    dhcp.o(.text.dhcp_rebind) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.ARM.exidx.text.dhcp_rebind) refers to dhcp.o(.text.dhcp_rebind) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_recv) refers to ip.o(.bss.ip_data) for ip_data
    dhcp.o(.text.dhcp_recv) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.text.dhcp_parse_reply) for dhcp_parse_reply
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.bss.dhcp_rx_options_given) for dhcp_rx_options_given
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.bss.dhcp_rx_options_val) for dhcp_rx_options_val
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.text.dhcp_handle_ack) for dhcp_handle_ack
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.text.dhcp_bind) for dhcp_bind
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.text.dhcp_handle_nak) for dhcp_handle_nak
    dhcp.o(.text.dhcp_recv) refers to dhcp.o(.text.dhcp_handle_offer) for dhcp_handle_offer
    dhcp.o(.text.dhcp_recv) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    dhcp.o(.ARM.exidx.text.dhcp_recv) refers to dhcp.o(.text.dhcp_recv) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_parse_reply) refers to dhcp.o(.bss.dhcp_rx_options_given) for dhcp_rx_options_given
    dhcp.o(.text.dhcp_parse_reply) refers to memseta.o(.text) for memset
    dhcp.o(.text.dhcp_parse_reply) refers to sys_arch.o(.text.sys_assert) for sys_assert
    dhcp.o(.text.dhcp_parse_reply) refers to pbuf.o(.text.pbuf_copy_partial) for pbuf_copy_partial
    dhcp.o(.text.dhcp_parse_reply) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_parse_reply) refers to dhcp.o(.bss.dhcp_rx_options_val) for dhcp_rx_options_val
    dhcp.o(.ARM.exidx.text.dhcp_parse_reply) refers to dhcp.o(.text.dhcp_parse_reply) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_handle_ack) refers to dhcp.o(.bss.dhcp_rx_options_given) for dhcp_rx_options_given
    dhcp.o(.text.dhcp_handle_ack) refers to dhcp.o(.bss.dhcp_rx_options_val) for dhcp_rx_options_val
    dhcp.o(.text.dhcp_handle_ack) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.ARM.exidx.text.dhcp_handle_ack) refers to dhcp.o(.text.dhcp_handle_ack) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_bind) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    dhcp.o(.text.dhcp_bind) refers to dhcp.o(.rodata.str1.1) for .L.str.3
    dhcp.o(.text.dhcp_bind) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_bind) refers to netif.o(.text.netif_set_addr) for netif_set_addr
    dhcp.o(.ARM.exidx.text.dhcp_bind) refers to dhcp.o(.text.dhcp_bind) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_handle_nak) refers to dhcp.o(.text.dhcp_set_state) for dhcp_set_state
    dhcp.o(.text.dhcp_handle_nak) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    dhcp.o(.text.dhcp_handle_nak) refers to netif.o(.text.netif_set_addr) for netif_set_addr
    dhcp.o(.text.dhcp_handle_nak) refers to dhcp.o(.text.dhcp_discover) for dhcp_discover
    dhcp.o(.ARM.exidx.text.dhcp_handle_nak) refers to dhcp.o(.text.dhcp_handle_nak) for [Anonymous Symbol]
    dhcp.o(.text.dhcp_handle_offer) refers to dhcp.o(.bss.dhcp_rx_options_given) for dhcp_rx_options_given
    dhcp.o(.text.dhcp_handle_offer) refers to dhcp.o(.bss.dhcp_rx_options_val) for dhcp_rx_options_val
    dhcp.o(.text.dhcp_handle_offer) refers to def.o(.text.lwip_htonl) for lwip_htonl
    dhcp.o(.text.dhcp_handle_offer) refers to dhcp.o(.text.dhcp_select) for dhcp_select
    dhcp.o(.ARM.exidx.text.dhcp_handle_offer) refers to dhcp.o(.text.dhcp_handle_offer) for [Anonymous Symbol]
    ip4.o(.text.ip4_route) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    ip4.o(.text.ip4_route) refers to netif.o(.bss.netif_list) for netif_list
    ip4.o(.text.ip4_route) refers to netif.o(.bss.netif_default) for netif_default
    ip4.o(.ARM.exidx.text.ip4_route) refers to ip4.o(.text.ip4_route) for [Anonymous Symbol]
    ip4.o(.text.ip4_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    ip4.o(.text.ip4_input) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_realloc) for pbuf_realloc
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4.o(.text.ip4_input) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4.o(.text.ip4_input) refers to ip.o(.bss.ip_data) for ip_data
    ip4.o(.text.ip4_input) refers to ip4.o(.text.ip4_input_accept) for ip4_input_accept
    ip4.o(.text.ip4_input) refers to netif.o(.bss.netif_list) for netif_list
    ip4.o(.text.ip4_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    ip4.o(.text.ip4_input) refers to ip4_frag.o(.text.ip4_reass) for ip4_reass
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ip4.o(.text.ip4_input) refers to udp.o(.text.udp_input) for udp_input
    ip4.o(.text.ip4_input) refers to icmp.o(.text.icmp_input) for icmp_input
    ip4.o(.text.ip4_input) refers to tcp_in.o(.text.tcp_input) for tcp_input
    ip4.o(.text.ip4_input) refers to pbuf.o(.text.pbuf_header_force) for pbuf_header_force
    ip4.o(.text.ip4_input) refers to icmp.o(.text.icmp_dest_unreach) for icmp_dest_unreach
    ip4.o(.ARM.exidx.text.ip4_input) refers to ip4.o(.text.ip4_input) for [Anonymous Symbol]
    ip4.o(.text.ip4_input_accept) refers to ip.o(.bss.ip_data) for ip_data
    ip4.o(.text.ip4_input_accept) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    ip4.o(.ARM.exidx.text.ip4_input_accept) refers to ip4.o(.text.ip4_input_accept) for [Anonymous Symbol]
    ip4.o(.text.ip4_output_if) refers to ip4.o(.text.ip4_output_if_src) for ip4_output_if_src
    ip4.o(.ARM.exidx.text.ip4_output_if) refers to ip4.o(.text.ip4_output_if) for [Anonymous Symbol]
    ip4.o(.text.ip4_output_if_src) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    ip4.o(.text.ip4_output_if_src) refers to ip4.o(.rodata.str1.1) for .L.str
    ip4.o(.text.ip4_output_if_src) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4.o(.text.ip4_output_if_src) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    ip4.o(.text.ip4_output_if_src) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4.o(.text.ip4_output_if_src) refers to ip4.o(.bss.ip_id) for ip_id
    ip4.o(.text.ip4_output_if_src) refers to ip4_addr.o(.rodata.ip_addr_any) for ip_addr_any
    ip4.o(.text.ip4_output_if_src) refers to ip4_frag.o(.text.ip4_frag) for ip4_frag
    ip4.o(.ARM.exidx.text.ip4_output_if_src) refers to ip4.o(.text.ip4_output_if_src) for [Anonymous Symbol]
    ip4.o(.text.ip4_output) refers to ip4.o(.rodata.str1.1) for .L.str
    ip4.o(.text.ip4_output) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4.o(.text.ip4_output) refers to ip4.o(.text.ip4_route) for ip4_route
    ip4.o(.text.ip4_output) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    ip4.o(.ARM.exidx.text.ip4_output) refers to ip4.o(.text.ip4_output) for [Anonymous Symbol]
    icmp.o(.text.icmp_input) refers to ip.o(.bss.ip_data) for ip_data
    icmp.o(.text.icmp_input) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    icmp.o(.text.icmp_input) refers to inet_chksum.o(.text.inet_chksum_pbuf) for inet_chksum_pbuf
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    icmp.o(.text.icmp_input) refers to memmove.o(.text) for memcpy
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    icmp.o(.text.icmp_input) refers to sys_arch.o(.text.sys_assert) for sys_assert
    icmp.o(.text.icmp_input) refers to pbuf.o(.text.pbuf_copy) for pbuf_copy
    icmp.o(.text.icmp_input) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    icmp.o(.text.icmp_input) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    icmp.o(.ARM.exidx.text.icmp_input) refers to icmp.o(.text.icmp_input) for [Anonymous Symbol]
    icmp.o(.text.icmp_dest_unreach) refers to icmp.o(.text.icmp_send_response) for icmp_send_response
    icmp.o(.ARM.exidx.text.icmp_dest_unreach) refers to icmp.o(.text.icmp_dest_unreach) for [Anonymous Symbol]
    icmp.o(.text.icmp_send_response) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    icmp.o(.text.icmp_send_response) refers to sys_arch.o(.text.sys_assert) for sys_assert
    icmp.o(.text.icmp_send_response) refers to pbuf.o(.text.pbuf_copy_partial_pbuf) for pbuf_copy_partial_pbuf
    icmp.o(.text.icmp_send_response) refers to ip4.o(.text.ip4_route) for ip4_route
    icmp.o(.text.icmp_send_response) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    icmp.o(.text.icmp_send_response) refers to ip4.o(.text.ip4_output_if) for ip4_output_if
    icmp.o(.text.icmp_send_response) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    icmp.o(.ARM.exidx.text.icmp_send_response) refers to icmp.o(.text.icmp_send_response) for [Anonymous Symbol]
    icmp.o(.text.icmp_time_exceeded) refers to icmp.o(.text.icmp_send_response) for icmp_send_response
    icmp.o(.ARM.exidx.text.icmp_time_exceeded) refers to icmp.o(.text.icmp_time_exceeded) for [Anonymous Symbol]
    etharp.o(.text.etharp_tmr) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_tmr) refers to etharp.o(.text.etharp_free_entry) for etharp_free_entry
    etharp.o(.text.etharp_tmr) refers to etharp.o(.text.etharp_request) for etharp_request
    etharp.o(.ARM.exidx.text.etharp_tmr) refers to etharp.o(.text.etharp_tmr) for [Anonymous Symbol]
    etharp.o(.text.etharp_free_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_free_entry) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.text.etharp_free_entry) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.ARM.exidx.text.etharp_free_entry) refers to etharp.o(.text.etharp_free_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_request) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_request) refers to etharp.o(.text.etharp_request_dst) for etharp_request_dst
    etharp.o(.ARM.exidx.text.etharp_request) refers to etharp.o(.text.etharp_request) for [Anonymous Symbol]
    etharp.o(.text.etharp_cleanup_netif) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_cleanup_netif) refers to etharp.o(.text.etharp_free_entry) for etharp_free_entry
    etharp.o(.ARM.exidx.text.etharp_cleanup_netif) refers to etharp.o(.text.etharp_cleanup_netif) for [Anonymous Symbol]
    etharp.o(.text.etharp_find_addr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_find_addr) refers to etharp.o(.text.etharp_find_entry) for etharp_find_entry
    etharp.o(.text.etharp_find_addr) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.ARM.exidx.text.etharp_find_addr) refers to etharp.o(.text.etharp_find_addr) for [Anonymous Symbol]
    etharp.o(.text.etharp_find_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_find_entry) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_find_entry) refers to etharp.o(.rodata.str1.1) for .L.str.11
    etharp.o(.text.etharp_find_entry) refers to etharp.o(.text.etharp_free_entry) for etharp_free_entry
    etharp.o(.ARM.exidx.text.etharp_find_entry) refers to etharp.o(.text.etharp_find_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_get_entry) refers to etharp.o(.rodata.str1.1) for .L.str.1
    etharp.o(.text.etharp_get_entry) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_get_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.ARM.exidx.text.etharp_get_entry) refers to etharp.o(.text.etharp_get_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    etharp.o(.text.etharp_input) refers to memmove.o(.text) for memcpy
    etharp.o(.text.etharp_input) refers to etharp.o(.text.etharp_update_arp_entry) for etharp_update_arp_entry
    etharp.o(.text.etharp_input) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.text.etharp_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.text.etharp_input) refers to etharp.o(.rodata.str1.1) for .L.str.2
    etharp.o(.text.etharp_input) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    etharp.o(.ARM.exidx.text.etharp_input) refers to etharp.o(.text.etharp_input) for [Anonymous Symbol]
    etharp.o(.text.etharp_update_arp_entry) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_update_arp_entry) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_update_arp_entry) refers to etharp.o(.text.etharp_find_entry) for etharp_find_entry
    etharp.o(.text.etharp_update_arp_entry) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_update_arp_entry) refers to memmove.o(.text) for memcpy
    etharp.o(.text.etharp_update_arp_entry) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_update_arp_entry) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_update_arp_entry) refers to etharp.o(.text.etharp_update_arp_entry) for [Anonymous Symbol]
    etharp.o(.text.etharp_raw) refers to etharp.o(.rodata.str1.1) for .L.str.2
    etharp.o(.text.etharp_raw) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_raw) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    etharp.o(.text.etharp_raw) refers to def.o(.text.lwip_htons) for lwip_htons
    etharp.o(.text.etharp_raw) refers to memmove.o(.text) for memcpy
    etharp.o(.text.etharp_raw) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_raw) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_raw) refers to etharp.o(.text.etharp_raw) for [Anonymous Symbol]
    etharp.o(.text.etharp_output) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    etharp.o(.text.etharp_output) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_output) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    etharp.o(.text.etharp_output) refers to etharp.o(.rodata.str1.1) for .L.str.2
    etharp.o(.text.etharp_output) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_output) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_output) refers to etharp.o(.bss.etharp_cached_entry) for etharp_cached_entry
    etharp.o(.text.etharp_output) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_output) refers to etharp.o(.text.etharp_output_to_arp_index) for etharp_output_to_arp_index
    etharp.o(.text.etharp_output) refers to etharp.o(.text.etharp_query) for etharp_query
    etharp.o(.ARM.exidx.text.etharp_output) refers to etharp.o(.text.etharp_output) for [Anonymous Symbol]
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_output_to_arp_index) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.text.etharp_request) for etharp_request
    etharp.o(.text.etharp_output_to_arp_index) refers to etharp.o(.text.etharp_request_dst) for etharp_request_dst
    etharp.o(.text.etharp_output_to_arp_index) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.ARM.exidx.text.etharp_output_to_arp_index) refers to etharp.o(.text.etharp_output_to_arp_index) for [Anonymous Symbol]
    etharp.o(.text.etharp_query) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for ip4_addr_isbroadcast_u32
    etharp.o(.text.etharp_query) refers to etharp.o(.text.etharp_find_entry) for etharp_find_entry
    etharp.o(.text.etharp_query) refers to sys_arch.o(.text.sys_assert) for sys_assert
    etharp.o(.text.etharp_query) refers to etharp.o(.bss.arp_table) for arp_table
    etharp.o(.text.etharp_query) refers to etharp.o(.text.etharp_request) for etharp_request
    etharp.o(.text.etharp_query) refers to etharp.o(.bss.etharp_cached_entry) for etharp_cached_entry
    etharp.o(.text.etharp_query) refers to ethernet.o(.text.ethernet_output) for ethernet_output
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    etharp.o(.text.etharp_query) refers to etharp.o(.rodata.str1.1) for .L.str.5
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_clone) for pbuf_clone
    etharp.o(.text.etharp_query) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    etharp.o(.ARM.exidx.text.etharp_query) refers to etharp.o(.text.etharp_query) for [Anonymous Symbol]
    etharp.o(.text.etharp_request_dst) refers to ethernet.o(.rodata.ethzero) for ethzero
    etharp.o(.text.etharp_request_dst) refers to etharp.o(.text.etharp_raw) for etharp_raw
    etharp.o(.ARM.exidx.text.etharp_request_dst) refers to etharp.o(.text.etharp_request_dst) for [Anonymous Symbol]
    ip4_addr.o(.ARM.exidx.text.ip4_addr_isbroadcast_u32) refers to ip4_addr.o(.text.ip4_addr_isbroadcast_u32) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4_addr_netmask_valid) refers to def.o(.text.lwip_htonl) for lwip_htonl
    ip4_addr.o(.ARM.exidx.text.ip4_addr_netmask_valid) refers to ip4_addr.o(.text.ip4_addr_netmask_valid) for [Anonymous Symbol]
    ip4_addr.o(.text.ipaddr_addr) refers to ip4_addr.o(.text.ip4addr_aton) for ip4addr_aton
    ip4_addr.o(.ARM.exidx.text.ipaddr_addr) refers to ip4_addr.o(.text.ipaddr_addr) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4addr_aton) refers to ctype_o.o(.text) for __rt_ctype_table
    ip4_addr.o(.text.ip4addr_aton) refers to ip4_addr.o(.text.__isxdigit_helper) for __isxdigit_helper
    ip4_addr.o(.text.ip4addr_aton) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_addr.o(.text.ip4addr_aton) refers to def.o(.text.lwip_htonl) for lwip_htonl
    ip4_addr.o(.ARM.exidx.text.ip4addr_aton) refers to ip4_addr.o(.text.ip4addr_aton) for [Anonymous Symbol]
    ip4_addr.o(.ARM.exidx.text.__isxdigit_helper) refers to ip4_addr.o(.text.__isxdigit_helper) for [Anonymous Symbol]
    ip4_addr.o(.text.ip4addr_ntoa) refers to ip4_addr.o(.bss.ip4addr_ntoa.str) for ip4addr_ntoa.str
    ip4_addr.o(.text.ip4addr_ntoa) refers to ip4_addr.o(.text.ip4addr_ntoa_r) for ip4addr_ntoa_r
    ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa) refers to ip4_addr.o(.text.ip4addr_ntoa) for [Anonymous Symbol]
    ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa_r) refers to ip4_addr.o(.text.ip4addr_ntoa_r) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_tmr) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_tmr) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for ip_reass_free_complete_datagram
    ip4_frag.o(.ARM.exidx.text.ip_reass_tmr) refers to ip4_frag.o(.text.ip_reass_tmr) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to memmove.o(.text) for memcpy
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to icmp.o(.text.icmp_time_exceeded) for icmp_time_exceeded
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.text.ip_reass_dequeue_datagram) for ip_reass_dequeue_datagram
    ip4_frag.o(.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.bss.ip_reass_pbufcount) for ip_reass_pbufcount
    ip4_frag.o(.ARM.exidx.text.ip_reass_free_complete_datagram) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for [Anonymous Symbol]
    ip4_frag.o(.text.ip4_reass) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_clen) for pbuf_clen
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.bss.ip_reass_pbufcount) for ip_reass_pbufcount
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.text.ip_reass_remove_oldest_datagram) for ip_reass_remove_oldest_datagram
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip4_reass) refers to memmove.o(.text) for memcpy
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.text.ip_reass_enqueue_new_datagram) for ip_reass_enqueue_new_datagram
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate) for ip_reass_chain_frag_into_datagram_and_validate
    ip4_frag.o(.text.ip4_reass) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ip4_frag.o(.text.ip4_reass) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    ip4_frag.o(.text.ip4_reass) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ip4_reass) refers to ip4_frag.o(.text.ip_reass_dequeue_datagram) for ip_reass_dequeue_datagram
    ip4_frag.o(.ARM.exidx.text.ip4_reass) refers to ip4_frag.o(.text.ip4_reass) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_remove_oldest_datagram) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_remove_oldest_datagram) refers to ip4_frag.o(.text.ip_reass_free_complete_datagram) for ip_reass_free_complete_datagram
    ip4_frag.o(.ARM.exidx.text.ip_reass_remove_oldest_datagram) refers to ip4_frag.o(.text.ip_reass_remove_oldest_datagram) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_enqueue_new_datagram) refers to memp.o(.text.memp_malloc) for memp_malloc
    ip4_frag.o(.text.ip_reass_enqueue_new_datagram) refers to ip4_frag.o(.text.ip_reass_remove_oldest_datagram) for ip_reass_remove_oldest_datagram
    ip4_frag.o(.text.ip_reass_enqueue_new_datagram) refers to memseta.o(.text) for memset
    ip4_frag.o(.text.ip_reass_enqueue_new_datagram) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_enqueue_new_datagram) refers to memmove.o(.text) for memcpy
    ip4_frag.o(.ARM.exidx.text.ip_reass_enqueue_new_datagram) refers to ip4_frag.o(.text.ip_reass_enqueue_new_datagram) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.ARM.exidx.text.ip_reass_chain_frag_into_datagram_and_validate) refers to ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_reass_dequeue_datagram) refers to ip4_frag.o(.bss.reassdatagrams) for reassdatagrams
    ip4_frag.o(.text.ip_reass_dequeue_datagram) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ip_reass_dequeue_datagram) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.ARM.exidx.text.ip_reass_dequeue_datagram) refers to ip4_frag.o(.text.ip_reass_dequeue_datagram) for [Anonymous Symbol]
    ip4_frag.o(.text.ip4_frag) refers to def.o(.text.lwip_htons) for lwip_htons
    ip4_frag.o(.text.ip4_frag) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    ip4_frag.o(.text.ip4_frag) refers to inet_chksum.o(.text.inet_chksum) for inet_chksum
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_alloc) for pbuf_alloc
    ip4_frag.o(.text.ip4_frag) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ip4_frag) refers to memmove.o(.text) for memcpy
    ip4_frag.o(.text.ip4_frag) refers to ip4_frag.o(.text.ip_frag_alloc_pbuf_custom_ref) for ip_frag_alloc_pbuf_custom_ref
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_alloced_custom) for pbuf_alloced_custom
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_ref) for pbuf_ref
    ip4_frag.o(.text.ip4_frag) refers to ip4_frag.o(.text.ipfrag_free_pbuf_custom) for ipfrag_free_pbuf_custom
    ip4_frag.o(.text.ip4_frag) refers to pbuf.o(.text.pbuf_cat) for pbuf_cat
    ip4_frag.o(.text.ip4_frag) refers to ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref) for ip_frag_free_pbuf_custom_ref
    ip4_frag.o(.ARM.exidx.text.ip4_frag) refers to ip4_frag.o(.text.ip4_frag) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_frag_alloc_pbuf_custom_ref) refers to memp.o(.text.memp_malloc) for memp_malloc
    ip4_frag.o(.ARM.exidx.text.ip_frag_alloc_pbuf_custom_ref) refers to ip4_frag.o(.text.ip_frag_alloc_pbuf_custom_ref) for [Anonymous Symbol]
    ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref) refers to memp.o(.text.memp_free) for memp_free
    ip4_frag.o(.ARM.exidx.text.ip_frag_free_pbuf_custom_ref) refers to ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref) for [Anonymous Symbol]
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ip4_frag.o(.text.ipfrag_free_pbuf_custom) refers to ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref) for ip_frag_free_pbuf_custom_ref
    ip4_frag.o(.ARM.exidx.text.ipfrag_free_pbuf_custom) refers to ip4_frag.o(.text.ipfrag_free_pbuf_custom) for [Anonymous Symbol]
    bridgeif_fdb.o(.text.bridgeif_fdb_update_src) refers to memcmp.o(.text) for memcmp
    bridgeif_fdb.o(.text.bridgeif_fdb_update_src) refers to memmove.o(.text) for memcpy
    bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_update_src) refers to bridgeif_fdb.o(.text.bridgeif_fdb_update_src) for [Anonymous Symbol]
    bridgeif_fdb.o(.text.bridgeif_fdb_get_dst_ports) refers to memcmp.o(.text) for memcmp
    bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_get_dst_ports) refers to bridgeif_fdb.o(.text.bridgeif_fdb_get_dst_ports) for [Anonymous Symbol]
    bridgeif_fdb.o(.text.bridgeif_fdb_init) refers to sys_arch.o(.text.sys_assert) for sys_assert
    bridgeif_fdb.o(.text.bridgeif_fdb_init) refers to mem.o(.text.mem_calloc) for mem_calloc
    bridgeif_fdb.o(.text.bridgeif_fdb_init) refers to bridgeif_fdb.o(.text.bridgeif_age_tmr) for bridgeif_age_tmr
    bridgeif_fdb.o(.text.bridgeif_fdb_init) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_init) refers to bridgeif_fdb.o(.text.bridgeif_fdb_init) for [Anonymous Symbol]
    bridgeif_fdb.o(.text.bridgeif_age_tmr) refers to sys_arch.o(.text.sys_assert) for sys_assert
    bridgeif_fdb.o(.text.bridgeif_age_tmr) refers to bridgeif_fdb.o(.text.bridgeif_fdb_age_one_second) for bridgeif_fdb_age_one_second
    bridgeif_fdb.o(.text.bridgeif_age_tmr) refers to timeouts.o(.text.sys_timeout) for sys_timeout
    bridgeif_fdb.o(.ARM.exidx.text.bridgeif_age_tmr) refers to bridgeif_fdb.o(.text.bridgeif_age_tmr) for [Anonymous Symbol]
    bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_age_one_second) refers to bridgeif_fdb.o(.text.bridgeif_fdb_age_one_second) for [Anonymous Symbol]
    ethernet.o(.text.ethernet_input) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    ethernet.o(.text.ethernet_input) refers to ethernet.o(.rodata.ethbroadcast) for ethbroadcast
    ethernet.o(.text.ethernet_input) refers to memcmp.o(.text) for memcmp
    ethernet.o(.text.ethernet_input) refers to pbuf.o(.text.pbuf_remove_header) for pbuf_remove_header
    ethernet.o(.text.ethernet_input) refers to ip4.o(.text.ip4_input) for ip4_input
    ethernet.o(.text.ethernet_input) refers to pbuf.o(.text.pbuf_free) for pbuf_free
    ethernet.o(.text.ethernet_input) refers to etharp.o(.text.etharp_input) for etharp_input
    ethernet.o(.ARM.exidx.text.ethernet_input) refers to ethernet.o(.text.ethernet_input) for [Anonymous Symbol]
    ethernet.o(.text.ethernet_output) refers to def.o(.text.lwip_htons) for lwip_htons
    ethernet.o(.text.ethernet_output) refers to pbuf.o(.text.pbuf_add_header) for pbuf_add_header
    ethernet.o(.text.ethernet_output) refers to sys_arch.o(.text.sys_check_core_locking) for sys_check_core_locking
    ethernet.o(.text.ethernet_output) refers to memmove.o(.text) for memcpy
    ethernet.o(.text.ethernet_output) refers to sys_arch.o(.text.sys_assert) for sys_assert
    ethernet.o(.ARM.exidx.text.ethernet_output) refers to ethernet.o(.text.ethernet_output) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetInstance) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetInstance) refers to fsl_enet.o(.text.ENET_GetInstance) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_enet.o(.text.ENET_GetDefaultConfig) refers to fsl_enet.o(.rodata.str1.1) for .L.str.2
    fsl_enet.o(.text.ENET_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetDefaultConfig) refers to fsl_enet.o(.text.ENET_GetDefaultConfig) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.text.ENET_SetTxBufferDescriptors) for ENET_SetTxBufferDescriptors
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.text.ENET_SetRxBufferDescriptors) for ENET_SetRxBufferDescriptors
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.text.ENET_SetMacController) for ENET_SetMacController
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.text.ENET_SetHandler) for ENET_SetHandler
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.text.ENET_RxBufferAllocAll) for ENET_RxBufferAllocAll
    fsl_enet.o(.text.ENET_Up) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_Up) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_Up) refers to fsl_enet.o(.text.ENET_Up) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetTxBufferDescriptors) refers to fsl_enet.o(.rodata.str1.1) for .L.str.2
    fsl_enet.o(.text.ENET_SetTxBufferDescriptors) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetTxBufferDescriptors) refers to fsl_enet.o(.text.ENET_SetTxBufferDescriptors) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetRxBufferDescriptors) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_SetRxBufferDescriptors) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetRxBufferDescriptors) refers to fsl_enet.o(.text.ENET_SetRxBufferDescriptors) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetMacController) refers to fsl_enet.o(.text.ENET_SetMacAddr) for ENET_SetMacAddr
    fsl_enet.o(.text.ENET_SetMacController) refers to fsl_enet.o(.text.ENET_GetSMI) for ENET_GetSMI
    fsl_enet.o(.text.ENET_SetMacController) refers to fsl_enet.o(.text.ENET_SetSMI) for ENET_SetSMI
    fsl_enet.o(.text.ENET_SetMacController) refers to fsl_enet.o(.text.ENET_EnableInterrupts) for ENET_EnableInterrupts
    fsl_enet.o(.ARM.exidx.text.ENET_SetMacController) refers to fsl_enet.o(.text.ENET_SetMacController) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_SetHandler) refers to memseta.o(.text) for memset
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_TransmitIRQHandler) for ENET_TransmitIRQHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_SetTxISRHandler) for ENET_SetTxISRHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_ReceiveIRQHandler) for ENET_ReceiveIRQHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_SetRxISRHandler) for ENET_SetRxISRHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_ErrorIRQHandler) for ENET_ErrorIRQHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_SetErrISRHandler) for ENET_SetErrISRHandler
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_enet.o(.rodata.str1.1) for .L.str.22
    fsl_enet.o(.text.ENET_SetHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetHandler) refers to fsl_enet.o(.text.ENET_SetHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_RxBufferAllocAll) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_RxBufferAllocAll) refers to fsl_enet.o(.text.ENET_RxBufferFreeAll) for ENET_RxBufferFreeAll
    fsl_enet.o(.text.ENET_RxBufferAllocAll) refers to fsl_enet.o(.rodata.str1.1) for .L.str.13
    fsl_enet.o(.text.ENET_RxBufferAllocAll) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_RxBufferAllocAll) refers to fsl_enet.o(.text.ENET_RxBufferAllocAll) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Init) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_Init) refers to fsl_enet.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_enet.o(.text.ENET_Init) refers to fsl_enet.o(.text.ENET_Reset) for ENET_Reset
    fsl_enet.o(.text.ENET_Init) refers to fsl_enet.o(.text.ENET_Up) for ENET_Up
    fsl_enet.o(.ARM.exidx.text.ENET_Init) refers to fsl_enet.o(.text.ENET_Init) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_enet.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_Reset) refers to fsl_enet.o(.text.ENET_Reset) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Down) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_Down) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.text.ENET_Down) refers to fsl_enet.o(.text.ENET_RxBufferFreeAll) for ENET_RxBufferFreeAll
    fsl_enet.o(.ARM.exidx.text.ENET_Down) refers to fsl_enet.o(.text.ENET_Down) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_RxBufferFreeAll) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_RxBufferFreeAll) refers to fsl_enet.o(.rodata.str1.1) for .L.str.13
    fsl_enet.o(.text.ENET_RxBufferFreeAll) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_RxBufferFreeAll) refers to fsl_enet.o(.text.ENET_RxBufferFreeAll) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Deinit) refers to fsl_enet.o(.text.ENET_Down) for ENET_Down
    fsl_enet.o(.text.ENET_Deinit) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_Deinit) refers to fsl_enet.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_enet.o(.ARM.exidx.text.ENET_Deinit) refers to fsl_enet.o(.text.ENET_Deinit) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_enet.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetCallback) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_SetCallback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetCallback) refers to fsl_enet.o(.text.ENET_SetCallback) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetRxISRHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_SetRxISRHandler) refers to fsl_enet.o(.bss.s_enetRxIsr.0) for s_enetRxIsr.0
    fsl_enet.o(.text.ENET_SetRxISRHandler) refers to fsl_enet.o(.text.EnableIRQ) for EnableIRQ
    fsl_enet.o(.ARM.exidx.text.ENET_SetRxISRHandler) refers to fsl_enet.o(.text.ENET_SetRxISRHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.EnableIRQ) refers to fsl_enet.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_enet.o(.ARM.exidx.text.EnableIRQ) refers to fsl_enet.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetTxISRHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_SetTxISRHandler) refers to fsl_enet.o(.bss.s_enetTxIsr.0) for s_enetTxIsr.0
    fsl_enet.o(.text.ENET_SetTxISRHandler) refers to fsl_enet.o(.text.EnableIRQ) for EnableIRQ
    fsl_enet.o(.ARM.exidx.text.ENET_SetTxISRHandler) refers to fsl_enet.o(.text.ENET_SetTxISRHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetErrISRHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_SetErrISRHandler) refers to fsl_enet.o(.bss.s_enetErrIsr.0) for s_enetErrIsr.0
    fsl_enet.o(.text.ENET_SetErrISRHandler) refers to fsl_enet.o(.text.EnableIRQ) for EnableIRQ
    fsl_enet.o(.ARM.exidx.text.ENET_SetErrISRHandler) refers to fsl_enet.o(.text.ENET_SetErrISRHandler) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_SetMII) refers to fsl_enet.o(.text.ENET_SetMII) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_SetMacAddr) refers to fsl_enet.o(.text.ENET_SetMacAddr) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetMacAddr) refers to fsl_enet.o(.rodata.str1.1) for .L.str.5
    fsl_enet.o(.text.ENET_GetMacAddr) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetMacAddr) refers to fsl_enet.o(.text.ENET_GetMacAddr) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetSMI) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_SetSMI) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetSMI) refers to fsl_enet.o(.text.ENET_SetSMI) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_StartSMIWrite) refers to fsl_enet.o(.text.ENET_StartSMIWrite) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_StartSMIRead) refers to fsl_enet.o(.text.ENET_StartSMIRead) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetRxErrBeforeReadFrame) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_GetRxErrBeforeReadFrame) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetRxErrBeforeReadFrame) refers to fsl_enet.o(.text.ENET_GetRxErrBeforeReadFrame) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_GetStatistics) refers to fsl_enet.o(.text.ENET_GetStatistics) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetRxFrameSize) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_GetRxFrameSize) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_GetRxFrameSize) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrameSize) refers to fsl_enet.o(.text.ENET_GetRxFrameSize) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_IncreaseIndex) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_IncreaseIndex) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_IncreaseIndex) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ReadFrame) refers to fsl_enet.o(.text.ENET_UpdateReadBuffers) for ENET_UpdateReadBuffers
    fsl_enet.o(.text.ENET_ReadFrame) refers to memmove.o(.text) for memcpy
    fsl_enet.o(.text.ENET_ReadFrame) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_ReadFrame) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ReadFrame) refers to fsl_enet.o(.text.ENET_ReadFrame) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_UpdateReadBuffers) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_UpdateReadBuffers) refers to fsl_enet.o(.text.ENET_ActiveReadRing) for ENET_ActiveReadRing
    fsl_enet.o(.text.ENET_UpdateReadBuffers) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_UpdateReadBuffers) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_UpdateReadBuffers) refers to fsl_enet.o(.text.ENET_UpdateReadBuffers) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.text.ENET_TxDirtyRingAvailable) for ENET_TxDirtyRingAvailable
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.text.ENET_ActiveSendRing) for ENET_ActiveSendRing
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_SendFrame) refers to memmove.o(.text) for memcpy
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_SendFrame) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SendFrame) refers to fsl_enet.o(.text.ENET_SendFrame) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_TxDirtyRingAvailable) refers to fsl_enet.o(.text.ENET_TxDirtyRingAvailable) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_enet.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_enet.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ActiveSendRing) refers to fsl_enet.o(.rodata.str1.1) for .L.str.11
    fsl_enet.o(.text.ENET_ActiveSendRing) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ActiveSendRing) refers to fsl_enet.o(.text.ENET_ActiveSendRing) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SetTxReclaim) refers to fsl_enet.o(.text.ENET_TxDirtyRingAvailable) for ENET_TxDirtyRingAvailable
    fsl_enet.o(.text.ENET_SetTxReclaim) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_SetTxReclaim) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SetTxReclaim) refers to fsl_enet.o(.text.ENET_SetTxReclaim) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ReclaimTxDescriptor) refers to fsl_enet.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_enet.o(.text.ENET_ReclaimTxDescriptor) refers to fsl_enet.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_enet.o(.text.ENET_ReclaimTxDescriptor) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_ReclaimTxDescriptor) refers to fsl_enet.o(.rodata.str1.1) for .L.str.11
    fsl_enet.o(.text.ENET_ReclaimTxDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ReclaimTxDescriptor) refers to fsl_enet.o(.text.ENET_ReclaimTxDescriptor) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetRxBuffer) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_GetRxBuffer) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_GetRxBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetRxBuffer) refers to fsl_enet.o(.text.ENET_GetRxBuffer) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ReleaseRxBuffer) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_ReleaseRxBuffer) refers to fsl_enet.o(.text.ENET_ActiveReadRing) for ENET_ActiveReadRing
    fsl_enet.o(.text.ENET_ReleaseRxBuffer) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_ReleaseRxBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ReleaseRxBuffer) refers to fsl_enet.o(.text.ENET_ReleaseRxBuffer) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ActiveReadRing) refers to fsl_enet.o(.rodata.str1.1) for .L.str.11
    fsl_enet.o(.text.ENET_ActiveReadRing) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ActiveReadRing) refers to fsl_enet.o(.text.ENET_ActiveReadRing) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetRxFrame) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_GetRxFrame) refers to fsl_enet.o(.text.ENET_GetRxFrameErr) for ENET_GetRxFrameErr
    fsl_enet.o(.text.ENET_GetRxFrame) refers to fsl_enet.o(.text.ENET_ActiveReadRing) for ENET_ActiveReadRing
    fsl_enet.o(.text.ENET_GetRxFrame) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_GetRxFrame) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrame) refers to fsl_enet.o(.text.ENET_GetRxFrame) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_GetRxFrameErr) refers to memseta.o(.text) for memset
    fsl_enet.o(.text.ENET_GetRxFrameErr) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_GetRxFrameErr) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrameErr) refers to fsl_enet.o(.text.ENET_GetRxFrameErr) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.ENET_TxDirtyRingAvailable) for ENET_TxDirtyRingAvailable
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.ENET_ActiveSendRing) for ENET_ActiveSendRing
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_enet.o(.rodata.str1.1) for .L.str.1
    fsl_enet.o(.text.ENET_StartTxFrame) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_StartTxFrame) refers to fsl_enet.o(.text.ENET_StartTxFrame) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.ENET_TxDirtyRingAvailable) for ENET_TxDirtyRingAvailable
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.ENET_ActiveSendRing) for ENET_ActiveSendRing
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.ENET_IncreaseIndex) for ENET_IncreaseIndex
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_SendFrameZeroCopy) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_SendFrameZeroCopy) refers to fsl_enet.o(.text.ENET_SendFrameZeroCopy) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_AddMulticastGroup) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_AddMulticastGroup) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.text.ENET_AddMulticastGroup) refers to fsl_enet.o(.rodata.str1.1) for .L.str.21
    fsl_enet.o(.text.ENET_AddMulticastGroup) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_AddMulticastGroup) refers to fsl_enet.o(.text.ENET_AddMulticastGroup) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_LeaveMulticastGroup) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_LeaveMulticastGroup) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.text.ENET_LeaveMulticastGroup) refers to fsl_enet.o(.rodata.str1.1) for .L.str.21
    fsl_enet.o(.text.ENET_LeaveMulticastGroup) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_LeaveMulticastGroup) refers to fsl_enet.o(.text.ENET_LeaveMulticastGroup) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_TransmitIRQHandler) refers to fsl_enet.o(.text.ENET_ReclaimTxDescriptor) for ENET_ReclaimTxDescriptor
    fsl_enet.o(.text.ENET_TransmitIRQHandler) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_TransmitIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_TransmitIRQHandler) refers to fsl_enet.o(.text.ENET_TransmitIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ReceiveIRQHandler) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_ReceiveIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ReceiveIRQHandler) refers to fsl_enet.o(.text.ENET_ReceiveIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ErrorIRQHandler) refers to fsl_enet.o(.text.ENET_EnableSleepMode) for ENET_EnableSleepMode
    fsl_enet.o(.text.ENET_ErrorIRQHandler) refers to fsl_enet.o(.rodata.str1.1) for .L.str.3
    fsl_enet.o(.text.ENET_ErrorIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_enet.o(.ARM.exidx.text.ENET_ErrorIRQHandler) refers to fsl_enet.o(.text.ENET_ErrorIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_EnableSleepMode) refers to fsl_enet.o(.text.ENET_EnableSleepMode) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.bss.s_enetTxIsr.0) for s_enetTxIsr.0
    fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.bss.s_enetRxIsr.0) for s_enetRxIsr.0
    fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.bss.s_enetErrIsr.0) for s_enetErrIsr.0
    fsl_enet.o(.ARM.exidx.text.ENET_CommonFrame0IRQHandler) refers to fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Ptp1588IRQHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.ARM.exidx.text.ENET_Ptp1588IRQHandler) refers to fsl_enet.o(.text.ENET_Ptp1588IRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_TxIRQHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_TxIRQHandler) refers to fsl_enet.o(.bss.s_enetTxIsr.0) for s_enetTxIsr.0
    fsl_enet.o(.text.ENET_TxIRQHandler) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.ARM.exidx.text.ENET_TxIRQHandler) refers to fsl_enet.o(.text.ENET_TxIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_RxIRQHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_RxIRQHandler) refers to fsl_enet.o(.bss.s_enetRxIsr.0) for s_enetRxIsr.0
    fsl_enet.o(.text.ENET_RxIRQHandler) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.ARM.exidx.text.ENET_RxIRQHandler) refers to fsl_enet.o(.text.ENET_RxIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_ErrIRQHandler) refers to fsl_enet.o(.text.ENET_GetInstance) for ENET_GetInstance
    fsl_enet.o(.text.ENET_ErrIRQHandler) refers to fsl_enet.o(.bss.s_enetErrIsr.0) for s_enetErrIsr.0
    fsl_enet.o(.text.ENET_ErrIRQHandler) refers to fsl_enet.o(.bss.s_ENETHandle.0) for s_ENETHandle.0
    fsl_enet.o(.ARM.exidx.text.ENET_ErrIRQHandler) refers to fsl_enet.o(.text.ENET_ErrIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Transmit_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_TxIRQHandler) for ENET_TxIRQHandler
    fsl_enet.o(.ARM.exidx.text.ENET_Transmit_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_Transmit_DriverIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Receive_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_RxIRQHandler) for ENET_RxIRQHandler
    fsl_enet.o(.ARM.exidx.text.ENET_Receive_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_Receive_DriverIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_Error_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_ErrIRQHandler) for ENET_ErrIRQHandler
    fsl_enet.o(.ARM.exidx.text.ENET_Error_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_Error_DriverIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_CommonFrame0IRQHandler) for ENET_CommonFrame0IRQHandler
    fsl_enet.o(.ARM.exidx.text.ENET_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_DriverIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.text.ENET_1588_Timer_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_Ptp1588IRQHandler) for ENET_Ptp1588IRQHandler
    fsl_enet.o(.ARM.exidx.text.ENET_1588_Timer_DriverIRQHandler) refers to fsl_enet.o(.text.ENET_1588_Timer_DriverIRQHandler) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_enet.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_GetSMI) refers to fsl_enet.o(.text.ENET_GetSMI) for [Anonymous Symbol]
    fsl_enet.o(.ARM.exidx.text.ENET_EnableInterrupts) refers to fsl_enet.o(.text.ENET_EnableInterrupts) for [Anonymous Symbol]
    fsl_sim.o(.ARM.exidx.text.SIM_SetUsbVoltRegulatorEnableMode) refers to fsl_sim.o(.text.SIM_SetUsbVoltRegulatorEnableMode) for [Anonymous Symbol]
    fsl_sim.o(.ARM.exidx.text.SIM_GetUniqueId) refers to fsl_sim.o(.text.SIM_GetUniqueId) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for CLOCK_GetOsc0ErClkFreq
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.text.CLOCK_GetPll0RefFreq) for CLOCK_GetPll0RefFreq
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPlatClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for CLOCK_GetInternalRefClkSelectFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlashClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) for CLOCK_GetPllFllSelClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) for CLOCK_GetEr32kClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for CLOCK_GetOsc0ErClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) for CLOCK_GetFixedFreqClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) for CLOCK_GetInternalRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for CLOCK_GetFllFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for CLOCK_GetInternalRefClkSelectFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetPllFllSelClock) for CLOCK_SetPllFllSelClock
    fsl_clock.o(.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetEr32kClock) for CLOCK_SetEr32kClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllFllSelClock) refers to fsl_clock.o(.text.CLOCK_SetPllFllSelClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetEr32kClock) refers to fsl_clock.o(.text.CLOCK_SetEr32kClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkSelectFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMcgExtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) for CLOCK_GetFllExtRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0RefFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0RefFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0RefFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv) refers to fsl_clock.o(.text.CLOCK_CalcPllDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode) refers to fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetPll0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags) refers to fsl_clock.o(.text.CLOCK_GetStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags) refers to fsl_clock.o(.text.CLOCK_ClearStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq) for CLOCK_GetOscRangeFromFreq
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.OSC_SetCapLoad) for OSC_SetCapLoad
    fsl_clock.o(.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.OSC_SetExtRefClkConfig) for OSC_SetExtRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOscRangeFromFreq) refers to fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.OSC_SetCapLoad) refers to fsl_clock.o(.text.OSC_SetCapLoad) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.OSC_SetExtRefClkConfig) refers to fsl_clock.o(.text.OSC_SetExtRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0) refers to fsl_clock.o(.text.CLOCK_DeinitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetFastIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.rodata.cst16) for CLOCK_TrimInternalRefClk.trimRange
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.text.CLOCK_TrimInternalRefClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode) refers to fsl_clock.o(.text.CLOCK_GetMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode) refers to fsl_clock.o(.text.CLOCK_SetFbiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode) refers to fsl_clock.o(.text.CLOCK_SetFbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode) refers to fsl_clock.o(.text.CLOCK_SetBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode) refers to fsl_clock.o(.text.CLOCK_SetBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for CLOCK_EnablePll0
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode) refers to fsl_clock.o(.text.CLOCK_SetPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick) refers to fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick) refers to fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToFeiMode) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for CLOCK_SetFeiMode
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode) refers to fsl_clock.o(.text.CLOCK_BootToFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for CLOCK_SetFeeMode
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_BootToFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToBlpiMode) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToBlpeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for CLOCK_SetPbeMode
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick) for CLOCK_ExternalModeToFbeModeQuick
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for CLOCK_SetFeiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for CLOCK_SetExternalRefClkConfig
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_FllStableDelay) for CLOCK_FllStableDelay
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_GetMode) for CLOCK_GetMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetPeeMode) for CLOCK_SetPeeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetBlpiMode) for CLOCK_SetBlpiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for CLOCK_SetFeeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFbeMode) for CLOCK_SetFbeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetFbiMode) for CLOCK_SetFbiMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetBlpeMode) for CLOCK_SetBlpeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for CLOCK_SetPbeMode
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for CLOCK_EnablePll0
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetMcgConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_FllStableDelay) refers to fsl_clock.o(.text.CLOCK_FllStableDelay) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq) for CLOCK_GetMcgExtClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllExtRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.bss.s_ftfxRunCommand) for s_ftfxRunCommand
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) for ftfx_copy_run_command_to_ram
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.ftfx_init_ifr) for ftfx_init_ifr
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.bss.s_ftfxRunCommand) for s_ftfxRunCommand
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode) for s_ftfxRunCommandFunctionCode
    fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) refers to memmove.o(.text) for memcpy
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_copy_run_command_to_ram) refers to fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_init_ifr) refers to fsl_ftfx_controller.o(.text.ftfx_init_ifr) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_mem_range) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_user_key) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking) for ftfx_command_sequence_non_blocking
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence_non_blocking) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_check_user_key) for ftfx_check_user_key
    fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_read_word_from_byte_address) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to memmove.o(.text) for memcpy
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for ftfx_write_word_to_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_write_word_to_byte_address) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_check_resource_range) for ftfx_check_resource_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address) for ftfx_write_word_to_byte_address
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_resource_range) refers to fsl_ftfx_controller.o(.text.ftfx_check_resource_range) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_check_mem_range) for ftfx_check_mem_range
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address) for ftfx_read_word_from_byte_address
    fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option) for ftfx_check_swap_control_option
    fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.ftfx_command_sequence) for ftfx_command_sequence
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_swap_control_option) refers to fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_init_features) for flash_init_features
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_opsonfig_Init) for flash_opsonfig_Init
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.flash_protection_init) for flash_protection_init
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for FTFx_API_Init
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.FLASH_Init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_init_features) refers to fsl_ftfx_flash.o(.text.flash_init_features) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_opsonfig_Init) refers to fsl_ftfx_flash.o(.text.flash_calculate_mem_size) for flash_calculate_mem_size
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_opsonfig_Init) refers to fsl_ftfx_flash.o(.text.flash_opsonfig_Init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_protection_init) refers to fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size) for flash_calculate_prot_segment_size
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_protection_init) refers to fsl_ftfx_flash.o(.text.flash_protection_init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for FTFx_CMD_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.FLASH_Erase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_check_range_to_get_index) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_convert_start_address) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for FTFx_CMD_EraseSectorNonBlocking
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for FTFx_CMD_EraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for FTFx_CMD_Program
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.FLASH_Program) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for FTFx_CMD_ProgramOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for FTFx_CMD_ProgramSection
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource) refers to fsl_ftfx_flash.o(.text.FLASH_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for FTFx_CMD_ReadOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for FTFx_CMD_VerifyErase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for FTFx_CMD_VerifyEraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.flash_convert_start_address) for flash_convert_start_address
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for FTFx_CMD_VerifyProgram
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for FTFx_REG_GetSecurityState
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState) refers to fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for FTFx_CMD_SecurityBypass
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass) refers to fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to memseta.o(.text) for memset
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for FTFx_CMD_SwapControl
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) for flash_validate_swap_indicator_address
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.FLASH_Erase) for FLASH_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.FLASH_Swap) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_validate_swap_indicator_address) refers to fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_IsProtected) refers to fsl_ftfx_flash.o(.text.flash_check_range_to_get_index) for flash_check_range_to_get_index
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected) refers to fsl_ftfx_flash.o(.text.FLASH_IsProtected) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty) refers to fsl_ftfx_flash.o(.text.FLASH_GetProperty) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState) refers to fsl_ftfx_flash.o(.text.FLASH_GetCommandState) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.flash_calculate_mem_size) refers to fsl_ftfx_flash.o(.rodata.kPFlashDensities) for kPFlashDensities
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_mem_size) refers to fsl_ftfx_flash.o(.text.flash_calculate_mem_size) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_prot_segment_size) refers to fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation) for s_ftfxCommonBitOperation
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) for ftfx_copy_common_bit_operation_to_ram
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) refers to fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode) for s_ftfxCommonBitOperationFunctionCode
    fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) refers to memmove.o(.text) for memcpy
    fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_copy_common_bit_operation_to_ram) refers to fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) for fmc_flash_cache_clear
    fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) for fmc_flash_prefetch_speculation_clear
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for ftfx_common_bit_operation_command_sequence
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for ftfx_common_bit_operation_command_sequence
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to memseta.o(.text) for memset
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_common_bit_operation_command_sequence) refers to fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite) refers to fsl_gpio.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GetInstance) for GPIO_GetInstance
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance) refers to fsl_gpio.o(.text.GPIO_GetInstance) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GetInstance) for GPIO_GetInstance
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetInstance) refers to fsl_uart.o(.text.UART_GetInstance) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.str1.1) for .L.str.3
    fsl_uart.o(.text.UART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_Init) refers to fsl_uart.o(.text.UART_Init) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_uart.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_uart.o(.ARM.exidx.text.UART_Deinit) refers to fsl_uart.o(.text.UART_Deinit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_uart.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_uart.o(.rodata.str1.1) for .L.str.3
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate) refers to fsl_uart.o(.text.UART_SetBaudRate) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode) refers to fsl_uart.o(.text.UART_Enable9bitMode) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_Set9thTransmitBit) for UART_Set9thTransmitBit
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_WriteByte) for UART_WriteByte
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_Clear9thTransmitBit) for UART_Clear9thTransmitBit
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_SendAddress) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_Set9thTransmitBit) refers to fsl_uart.o(.text.UART_Set9thTransmitBit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_WriteByte) refers to fsl_uart.o(.text.UART_WriteByte) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_Clear9thTransmitBit) refers to fsl_uart.o(.text.UART_Clear9thTransmitBit) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts) refers to fsl_uart.o(.text.UART_EnableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts) refers to fsl_uart.o(.text.UART_DisableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts) refers to fsl_uart.o(.text.UART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags) refers to fsl_uart.o(.text.UART_GetStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ClearStatusFlags) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for UART_ClearStatusFlags
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_GetInstance) for UART_GetInstance
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.s_uartIRQ) for s_uartIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for UART_TransferHandleIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.EnableIRQ) for EnableIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_GetStatusFlags) for UART_GetStatusFlags
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_ReadNonBlocking) for UART_ReadNonBlocking
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) for UART_TransferIsRxRingBufferFull
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_WriteNonBlocking) for UART_WriteNonBlocking
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.EnableIRQ) refers to fsl_uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_uart.o(.ARM.exidx.text.EnableIRQ) refers to fsl_uart.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.UART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_uart.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_uart.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.UART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.UART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.UART_TransferAbortSend) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount) refers to fsl_uart.o(.text.UART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for UART_TransferGetRxRingBufferLength
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.UART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.UART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.text.UART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO) refers to fsl_uart.o(.text.UART_EnableTxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO) refers to fsl_uart.o(.text.UART_EnableRxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ReadNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_ReadNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_ReadNonBlocking) refers to fsl_uart.o(.text.UART_ReadNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for UART_TransferGetRxRingBufferLength
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferIsRxRingBufferFull) refers to fsl_uart.o(.text.UART_TransferIsRxRingBufferFull) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_WriteNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_WriteNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_WriteNonBlocking) refers to fsl_uart.o(.text.UART_WriteNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ) refers to fsl_uart.o(.text.UART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_DriverIRQHandler) for UART0_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_DriverIRQHandler) for UART1_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_DriverIRQHandler) for UART2_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_DriverIRQHandler) for UART3_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_DriverIRQHandler) for UART4_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_DriverIRQHandler) for UART5_DriverIRQHandler
    fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_uart.o(.data.s_uartIsr) refers to startup_mk64f12.o(.text) for DefaultISR
    fsl_smc.o(.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_smc.o(.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.text.SMC_PreEnterStopModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_smc.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.text.SMC_PostExitStopModes) refers to fsl_smc.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes) refers to fsl_smc.o(.text.SMC_PostExitStopModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_smc.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_smc.o(.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.text.SMC_PreEnterWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.text.SMC_PostExitWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun) refers to fsl_smc.o(.text.SMC_SetPowerModeRun) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait) refers to fsl_smc.o(.text.SMC_SetPowerModeWait) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.text.SMC_SetPowerModeStop) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_EnterStopRamFunc) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_EnterStopRamFunc) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpw) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.text.SMC_SetPowerModeVlps) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.text.SMC_SetPowerModeLls) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.text.SMC_EnterStopRamFunc) for SMC_EnterStopRamFunc
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.text.SMC_SetPowerModeVlls) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.DelayLoop) for DelayLoop
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.DelayLoop) refers to fsl_common_arm.o(.text.DelayLoop) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintCheckFlags) for PrintCheckFlags
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetWidth) for PrintGetWidth
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetPrecision) for PrintGetPrecision
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetLengthFlag) for PrintGetLengthFlag
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsdi) for PrintIsdi
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsfF) for PrintIsfF
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsxX) for PrintIsxX
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.ConvertRadixNumToString) for ConvertRadixNumToString
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetSignChar) for PrintGetSignChar
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputdifFobpu) for PrintOutputdifFobpu
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsobpu) for PrintIsobpu
    fsl_str.o(.text.StrFormatPrintf) refers to memmove.o(.text) for memcpy
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputxX) for PrintOutputxX
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for PrintGetRadixFromobpu
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintCheckFlags) refers to fsl_str.o(.text.PrintCheckFlags) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetWidth) refers to fsl_str.o(.text.PrintGetWidth) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetPrecision) refers to fsl_str.o(.text.PrintGetPrecision) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetLengthFlag) refers to fsl_str.o(.text.PrintGetLengthFlag) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsdi) refers to fsl_str.o(.text.PrintIsdi) for [Anonymous Symbol]
    fsl_str.o(.text.ConvertRadixNumToString) refers to ldiv.o(.text) for __aeabi_ldivmod
    fsl_str.o(.text.ConvertRadixNumToString) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString) refers to fsl_str.o(.text.ConvertRadixNumToString) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetSignChar) refers to fsl_str.o(.text.PrintGetSignChar) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu) refers to fsl_str.o(.text.PrintOutputdifFobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsfF) refers to fsl_str.o(.text.PrintIsfF) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsxX) refers to fsl_str.o(.text.PrintIsxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputxX) refers to fsl_str.o(.text.PrintOutputxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsobpu) refers to fsl_str.o(.text.PrintIsobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for ScanIgnoreWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for StrFormatScanIsFormatStarting
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for StrFormatScanfStringHandling
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanGetBase) for StrFormatScanGetBase
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for StrFormatScanCheckSymbol
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memmove.o(.text) for memcpy
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanFillInteger) for StrFormatScanFillInteger
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_str.o(.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase) refers to fsl_str.o(.text.StrFormatScanGetBase) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger) refers to fsl_str.o(.text.StrFormatScanFillInteger) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData) refers to fsl_debug_console.o(.text.DbgConsole_SendData) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Init) refers to memseta.o(.text) for memset
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for SerialManager_Init
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for SerialManager_OpenWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for SerialManager_OpenReadHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for SerialManager_EnterLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.text.DbgConsole_EnterLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for SerialManager_ExitLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.text.DbgConsole_ExitLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for SerialManager_CloseWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for SerialManager_CloseReadHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for SerialManager_Deinit
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush) refers to fsl_debug_console.o(.text.DbgConsole_Flush) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for DbgConsole_ReadLine
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) for DbgConsole_BlockingVprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingVprintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingVprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for DbgConsole_ReadCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    heap_3.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_3.o(.text.pvPortMalloc) refers to malloc2.o(i.__malloc$2region) for malloc
    heap_3.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_3.o(.ARM.exidx.text.pvPortMalloc) refers to heap_3.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_3.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_3.o(.text.vPortFree) refers to malloc2.o(i.__free$2region) for free
    heap_3.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_3.o(.ARM.exidx.text.vPortFree) refers to heap_3.o(.text.vPortFree) for [Anonymous Symbol]
    system_mk64f12.o(.text.SystemInit) refers to system_mk64f12.o(.text.SystemInitHook) for SystemInitHook
    system_mk64f12.o(.ARM.exidx.text.SystemInit) refers to system_mk64f12.o(.text.SystemInit) for [Anonymous Symbol]
    system_mk64f12.o(.ARM.exidx.text.SystemInitHook) refers to system_mk64f12.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mk64f12.o(.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for UART_GetDefaultConfig
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_Init) for UART_Init
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartGetStatus) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_uart.o(.text.UART_Deinit) for UART_Deinit
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for UART_ReadBlocking
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for UART_WriteBlocking
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Init) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.text.SerialManager_Init) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for Serial_UartInit
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for Serial_UartDeinit
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) refers to memseta.o(.text) for memset
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_Write) for SerialManager_Write
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Write) refers to fsl_component_serial_manager.o(.text.SerialManager_StartWriting) for SerialManager_StartWriting
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Write) refers to fsl_component_serial_manager.o(.text.SerialManager_Write) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_Read) for SerialManager_Read
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Read) refers to fsl_component_serial_manager.o(.text.SerialManager_StartReading) for SerialManager_StartReading
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Read) refers to fsl_component_serial_manager.o(.text.SerialManager_Read) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for Serial_UartEnterLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for Serial_UartExitLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_StartWriting) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for Serial_UartWrite
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting) refers to fsl_component_serial_manager.o(.text.SerialManager_StartWriting) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_StartReading) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for Serial_UartRead
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartReading) refers to fsl_component_serial_manager.o(.text.SerialManager_StartReading) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartWrite) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartRead) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) for HAL_UartEnterLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartExitLowpower) for HAL_UartExitLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    startup_mk64f12.o(.text) refers to startup_mk64f12.o(.isr_vector) for __Vectors
    startup_mk64f12.o(.text) refers to system_mk64f12.o(.text.SystemInit) for SystemInit
    startup_mk64f12.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mk64f12.o(.text) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mk64f12.o(.text) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mk64f12.o(.text) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for UART0_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for UART1_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for UART2_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for UART3_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for UART4_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for UART5_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_enet.o(.text.ENET_1588_Timer_DriverIRQHandler) for ENET_1588_Timer_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_enet.o(.text.ENET_Transmit_DriverIRQHandler) for ENET_Transmit_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_enet.o(.text.ENET_Receive_DriverIRQHandler) for ENET_Receive_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_enet.o(.text.ENET_Error_DriverIRQHandler) for ENET_Error_DriverIRQHandler
    startup_mk64f12.o(.isr_vector) refers to startup_mk64f12.o(.text) for Reset_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mk64f12.o(.isr_vector) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    event_groups.o(.text.xEventGroupCreate) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to heap_3.o(.text.vPortFree) for vPortFree
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memmove.o(.text) for memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memmove.o(.text) for memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_3.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_3.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to memmove.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to memmove.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_3.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for memset
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_3.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.text.vTaskSetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.text.pvTaskGetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.vTaskList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskList) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.vTaskList) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    tasks.o(.text.vTaskList) refers to tasks.o(.text.prvWriteNameToBuffer) for prvWriteNameToBuffer
    tasks.o(.text.vTaskList) refers to printf3.o(i.__0sprintf$3) for __2sprintf
    tasks.o(.text.vTaskList) refers to strlen.o(.text) for strlen
    tasks.o(.text.vTaskList) refers to heap_3.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.vTaskList) refers to tasks.o(.text.vTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvWriteNameToBuffer) refers to strcpy.o(.text) for strcpy
    tasks.o(.text.prvWriteNameToBuffer) refers to strlen.o(.text) for strlen
    tasks.o(.ARM.exidx.text.prvWriteNameToBuffer) refers to tasks.o(.text.prvWriteNameToBuffer) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_3.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_3.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memmove.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memmove.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    atoi.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to lwip_tcpecho_freertos.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to lwip_tcpecho_freertos.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtol.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing lwip_tcpecho_freertos.o(.text), (0 bytes).
    Removing lwip_tcpecho_freertos.o(.ARM.exidx.text.main), (8 bytes).
    Removing lwip_tcpecho_freertos.o(.ARM.exidx.text.stack_init), (8 bytes).
    Removing lwip_tcpecho_freertos.o(.ARM.use_no_argv), (4 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.PORT_SetPinMux), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.PORT_SetPinConfig), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_SetSimSafeDivs), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_SetXtal0Freq), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_CONFIG_SetFllExtRefDiv), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockVLPR), (76 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR), (8 bytes).
    Removing clock_config.o(.text.SMC_SetPowerModeProtection), (14 bytes).
    Removing clock_config.o(.ARM.exidx.text.SMC_SetPowerModeProtection), (8 bytes).
    Removing clock_config.o(.text.SMC_GetPowerModeState), (12 bytes).
    Removing clock_config.o(.ARM.exidx.text.SMC_GetPowerModeState), (8 bytes).
    Removing clock_config.o(.rodata.mcgConfig_BOARD_BootClockVLPR), (11 bytes).
    Removing clock_config.o(.rodata.simConfig_BOARD_BootClockVLPR), (8 bytes).
    Removing clock_config.o(.rodata.oscConfig_BOARD_BootClockVLPR), (8 bytes).
    Removing fsl_enet_mdio.o(.text), (0 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Init), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Write), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_Read), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_ClearInterruptStatus), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_MDIO_WaitTransferOver), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_GetInterruptStatus), (8 bytes).
    Removing fsl_enet_mdio.o(.ARM.exidx.text.ENET_ReadSMIData), (8 bytes).
    Removing fsl_phyksz8081.o(.text), (0 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Init), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Write), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_Read), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetAutoNegotiationStatus), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetLinkStatus), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_GetLinkSpeedDuplex), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_SetLinkSpeedDuplex), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.PHY_KSZ8081_EnableLoopback), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Init), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Read), (8 bytes).
    Removing fsl_phyksz8081.o(.ARM.exidx.text.MDIO_Write), (8 bytes).
    Removing tcpecho.o(.text), (0 bytes).
    Removing tcpecho.o(.ARM.exidx.text.tcpecho_init), (8 bytes).
    Removing tcpecho.o(.ARM.exidx.text.tcpecho_thread), (8 bytes).
    Removing enet_ethernetif.o(.text), (0 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.ethernetif_phy_init), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.PHY_Init), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.PHY_GetAutoNegotiationStatus), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.PHY_GetLinkStatus), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.PHY_GetLinkSpeedDuplex), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.ethernetif_input), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.ethernetif_get_enet_base), (8 bytes).
    Removing enet_ethernetif.o(.ARM.exidx.text.ethernetif_init), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.text), (0 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_enet_init), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_alloc), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_free), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernet_callback), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_release), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_ActiveRead), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_enet_ptr), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_linkinput), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_rx_frame_to_pbufs), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif_linkoutput), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.enet_send_frame), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ethernetif0_init), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_DisableInterrupts), (8 bytes).
    Removing enet_ethernetif_kinetis.o(.ARM.exidx.text.ENET_EnableInterrupts), (8 bytes).
    Removing sys_arch.o(.text), (0 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_assert), (8 bytes).
    Removing sys_arch.o(.text.lwip_rand), (34 bytes).
    Removing sys_arch.o(.ARM.exidx.text.lwip_rand), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_free), (8 bytes).
    Removing sys_arch.o(.text.sys_mbox_post), (34 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_post), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_trypost), (8 bytes).
    Removing sys_arch.o(.text.sys_mbox_trypost_fromisr), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mbox_trypost_fromisr), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_mbox_fetch), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_mbox_tryfetch), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_sem_wait), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_lock), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_unlock), (8 bytes).
    Removing sys_arch.o(.text.sys_mutex_free), (10 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mutex_free), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_signal), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_sem_free), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_init), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_now), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_thread_new), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_protect), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_arch_unprotect), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_lock_tcpip_core), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_unlock_tcpip_core), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_mark_tcpip_thread), (8 bytes).
    Removing sys_arch.o(.ARM.exidx.text.sys_check_core_locking), (8 bytes).
    Removing sys_arch.o(.bss.errno), (4 bytes).
    Removing sys_arch.o(.bss._rand_value), (4 bytes).
    Removing sockets.o(.text), (0 bytes).
    Removing sockets.o(.text.lwip_socket_thread_init), (2 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_thread_init), (8 bytes).
    Removing sockets.o(.text.lwip_socket_thread_cleanup), (2 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_thread_cleanup), (8 bytes).
    Removing sockets.o(.text.lwip_socket_dbg_get_socket), (8 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket_dbg_get_socket), (8 bytes).
    Removing sockets.o(.text.tryget_socket_unconn_nouse), (22 bytes).
    Removing sockets.o(.ARM.exidx.text.tryget_socket_unconn_nouse), (8 bytes).
    Removing sockets.o(.text.lwip_accept), (436 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_accept), (8 bytes).
    Removing sockets.o(.text.get_socket), (28 bytes).
    Removing sockets.o(.ARM.exidx.text.get_socket), (8 bytes).
    Removing sockets.o(.text.alloc_socket), (144 bytes).
    Removing sockets.o(.ARM.exidx.text.alloc_socket), (8 bytes).
    Removing sockets.o(.text.free_socket), (46 bytes).
    Removing sockets.o(.ARM.exidx.text.free_socket), (8 bytes).
    Removing sockets.o(.text.lwip_bind), (160 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_bind), (8 bytes).
    Removing sockets.o(.text.lwip_close), (116 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_close), (8 bytes).
    Removing sockets.o(.text.lwip_connect), (200 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_connect), (8 bytes).
    Removing sockets.o(.text.lwip_listen), (92 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_listen), (8 bytes).
    Removing sockets.o(.text.lwip_recvfrom), (204 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvfrom), (8 bytes).
    Removing sockets.o(.text.lwip_recv_tcp), (428 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recv_tcp), (8 bytes).
    Removing sockets.o(.text.lwip_recv_tcp_from), (48 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recv_tcp_from), (8 bytes).
    Removing sockets.o(.text.lwip_recvfrom_udp_raw), (312 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvfrom_udp_raw), (8 bytes).
    Removing sockets.o(.text.lwip_read), (26 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_read), (8 bytes).
    Removing sockets.o(.text.lwip_readv), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_readv), (8 bytes).
    Removing sockets.o(.text.lwip_recvmsg), (476 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recvmsg), (8 bytes).
    Removing sockets.o(.text.lwip_recv), (20 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_recv), (8 bytes).
    Removing sockets.o(.text.lwip_send), (136 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_send), (8 bytes).
    Removing sockets.o(.text.lwip_sendto), (300 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sendto), (8 bytes).
    Removing sockets.o(.text.lwip_sendmsg), (780 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sendmsg), (8 bytes).
    Removing sockets.o(.text.lwip_socket), (130 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_socket), (8 bytes).
    Removing sockets.o(.text.event_callback), (244 bytes).
    Removing sockets.o(.ARM.exidx.text.event_callback), (8 bytes).
    Removing sockets.o(.text.lwip_write), (10 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_write), (8 bytes).
    Removing sockets.o(.text.lwip_writev), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_writev), (8 bytes).
    Removing sockets.o(.text.lwip_select), (784 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_select), (8 bytes).
    Removing sockets.o(.text.lwip_selscan), (376 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_selscan), (8 bytes).
    Removing sockets.o(.text.lwip_link_select_cb), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_link_select_cb), (8 bytes).
    Removing sockets.o(.text.tryget_socket_unconn_locked), (8 bytes).
    Removing sockets.o(.ARM.exidx.text.tryget_socket_unconn_locked), (8 bytes).
    Removing sockets.o(.text.lwip_unlink_select_cb), (120 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_unlink_select_cb), (8 bytes).
    Removing sockets.o(.text.lwip_poll), (264 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_poll), (8 bytes).
    Removing sockets.o(.text.lwip_pollscan), (324 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_pollscan), (8 bytes).
    Removing sockets.o(.text.lwip_shutdown), (148 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_shutdown), (8 bytes).
    Removing sockets.o(.text.lwip_getpeername), (10 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getpeername), (8 bytes).
    Removing sockets.o(.text.lwip_getaddrname), (128 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getaddrname), (8 bytes).
    Removing sockets.o(.text.lwip_getsockname), (10 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getsockname), (8 bytes).
    Removing sockets.o(.text.lwip_getsockopt), (112 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getsockopt), (8 bytes).
    Removing sockets.o(.text.lwip_getsockopt_impl), (504 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_getsockopt_impl), (8 bytes).
    Removing sockets.o(.text.lwip_setsockopt), (106 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_setsockopt), (8 bytes).
    Removing sockets.o(.text.lwip_setsockopt_impl), (564 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_setsockopt_impl), (8 bytes).
    Removing sockets.o(.text.lwip_ioctl), (78 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_ioctl), (8 bytes).
    Removing sockets.o(.text.lwip_fcntl), (136 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_fcntl), (8 bytes).
    Removing sockets.o(.text.lwip_inet_ntop), (46 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_inet_ntop), (8 bytes).
    Removing sockets.o(.text.lwip_inet_pton), (34 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_inet_pton), (8 bytes).
    Removing sockets.o(.text.tryget_socket), (22 bytes).
    Removing sockets.o(.ARM.exidx.text.tryget_socket), (8 bytes).
    Removing sockets.o(.text.tryget_socket_unconn), (8 bytes).
    Removing sockets.o(.ARM.exidx.text.tryget_socket_unconn), (8 bytes).
    Removing sockets.o(.text.free_socket_locked), (16 bytes).
    Removing sockets.o(.ARM.exidx.text.free_socket_locked), (8 bytes).
    Removing sockets.o(.text.free_socket_free_elements), (38 bytes).
    Removing sockets.o(.ARM.exidx.text.free_socket_free_elements), (8 bytes).
    Removing sockets.o(.text.lwip_sock_make_addr), (172 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sock_make_addr), (8 bytes).
    Removing sockets.o(.text.select_check_waiters), (196 bytes).
    Removing sockets.o(.ARM.exidx.text.select_check_waiters), (8 bytes).
    Removing sockets.o(.text.lwip_poll_should_wake), (80 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_poll_should_wake), (8 bytes).
    Removing sockets.o(.text.lwip_sockopt_to_ipopt), (64 bytes).
    Removing sockets.o(.ARM.exidx.text.lwip_sockopt_to_ipopt), (8 bytes).
    Removing sockets.o(.bss.sockets), (64 bytes).
    Removing sockets.o(.rodata.str1.1), (69 bytes).
    Removing sockets.o(.bss.select_cb_list), (4 bytes).
    Removing netifapi.o(.text), (0 bytes).
    Removing netifapi.o(.text.netifapi_arp_add), (6 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_arp_add), (8 bytes).
    Removing netifapi.o(.text.netifapi_arp_remove), (6 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_arp_remove), (8 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_netif_add), (8 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_do_netif_add), (8 bytes).
    Removing netifapi.o(.text.netifapi_netif_set_addr), (56 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_netif_set_addr), (8 bytes).
    Removing netifapi.o(.text.netifapi_do_netif_set_addr), (20 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_do_netif_set_addr), (8 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_netif_common), (8 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_do_netif_common), (8 bytes).
    Removing netifapi.o(.text.netifapi_netif_name_to_index), (42 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_netif_name_to_index), (8 bytes).
    Removing netifapi.o(.text.netifapi_do_name_to_index), (18 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_do_name_to_index), (8 bytes).
    Removing netifapi.o(.text.netifapi_netif_index_to_name), (28 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_netif_index_to_name), (8 bytes).
    Removing netifapi.o(.text.netifapi_do_index_to_name), (28 bytes).
    Removing netifapi.o(.ARM.exidx.text.netifapi_do_index_to_name), (8 bytes).
    Removing netdb.o(.text), (0 bytes).
    Removing netbuf.o(.text), (0 bytes).
    Removing netbuf.o(.text.netbuf_new), (26 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_new), (8 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_delete), (8 bytes).
    Removing netbuf.o(.text.netbuf_alloc), (140 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_alloc), (8 bytes).
    Removing netbuf.o(.text.netbuf_free), (72 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_free), (8 bytes).
    Removing netbuf.o(.text.netbuf_ref), (108 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_ref), (8 bytes).
    Removing netbuf.o(.text.netbuf_chain), (112 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_chain), (8 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_data), (8 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_next), (8 bytes).
    Removing netbuf.o(.text.netbuf_first), (60 bytes).
    Removing netbuf.o(.ARM.exidx.text.netbuf_first), (8 bytes).
    Removing tcpip.o(.text), (0 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_inpkt), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_input), (8 bytes).
    Removing tcpip.o(.text.tcpip_callback), (72 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callback), (8 bytes).
    Removing tcpip.o(.text.tcpip_try_callback), (84 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_try_callback), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_send_msg_wait_sem), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_api_call), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_new), (28 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_new), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_delete), (12 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_delete), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_trycallback), (44 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback), (8 bytes).
    Removing tcpip.o(.text.tcpip_callbackmsg_trycallback_fromisr), (44 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callbackmsg_trycallback_fromisr), (8 bytes).
    Removing tcpip.o(.text.tcpip_callback_wait), (22 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_callback_wait), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_init), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_thread), (8 bytes).
    Removing tcpip.o(.text.pbuf_free_callback), (18 bytes).
    Removing tcpip.o(.ARM.exidx.text.pbuf_free_callback), (8 bytes).
    Removing tcpip.o(.text.pbuf_free_int), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.pbuf_free_int), (8 bytes).
    Removing tcpip.o(.text.mem_free_callback), (18 bytes).
    Removing tcpip.o(.ARM.exidx.text.mem_free_callback), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_timeouts_mbox_fetch), (8 bytes).
    Removing tcpip.o(.ARM.exidx.text.tcpip_thread_handle_msg), (8 bytes).
    Removing api_msg.o(.text), (0 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_is_err_msg), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_newconn), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.pcb_new), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_alloc), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_free), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_delconn), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.netconn_drain), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_close_internal), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_bind_if), (58 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_bind_if), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_connect), (220 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_connect), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.setup_tcp), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_connected), (272 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_connected), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_disconnect), (34 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_disconnect), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_listen), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.accept_function), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_send), (74 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_send), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_recv), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_accepted), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_write), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_writemore), (8 bytes).
    Removing api_msg.o(.text.lwip_netconn_do_getaddr), (132 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_getaddr), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_do_close), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.recv_udp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.sent_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.poll_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.err_tcp), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.lwip_netconn_err_to_msg), (8 bytes).
    Removing api_msg.o(.ARM.exidx.text.recv_tcp), (8 bytes).
    Removing err.o(.text), (0 bytes).
    Removing err.o(.text.err_to_errno), (30 bytes).
    Removing err.o(.ARM.exidx.text.err_to_errno), (8 bytes).
    Removing err.o(.text.lwip_strerr), (48 bytes).
    Removing err.o(.ARM.exidx.text.lwip_strerr), (8 bytes).
    Removing err.o(.rodata.err_to_errno_table), (68 bytes).
    Removing err.o(.rodata.err_strerr), (68 bytes).
    Removing err.o(.rodata.str1.1), (294 bytes).
    Removing if_api.o(.text), (0 bytes).
    Removing if_api.o(.text.lwip_if_indextoname), (42 bytes).
    Removing if_api.o(.ARM.exidx.text.lwip_if_indextoname), (8 bytes).
    Removing if_api.o(.text.lwip_if_nametoindex), (28 bytes).
    Removing if_api.o(.ARM.exidx.text.lwip_if_nametoindex), (8 bytes).
    Removing api_lib.o(.text), (0 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_new_with_proto_and_callback), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_apimsg), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_prepare_delete), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_delete), (8 bytes).
    Removing api_lib.o(.text.netconn_getaddr), (204 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_getaddr), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_bind), (8 bytes).
    Removing api_lib.o(.text.netconn_bind_if), (88 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_bind_if), (8 bytes).
    Removing api_lib.o(.text.netconn_connect), (104 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_connect), (8 bytes).
    Removing api_lib.o(.text.netconn_disconnect), (88 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_disconnect), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_listen_with_backlog), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_accept), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_err), (8 bytes).
    Removing api_lib.o(.text.netconn_tcp_recvd), (56 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_tcp_recvd), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_tcp_recvd_msg), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_tcp_pbuf), (54 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_data_tcp), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_tcp_pbuf_flags), (52 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_tcp_pbuf_flags), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_udp_raw_netbuf), (54 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_data), (8 bytes).
    Removing api_lib.o(.text.netconn_recv_udp_raw_netbuf_flags), (52 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv_udp_raw_netbuf_flags), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_recv), (8 bytes).
    Removing api_lib.o(.text.netconn_sendto), (34 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_sendto), (8 bytes).
    Removing api_lib.o(.text.netconn_send), (80 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_send), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_write_partly), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_write_vectors_partly), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_close), (8 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_close_shutdown), (8 bytes).
    Removing api_lib.o(.text.netconn_shutdown), (24 bytes).
    Removing api_lib.o(.ARM.exidx.text.netconn_shutdown), (8 bytes).
    Removing memp.o(.text), (0 bytes).
    Removing memp.o(.ARM.exidx.text.memp_init_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_init), (8 bytes).
    Removing memp.o(.text.memp_malloc_pool), (26 bytes).
    Removing memp.o(.ARM.exidx.text.memp_malloc_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.do_memp_malloc_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_malloc), (8 bytes).
    Removing memp.o(.text.memp_free_pool), (40 bytes).
    Removing memp.o(.ARM.exidx.text.memp_free_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.do_memp_free_pool), (8 bytes).
    Removing memp.o(.ARM.exidx.text.memp_free), (8 bytes).
    Removing def.o(.text), (0 bytes).
    Removing def.o(.ARM.exidx.text.lwip_htons), (8 bytes).
    Removing def.o(.ARM.exidx.text.lwip_htonl), (8 bytes).
    Removing def.o(.text.lwip_strnstr), (78 bytes).
    Removing def.o(.ARM.exidx.text.lwip_strnstr), (8 bytes).
    Removing def.o(.text.lwip_strnistr), (70 bytes).
    Removing def.o(.ARM.exidx.text.lwip_strnistr), (8 bytes).
    Removing def.o(.text.lwip_strnicmp), (62 bytes).
    Removing def.o(.ARM.exidx.text.lwip_strnicmp), (8 bytes).
    Removing def.o(.text.lwip_stricmp), (54 bytes).
    Removing def.o(.ARM.exidx.text.lwip_stricmp), (8 bytes).
    Removing def.o(.text.lwip_itoa), (170 bytes).
    Removing def.o(.ARM.exidx.text.lwip_itoa), (8 bytes).
    Removing ip.o(.text), (0 bytes).
    Removing pbuf.o(.text), (0 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloc), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloc_reference), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_free), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_init_alloced_pbuf), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_alloced_custom), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_realloc), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_add_header), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_add_header_impl), (8 bytes).
    Removing pbuf.o(.text.pbuf_add_header_force), (10 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_add_header_force), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_remove_header), (8 bytes).
    Removing pbuf.o(.text.pbuf_header), (10 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header_impl), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_header_force), (8 bytes).
    Removing pbuf.o(.text.pbuf_free_header), (68 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_free_header), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_clen), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_ref), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_cat), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_chain), (8 bytes).
    Removing pbuf.o(.text.pbuf_dechain), (136 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_dechain), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_copy), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_copy_partial_pbuf), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_copy_partial), (8 bytes).
    Removing pbuf.o(.text.pbuf_get_contiguous), (184 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_get_contiguous), (8 bytes).
    Removing pbuf.o(.text.pbuf_skip_const), (32 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_skip_const), (8 bytes).
    Removing pbuf.o(.text.pbuf_skip), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_skip), (8 bytes).
    Removing pbuf.o(.text.pbuf_take), (284 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_take), (8 bytes).
    Removing pbuf.o(.text.pbuf_take_at), (140 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_take_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_coalesce), (36 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_coalesce), (8 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_clone), (8 bytes).
    Removing pbuf.o(.text.pbuf_get_at), (18 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_get_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_try_get_at), (40 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_try_get_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_put_at), (34 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_put_at), (8 bytes).
    Removing pbuf.o(.text.pbuf_memcmp), (120 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_memcmp), (8 bytes).
    Removing pbuf.o(.text.pbuf_memfind), (78 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_memfind), (8 bytes).
    Removing pbuf.o(.text.pbuf_strstr), (54 bytes).
    Removing pbuf.o(.ARM.exidx.text.pbuf_strstr), (8 bytes).
    Removing altcp.o(.text), (0 bytes).
    Removing tcp_out.o(.text), (0 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_write), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_write_checks), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_pbuf_prealloc), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_create_segment), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_split_unsent_seg), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_send_fin), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_enqueue_flags), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_send_empty_ack), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_route), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_segment), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_prepare), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_segment_busy), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto_commit), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_rto), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rexmit_fast), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rst), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rst_common), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_control_segment), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_rst_netif), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_control_segment_netif), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_fill_options), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_keepalive), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_zero_window_probe), (8 bytes).
    Removing tcp_out.o(.ARM.exidx.text.tcp_output_alloc_header_common), (8 bytes).
    Removing raw.o(.text), (0 bytes).
    Removing altcp_tcp.o(.text), (0 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.sys_msleep), (46 bytes).
    Removing sys.o(.ARM.exidx.text.sys_msleep), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text.lwip_init), (8 bytes).
    Removing inet_chksum.o(.text), (0 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.lwip_standard_chksum), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_cksum_pseudo_base), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo), (8 bytes).
    Removing inet_chksum.o(.text.inet_chksum_pseudo_partial), (58 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pseudo_partial), (8 bytes).
    Removing inet_chksum.o(.text.inet_cksum_pseudo_partial_base), (184 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_cksum_pseudo_partial_base), (8 bytes).
    Removing inet_chksum.o(.text.ip_chksum_pseudo_partial), (20 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.ip_chksum_pseudo_partial), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum), (8 bytes).
    Removing inet_chksum.o(.ARM.exidx.text.inet_chksum_pbuf), (8 bytes).
    Removing timeouts.o(.text), (0 bytes).
    Removing timeouts.o(.ARM.exidx.text.tcp_timer_needed), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeout), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.tcpip_tcp_timer), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeouts_init), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.lwip_cyclic_timer), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeout_abs), (8 bytes).
    Removing timeouts.o(.text.sys_untimeout), (70 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_untimeout), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_check_timeouts), (8 bytes).
    Removing timeouts.o(.text.sys_restart_timeouts), (48 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_restart_timeouts), (8 bytes).
    Removing timeouts.o(.ARM.exidx.text.sys_timeouts_sleeptime), (8 bytes).
    Removing timeouts.o(.rodata.lwip_num_cyclic_timers), (4 bytes).
    Removing tcp_in.o(.text), (0 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_timewait_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_listen_input), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_process), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_input_delayed_close), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_trigger_input_pcb_close), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_parseopt), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_get_next_optbyte), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_receive), (8 bytes).
    Removing tcp_in.o(.ARM.exidx.text.tcp_free_acked_segments), (8 bytes).
    Removing netif.o(.text), (0 bytes).
    Removing netif.o(.ARM.exidx.text.netif_init), (8 bytes).
    Removing netif.o(.text.netif_input), (120 bytes).
    Removing netif.o(.ARM.exidx.text.netif_input), (8 bytes).
    Removing netif.o(.text.netif_add_noaddr), (28 bytes).
    Removing netif.o(.ARM.exidx.text.netif_add_noaddr), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_add), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_null_output_ip4), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_addr), (8 bytes).
    Removing netif.o(.text.netif_set_ipaddr), (96 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_ipaddr), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_do_set_ipaddr), (8 bytes).
    Removing netif.o(.text.netif_set_netmask), (92 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_netmask), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_do_set_netmask), (8 bytes).
    Removing netif.o(.text.netif_set_gw), (84 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_gw), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_do_set_gw), (8 bytes).
    Removing netif.o(.text.netif_remove), (98 bytes).
    Removing netif.o(.ARM.exidx.text.netif_remove), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_do_ip_addr_changed), (8 bytes).
    Removing netif.o(.text.netif_set_down), (92 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_down), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_default), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_up), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_issue_reports), (8 bytes).
    Removing netif.o(.text.netif_set_link_up), (100 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_link_up), (8 bytes).
    Removing netif.o(.text.netif_set_link_down), (84 bytes).
    Removing netif.o(.ARM.exidx.text.netif_set_link_down), (8 bytes).
    Removing netif.o(.text.netif_name_to_index), (22 bytes).
    Removing netif.o(.ARM.exidx.text.netif_name_to_index), (8 bytes).
    Removing netif.o(.text.netif_find), (82 bytes).
    Removing netif.o(.ARM.exidx.text.netif_find), (8 bytes).
    Removing netif.o(.text.netif_index_to_name), (42 bytes).
    Removing netif.o(.ARM.exidx.text.netif_index_to_name), (8 bytes).
    Removing netif.o(.ARM.exidx.text.netif_get_by_index), (8 bytes).
    Removing mem.o(.text), (0 bytes).
    Removing mem.o(.ARM.exidx.text.mem_init), (8 bytes).
    Removing mem.o(.ARM.exidx.text.ptr_to_mem), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_free), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_link_valid), (8 bytes).
    Removing mem.o(.ARM.exidx.text.plug_holes), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_trim), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_to_ptr), (8 bytes).
    Removing mem.o(.ARM.exidx.text.mem_malloc), (8 bytes).
    Removing mem.o(.text.mem_calloc), (38 bytes).
    Removing mem.o(.ARM.exidx.text.mem_calloc), (8 bytes).
    Removing udp.o(.text), (0 bytes).
    Removing udp.o(.ARM.exidx.text.udp_init), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_input), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_input_local_match), (8 bytes).
    Removing udp.o(.text.udp_send), (96 bytes).
    Removing udp.o(.ARM.exidx.text.udp_send), (8 bytes).
    Removing udp.o(.text.udp_sendto), (212 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto_if), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_sendto_if_src), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_bind), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_new_port), (8 bytes).
    Removing udp.o(.text.udp_bind_netif), (26 bytes).
    Removing udp.o(.ARM.exidx.text.udp_bind_netif), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_connect), (8 bytes).
    Removing udp.o(.text.udp_disconnect), (76 bytes).
    Removing udp.o(.ARM.exidx.text.udp_disconnect), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_recv), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_remove), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_new), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_new_ip_type), (8 bytes).
    Removing udp.o(.ARM.exidx.text.udp_netif_ip_addr_changed), (8 bytes).
    Removing tcp.o(.text), (0 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_init), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_free), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_tmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_fasttmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_slowtmr), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_backlog_delayed), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_backlog_accepted), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close_shutdown), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_shutdown), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_abandon), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_pcb_remove), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_segs_free), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_abort), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_bind), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_new_port), (8 bytes).
    Removing tcp.o(.text.tcp_bind_netif), (26 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_bind_netif), (8 bytes).
    Removing tcp.o(.text.tcp_listen_with_backlog), (22 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_listen_with_backlog), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_listen_with_backlog_and_err), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_accept_null), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_update_rcv_ann_wnd), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recved), (8 bytes).
    Removing tcp.o(.text.tcp_connect), (432 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_connect), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_next_iss), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_eff_send_mss_netif), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_pcb_purge), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_close_shutdown_fin), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_process_refused_data), (8 bytes).
    Removing tcp.o(.text.tcp_txnow), (38 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_txnow), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recv_null), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_seg_free), (8 bytes).
    Removing tcp.o(.text.tcp_setprio), (68 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_setprio), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_alloc), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_handle_closepend), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_kill_timewait), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_kill_state), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_kill_prio), (8 bytes).
    Removing tcp.o(.text.tcp_new), (10 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_new), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_new_ip_type), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_arg), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_recv), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_sent), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_err), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_accept), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_poll), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_netif_ip_addr_changed_pcblist), (8 bytes).
    Removing tcp.o(.text.tcp_debug_state_str), (52 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_debug_state_str), (8 bytes).
    Removing tcp.o(.text.tcp_tcp_get_tcp_addrinfo), (44 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_tcp_get_tcp_addrinfo), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_listen_closed), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_free_listen), (8 bytes).
    Removing tcp.o(.ARM.exidx.text.tcp_remove_listener), (8 bytes).
    Removing stats.o(.text), (0 bytes).
    Removing dns.o(.text), (0 bytes).
    Removing altcp_alloc.o(.text), (0 bytes).
    Removing ethip6.o(.text), (0 bytes).
    Removing dhcp6.o(.text), (0 bytes).
    Removing ip6_addr.o(.text), (0 bytes).
    Removing nd6.o(.text), (0 bytes).
    Removing mld6.o(.text), (0 bytes).
    Removing icmp6.o(.text), (0 bytes).
    Removing ip6_frag.o(.text), (0 bytes).
    Removing ip6.o(.text), (0 bytes).
    Removing inet6.o(.text), (0 bytes).
    Removing dhcp.o(.text), (0 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_coarse_tmr), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_release_and_stop), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_start), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_t2_timeout), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_t1_timeout), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_fine_tmr), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_timeout), (8 bytes).
    Removing dhcp.o(.text.dhcp_set_struct), (124 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_set_struct), (8 bytes).
    Removing dhcp.o(.text.dhcp_cleanup), (46 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_cleanup), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_dec_pcb_refcount), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_inc_pcb_refcount), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_set_state), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_discover), (8 bytes).
    Removing dhcp.o(.text.dhcp_inform), (174 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_inform), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_create_msg), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_option), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_option_short), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_option_trailer), (8 bytes).
    Removing dhcp.o(.text.dhcp_network_changed_link_up), (80 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_network_changed_link_up), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_reboot), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_renew), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_option_byte), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_supplied_address), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_option_long), (8 bytes).
    Removing dhcp.o(.text.dhcp_release), (10 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_release), (8 bytes).
    Removing dhcp.o(.text.dhcp_stop), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_stop), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_select), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_rebind), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_recv), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_parse_reply), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_handle_ack), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_bind), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_handle_nak), (8 bytes).
    Removing dhcp.o(.ARM.exidx.text.dhcp_handle_offer), (8 bytes).
    Removing ip4.o(.text), (0 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_route), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_input), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_input_accept), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output_if), (8 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output_if_src), (8 bytes).
    Removing ip4.o(.text.ip4_output), (76 bytes).
    Removing ip4.o(.ARM.exidx.text.ip4_output), (8 bytes).
    Removing autoip.o(.text), (0 bytes).
    Removing icmp.o(.text), (0 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_input), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_dest_unreach), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_send_response), (8 bytes).
    Removing icmp.o(.ARM.exidx.text.icmp_time_exceeded), (8 bytes).
    Removing acd.o(.text), (0 bytes).
    Removing etharp.o(.text), (0 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_tmr), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_free_entry), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_request), (8 bytes).
    Removing etharp.o(.text.etharp_cleanup_netif), (54 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_cleanup_netif), (8 bytes).
    Removing etharp.o(.text.etharp_find_addr), (120 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_find_addr), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_find_entry), (8 bytes).
    Removing etharp.o(.text.etharp_get_entry), (128 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_get_entry), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_input), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_update_arp_entry), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_raw), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_output), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_output_to_arp_index), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_query), (8 bytes).
    Removing etharp.o(.ARM.exidx.text.etharp_request_dst), (8 bytes).
    Removing ip4_addr.o(.text), (0 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4_addr_isbroadcast_u32), (8 bytes).
    Removing ip4_addr.o(.text.ip4_addr_netmask_valid), (40 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4_addr_netmask_valid), (8 bytes).
    Removing ip4_addr.o(.text.ipaddr_addr), (26 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ipaddr_addr), (8 bytes).
    Removing ip4_addr.o(.text.ip4addr_aton), (416 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_aton), (8 bytes).
    Removing ip4_addr.o(.text.__isxdigit_helper), (6 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.__isxdigit_helper), (8 bytes).
    Removing ip4_addr.o(.text.ip4addr_ntoa), (18 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa), (8 bytes).
    Removing ip4_addr.o(.text.ip4addr_ntoa_r), (182 bytes).
    Removing ip4_addr.o(.ARM.exidx.text.ip4addr_ntoa_r), (8 bytes).
    Removing ip4_addr.o(.bss.ip4addr_ntoa.str), (16 bytes).
    Removing igmp.o(.text), (0 bytes).
    Removing ip4_frag.o(.text), (0 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_tmr), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_free_complete_datagram), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip4_reass), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_remove_oldest_datagram), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_enqueue_new_datagram), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_chain_frag_into_datagram_and_validate), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_reass_dequeue_datagram), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip4_frag), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_frag_alloc_pbuf_custom_ref), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ip_frag_free_pbuf_custom_ref), (8 bytes).
    Removing ip4_frag.o(.ARM.exidx.text.ipfrag_free_pbuf_custom), (8 bytes).
    Removing bridgeif.o(.text), (0 bytes).
    Removing bridgeif_fdb.o(.text), (0 bytes).
    Removing bridgeif_fdb.o(.text.bridgeif_fdb_update_src), (152 bytes).
    Removing bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_update_src), (8 bytes).
    Removing bridgeif_fdb.o(.text.bridgeif_fdb_get_dst_ports), (104 bytes).
    Removing bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_get_dst_ports), (8 bytes).
    Removing bridgeif_fdb.o(.text.bridgeif_fdb_init), (96 bytes).
    Removing bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_init), (8 bytes).
    Removing bridgeif_fdb.o(.text.bridgeif_age_tmr), (52 bytes).
    Removing bridgeif_fdb.o(.ARM.exidx.text.bridgeif_age_tmr), (8 bytes).
    Removing bridgeif_fdb.o(.text.bridgeif_fdb_age_one_second), (62 bytes).
    Removing bridgeif_fdb.o(.ARM.exidx.text.bridgeif_fdb_age_one_second), (8 bytes).
    Removing ethernet.o(.text), (0 bytes).
    Removing ethernet.o(.ARM.exidx.text.ethernet_input), (8 bytes).
    Removing ethernet.o(.ARM.exidx.text.ethernet_output), (8 bytes).
    Removing lowpan6.o(.text), (0 bytes).
    Removing lowpan6_ble.o(.text), (0 bytes).
    Removing lowpan6_common.o(.text), (0 bytes).
    Removing slipif.o(.text), (0 bytes).
    Removing zepif.o(.text), (0 bytes).
    Removing auth.o(.text), (0 bytes).
    Removing ccp.o(.text), (0 bytes).
    Removing chap-md5.o(.text), (0 bytes).
    Removing chap-new.o(.text), (0 bytes).
    Removing chap_ms.o(.text), (0 bytes).
    Removing demand.o(.text), (0 bytes).
    Removing eap.o(.text), (0 bytes).
    Removing eui64.o(.text), (0 bytes).
    Removing fsm.o(.text), (0 bytes).
    Removing ipcp.o(.text), (0 bytes).
    Removing ipv6cp.o(.text), (0 bytes).
    Removing lcp.o(.text), (0 bytes).
    Removing lwip_ecp.o(.text), (0 bytes).
    Removing magic.o(.text), (0 bytes).
    Removing mppe.o(.text), (0 bytes).
    Removing multilink.o(.text), (0 bytes).
    Removing ppp.o(.text), (0 bytes).
    Removing pppapi.o(.text), (0 bytes).
    Removing pppcrypt.o(.text), (0 bytes).
    Removing pppoe.o(.text), (0 bytes).
    Removing pppol2tp.o(.text), (0 bytes).
    Removing pppos.o(.text), (0 bytes).
    Removing upap.o(.text), (0 bytes).
    Removing utils.o(.text), (0 bytes).
    Removing vj.o(.text), (0 bytes).
    Removing fsl_enet.o(.text), (0 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetInstance), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetDefaultConfig), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Up), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetTxBufferDescriptors), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetRxBufferDescriptors), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetMacController), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_RxBufferAllocAll), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Init), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Reset), (8 bytes).
    Removing fsl_enet.o(.text.ENET_Down), (46 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Down), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_RxBufferFreeAll), (8 bytes).
    Removing fsl_enet.o(.text.ENET_Deinit), (20 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Deinit), (8 bytes).
    Removing fsl_enet.o(.text.CLOCK_DisableClock), (18 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_enet.o(.text.ENET_SetCallback), (34 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetCallback), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetRxISRHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetTxISRHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetErrISRHandler), (8 bytes).
    Removing fsl_enet.o(.text.ENET_SetMII), (58 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetMII), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetMacAddr), (8 bytes).
    Removing fsl_enet.o(.text.ENET_GetMacAddr), (48 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetMacAddr), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetSMI), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_StartSMIWrite), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_StartSMIRead), (8 bytes).
    Removing fsl_enet.o(.text.ENET_GetRxErrBeforeReadFrame), (212 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetRxErrBeforeReadFrame), (8 bytes).
    Removing fsl_enet.o(.text.ENET_GetStatistics), (62 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetStatistics), (8 bytes).
    Removing fsl_enet.o(.text.ENET_GetRxFrameSize), (224 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrameSize), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_IncreaseIndex), (8 bytes).
    Removing fsl_enet.o(.text.ENET_ReadFrame), (254 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ReadFrame), (8 bytes).
    Removing fsl_enet.o(.text.ENET_UpdateReadBuffers), (106 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_UpdateReadBuffers), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SendFrame), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_TxDirtyRingAvailable), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ActiveSendRing), (8 bytes).
    Removing fsl_enet.o(.text.ENET_SetTxReclaim), (124 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SetTxReclaim), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ReclaimTxDescriptor), (8 bytes).
    Removing fsl_enet.o(.text.ENET_GetRxBuffer), (220 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetRxBuffer), (8 bytes).
    Removing fsl_enet.o(.text.ENET_ReleaseRxBuffer), (244 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ReleaseRxBuffer), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ActiveReadRing), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrame), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetRxFrameErr), (8 bytes).
    Removing fsl_enet.o(.text.ENET_StartTxFrame), (636 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_StartTxFrame), (8 bytes).
    Removing fsl_enet.o(.text.ENET_SendFrameZeroCopy), (562 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_SendFrameZeroCopy), (8 bytes).
    Removing fsl_enet.o(.text.ENET_AddMulticastGroup), (150 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_AddMulticastGroup), (8 bytes).
    Removing fsl_enet.o(.text.ENET_LeaveMulticastGroup), (164 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_LeaveMulticastGroup), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_TransmitIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ReceiveIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ErrorIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_EnableSleepMode), (8 bytes).
    Removing fsl_enet.o(.text.ENET_CommonFrame0IRQHandler), (116 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_CommonFrame0IRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Ptp1588IRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_TxIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_RxIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_ErrIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Transmit_DriverIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Receive_DriverIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_Error_DriverIRQHandler), (8 bytes).
    Removing fsl_enet.o(.text.ENET_DriverIRQHandler), (18 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_DriverIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_1588_Timer_DriverIRQHandler), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_GetSMI), (8 bytes).
    Removing fsl_enet.o(.ARM.exidx.text.ENET_EnableInterrupts), (8 bytes).
    Removing fsl_sim.o(.text), (0 bytes).
    Removing fsl_sim.o(.text.SIM_SetUsbVoltRegulatorEnableMode), (28 bytes).
    Removing fsl_sim.o(.ARM.exidx.text.SIM_SetUsbVoltRegulatorEnableMode), (8 bytes).
    Removing fsl_sim.o(.text.SIM_GetUniqueId), (26 bytes).
    Removing fsl_sim.o(.ARM.exidx.text.SIM_GetUniqueId), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPlatClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlashClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllFllSelClock), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetEr32kClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock), (160 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableClock), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableClock), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkSelectFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMcgExtClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0RefFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllDiv), (224 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPll0MonitorMode), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetStatusFlags), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ClearStatusFlags), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOscRangeFromFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.OSC_SetCapLoad), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.OSC_SetExtRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitOsc0), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetSlowIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFastIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_TrimInternalRefClk), (198 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMode), (88 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeiMode), (98 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbiMode), (106 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpiMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpeMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPeeMode), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeiMode), (10 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeeMode), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpiMode), (54 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpeMode), (70 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetMcgConfig), (400 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_FllStableDelay), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_FllStableDelay), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllExtRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.rodata.cst16), (16 bytes).
    Removing fsl_ftfx_controller.o(.text), (0 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_API_Init), (48 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_copy_run_command_to_ram), (26 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_copy_run_command_to_ram), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_init_ifr), (32 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_init_ifr), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Erase), (114 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_mem_range), (46 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_mem_range), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_user_key), (16 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_user_key), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_command_sequence), (58 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking), (58 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_command_sequence_non_blocking), (30 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_command_sequence_non_blocking), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll), (42 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments), (42 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Program), (146 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_read_word_from_byte_address), (34 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_read_word_from_byte_address), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce), (122 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection), (258 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce), (138 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_write_word_to_byte_address), (28 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_write_word_to_byte_address), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource), (174 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_resource_range), (94 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_resource_range), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase), (142 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll), (36 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (36 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram), (146 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass), (72 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState), (68 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl), (126 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.ftfx_check_swap_control_option), (30 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.ftfx_check_swap_control_option), (8 bytes).
    Removing fsl_ftfx_controller.o(.bss.s_ftfxRunCommand), (64 bytes).
    Removing fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode), (12 bytes).
    Removing fsl_ftfx_flash.o(.text), (0 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Init), (44 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_init_features), (12 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_init_features), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_opsonfig_Init), (46 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_opsonfig_Init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_protection_init), (26 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_protection_init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Erase), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_check_range_to_get_index), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_check_range_to_get_index), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_convert_start_address), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_convert_start_address), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Program), (62 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramSection), (62 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadResource), (20 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyErase), (60 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyProgram), (82 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Swap), (226 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_validate_swap_indicator_address), (50 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_validate_swap_indicator_address), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_IsProtected), (238 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection), (50 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetProperty), (142 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetCommandState), (42 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_calculate_mem_size), (40 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_mem_size), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.flash_calculate_prot_segment_size), (16 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.flash_calculate_prot_segment_size), (8 bytes).
    Removing fsl_ftfx_flash.o(.rodata.kPFlashDensities), (30 bytes).
    Removing fsl_ftfx_cache.o(.text), (0 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_Init), (34 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.ftfx_copy_common_bit_operation_to_ram), (18 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_copy_common_bit_operation_to_ram), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (24 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_cache_clear), (16 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear), (16 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (52 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (46 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.ftfx_common_bit_operation_command_sequence), (32 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.ftfx_common_bit_operation_command_sequence), (8 bytes).
    Removing fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation), (64 bytes).
    Removing fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode), (28 bytes).
    Removing fsl_ftfx_flexnvm.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (80 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinWrite), (18 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortGetInterruptFlags), (26 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GetInstance), (96 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortClearInterruptFlags), (28 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.rodata.str1.1), (53 bytes).
    Removing fsl_gpio.o(.rodata.s_portBases), (20 bytes).
    Removing fsl_uart.o(.text), (0 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetInstance), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetRxRingBufferLength), (40 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_uart.o(.text.UART_Deinit), (44 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Deinit), (8 bytes).
    Removing fsl_uart.o(.text.CLOCK_DisableClock), (30 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig), (8 bytes).
    Removing fsl_uart.o(.text.UART_SetBaudRate), (148 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate), (8 bytes).
    Removing fsl_uart.o(.text.UART_Enable9bitMode), (48 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode), (8 bytes).
    Removing fsl_uart.o(.text.UART_SendAddress), (52 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SendAddress), (8 bytes).
    Removing fsl_uart.o(.text.UART_Set9thTransmitBit), (10 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Set9thTransmitBit), (8 bytes).
    Removing fsl_uart.o(.text.UART_WriteByte), (4 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteByte), (8 bytes).
    Removing fsl_uart.o(.text.UART_Clear9thTransmitBit), (10 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Clear9thTransmitBit), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableInterrupts), (44 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_DisableInterrupts), (50 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_GetEnabledInterrupts), (32 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_GetStatusFlags), (22 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags), (8 bytes).
    Removing fsl_uart.o(.text.UART_ClearStatusFlags), (54 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_ReadBlocking), (204 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferCreateHandle), (120 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferHandleIRQ), (1052 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ), (8 bytes).
    Removing fsl_uart.o(.text.EnableIRQ), (20 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferStartRingBuffer), (120 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_uart.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_uart.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferStopRingBuffer), (90 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferSendNonBlocking), (176 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferAbortSend), (58 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetSendCount), (80 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferReceiveNonBlocking), (428 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferAbortReceive), (86 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableTxFIFO), (66 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableRxFIFO), (62 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO), (8 bytes).
    Removing fsl_uart.o(.text.UART_ReadNonBlocking), (48 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ReadNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferIsRxRingBufferFull), (46 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferIsRxRingBufferFull), (8 bytes).
    Removing fsl_uart.o(.text.UART_WriteNonBlocking), (48 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_uart.o(.rodata.s_uartIRQ), (6 bytes).
    Removing fsl_uart.o(.rodata.cst16), (32 bytes).
    Removing fsl_smc.o(.text), (0 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterStopModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes), (8 bytes).
    Removing fsl_smc.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitStopModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes), (8 bytes).
    Removing fsl_smc.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterWaitModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitWaitModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeRun), (14 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeWait), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeStop), (48 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop), (8 bytes).
    Removing fsl_smc.o(.text.SMC_EnterStopRamFunc), (16 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_EnterStopRamFunc), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpr), (26 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpw), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlps), (50 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeLls), (50 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlls), (84 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls), (8 bytes).
    Removing fsl_smc.o(.bss.g_savedPrimask), (4 bytes).
    Removing fsl_smc.o(.data.s_stopRamFuncArray), (24 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (70 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (28 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.SDK_DelayAtLeastUs), (136 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common_arm.o(.text.DelayLoop), (10 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.DelayLoop), (8 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintCheckFlags), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetWidth), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetPrecision), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetLengthFlag), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsdi), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetSignChar), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsfF), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsxX), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputxX), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsobpu), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (524 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_str.o(.text.ScanIgnoreWhiteSpace), (42 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanIsFormatStarting), (20 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanfStringHandling), (242 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling), (8 bytes).
    Removing fsl_str.o(.text.ScanIsWhiteSpace), (20 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanGetBase), (34 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanCheckSymbol), (30 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanFillInteger), (12 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_SendData), (46 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadLine), (98 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadCharacter), (38 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_EnterLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ExitLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (72 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Flush), (4 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (18 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (60 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingPrintf), (32 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingVprintf), (86 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingVprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (36 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing heap_3.o(.text), (0 bytes).
    Removing heap_3.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_3.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing system_mk64f12.o(.text), (0 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mk64f12.o(.text.SystemCoreClockUpdate), (370 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_adapter_uart.o(.text), (0 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartGetStatus), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking), (104 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartExitLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.text), (0 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Deinit), (62 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle), (50 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle), (46 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Write), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Read), (34 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Read), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower), (26 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower), (26 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_StartReading), (20 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_StartReading), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text), (0 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartDeinit), (14 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartRead), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Error_Check), (24 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check), (8 bytes).
    Removing fsl_component_generic_list.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (56 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (52 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (64 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (90 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (220 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (72 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (216 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (196 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (40 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (84 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (30 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (318 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (166 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (230 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (68 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (94 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (142 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (164 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (34 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (154 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (188 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetThreadLocalStoragePointer), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.pvTaskGetThreadLocalStoragePointer), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.vTaskList), (176 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskList), (8 bytes).
    Removing tasks.o(.text.prvWriteNameToBuffer), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvWriteNameToBuffer), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.rodata), (28 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (86 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

1728 unused section(s) (total 53745 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memmove.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memmovec.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/string/strncmp.c        0x00000000   Number         0  strncmp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    acd.c                                    0x00000000   Number         0  acd.o ABSOLUTE
    altcp.c                                  0x00000000   Number         0  altcp.o ABSOLUTE
    altcp_alloc.c                            0x00000000   Number         0  altcp_alloc.o ABSOLUTE
    altcp_tcp.c                              0x00000000   Number         0  altcp_tcp.o ABSOLUTE
    api_lib.c                                0x00000000   Number         0  api_lib.o ABSOLUTE
    api_msg.c                                0x00000000   Number         0  api_msg.o ABSOLUTE
    auth.c                                   0x00000000   Number         0  auth.o ABSOLUTE
    autoip.c                                 0x00000000   Number         0  autoip.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    bridgeif.c                               0x00000000   Number         0  bridgeif.o ABSOLUTE
    bridgeif_fdb.c                           0x00000000   Number         0  bridgeif_fdb.o ABSOLUTE
    ccp.c                                    0x00000000   Number         0  ccp.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    chap-md5.c                               0x00000000   Number         0  chap-md5.o ABSOLUTE
    chap-new.c                               0x00000000   Number         0  chap-new.o ABSOLUTE
    chap_ms.c                                0x00000000   Number         0  chap_ms.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    def.c                                    0x00000000   Number         0  def.o ABSOLUTE
    demand.c                                 0x00000000   Number         0  demand.o ABSOLUTE
    dhcp.c                                   0x00000000   Number         0  dhcp.o ABSOLUTE
    dhcp6.c                                  0x00000000   Number         0  dhcp6.o ABSOLUTE
    dns.c                                    0x00000000   Number         0  dns.o ABSOLUTE
    eap.c                                    0x00000000   Number         0  eap.o ABSOLUTE
    enet_ethernetif.c                        0x00000000   Number         0  enet_ethernetif.o ABSOLUTE
    enet_ethernetif_kinetis.c                0x00000000   Number         0  enet_ethernetif_kinetis.o ABSOLUTE
    err.c                                    0x00000000   Number         0  err.o ABSOLUTE
    etharp.c                                 0x00000000   Number         0  etharp.o ABSOLUTE
    ethernet.c                               0x00000000   Number         0  ethernet.o ABSOLUTE
    ethip6.c                                 0x00000000   Number         0  ethip6.o ABSOLUTE
    eui64.c                                  0x00000000   Number         0  eui64.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    fsl_adapter_uart.c                       0x00000000   Number         0  fsl_adapter_uart.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_component_serial_manager.c           0x00000000   Number         0  fsl_component_serial_manager.o ABSOLUTE
    fsl_component_serial_port_uart.c         0x00000000   Number         0  fsl_component_serial_port_uart.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_enet.c                               0x00000000   Number         0  fsl_enet.o ABSOLUTE
    fsl_enet_mdio.c                          0x00000000   Number         0  fsl_enet_mdio.o ABSOLUTE
    fsl_ftfx_cache.c                         0x00000000   Number         0  fsl_ftfx_cache.o ABSOLUTE
    fsl_ftfx_controller.c                    0x00000000   Number         0  fsl_ftfx_controller.o ABSOLUTE
    fsl_ftfx_flash.c                         0x00000000   Number         0  fsl_ftfx_flash.o ABSOLUTE
    fsl_ftfx_flexnvm.c                       0x00000000   Number         0  fsl_ftfx_flexnvm.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_phyksz8081.c                         0x00000000   Number         0  fsl_phyksz8081.o ABSOLUTE
    fsl_sim.c                                0x00000000   Number         0  fsl_sim.o ABSOLUTE
    fsl_smc.c                                0x00000000   Number         0  fsl_smc.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    fsl_uart.c                               0x00000000   Number         0  fsl_uart.o ABSOLUTE
    fsm.c                                    0x00000000   Number         0  fsm.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_3.c                                 0x00000000   Number         0  heap_3.o ABSOLUTE
    icmp.c                                   0x00000000   Number         0  icmp.o ABSOLUTE
    icmp6.c                                  0x00000000   Number         0  icmp6.o ABSOLUTE
    if_api.c                                 0x00000000   Number         0  if_api.o ABSOLUTE
    igmp.c                                   0x00000000   Number         0  igmp.o ABSOLUTE
    inet6.c                                  0x00000000   Number         0  inet6.o ABSOLUTE
    inet_chksum.c                            0x00000000   Number         0  inet_chksum.o ABSOLUTE
    init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    ip.c                                     0x00000000   Number         0  ip.o ABSOLUTE
    ip4.c                                    0x00000000   Number         0  ip4.o ABSOLUTE
    ip4_addr.c                               0x00000000   Number         0  ip4_addr.o ABSOLUTE
    ip4_frag.c                               0x00000000   Number         0  ip4_frag.o ABSOLUTE
    ip6.c                                    0x00000000   Number         0  ip6.o ABSOLUTE
    ip6_addr.c                               0x00000000   Number         0  ip6_addr.o ABSOLUTE
    ip6_frag.c                               0x00000000   Number         0  ip6_frag.o ABSOLUTE
    ipcp.c                                   0x00000000   Number         0  ipcp.o ABSOLUTE
    ipv6cp.c                                 0x00000000   Number         0  ipv6cp.o ABSOLUTE
    lcp.c                                    0x00000000   Number         0  lcp.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    lowpan6.c                                0x00000000   Number         0  lowpan6.o ABSOLUTE
    lowpan6_ble.c                            0x00000000   Number         0  lowpan6_ble.o ABSOLUTE
    lowpan6_common.c                         0x00000000   Number         0  lowpan6_common.o ABSOLUTE
    lwip_ecp.c                               0x00000000   Number         0  lwip_ecp.o ABSOLUTE
    lwip_tcpecho_freertos.c                  0x00000000   Number         0  lwip_tcpecho_freertos.o ABSOLUTE
    magic.c                                  0x00000000   Number         0  magic.o ABSOLUTE
    mem.c                                    0x00000000   Number         0  mem.o ABSOLUTE
    memp.c                                   0x00000000   Number         0  memp.o ABSOLUTE
    mld6.c                                   0x00000000   Number         0  mld6.o ABSOLUTE
    mppe.c                                   0x00000000   Number         0  mppe.o ABSOLUTE
    multilink.c                              0x00000000   Number         0  multilink.o ABSOLUTE
    nd6.c                                    0x00000000   Number         0  nd6.o ABSOLUTE
    netbuf.c                                 0x00000000   Number         0  netbuf.o ABSOLUTE
    netdb.c                                  0x00000000   Number         0  netdb.o ABSOLUTE
    netif.c                                  0x00000000   Number         0  netif.o ABSOLUTE
    netifapi.c                               0x00000000   Number         0  netifapi.o ABSOLUTE
    pbuf.c                                   0x00000000   Number         0  pbuf.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    ppp.c                                    0x00000000   Number         0  ppp.o ABSOLUTE
    pppapi.c                                 0x00000000   Number         0  pppapi.o ABSOLUTE
    pppcrypt.c                               0x00000000   Number         0  pppcrypt.o ABSOLUTE
    pppoe.c                                  0x00000000   Number         0  pppoe.o ABSOLUTE
    pppol2tp.c                               0x00000000   Number         0  pppol2tp.o ABSOLUTE
    pppos.c                                  0x00000000   Number         0  pppos.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    raw.c                                    0x00000000   Number         0  raw.o ABSOLUTE
    slipif.c                                 0x00000000   Number         0  slipif.o ABSOLUTE
    sockets.c                                0x00000000   Number         0  sockets.o ABSOLUTE
    stats.c                                  0x00000000   Number         0  stats.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    sys_arch.c                               0x00000000   Number         0  sys_arch.o ABSOLUTE
    system_MK64F12.c                         0x00000000   Number         0  system_mk64f12.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    tcp.c                                    0x00000000   Number         0  tcp.o ABSOLUTE
    tcp_in.c                                 0x00000000   Number         0  tcp_in.o ABSOLUTE
    tcp_out.c                                0x00000000   Number         0  tcp_out.o ABSOLUTE
    tcpecho.c                                0x00000000   Number         0  tcpecho.o ABSOLUTE
    tcpip.c                                  0x00000000   Number         0  tcpip.o ABSOLUTE
    timeouts.c                               0x00000000   Number         0  timeouts.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    udp.c                                    0x00000000   Number         0  udp.o ABSOLUTE
    upap.c                                   0x00000000   Number         0  upap.o ABSOLUTE
    utils.c                                  0x00000000   Number         0  utils.o ABSOLUTE
    vj.c                                     0x00000000   Number         0  vj.o ABSOLUTE
    zepif.c                                  0x00000000   Number         0  zepif.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000410   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00000410   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00000414   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000418   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000418   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000418   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000420   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00000420   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000420   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00000420   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x00000424   Section        0  startup_mk64f12.o(.text)
    .text                                    0x00000600   Section        0  uldiv.o(.text)
    .text                                    0x00000662   Section        0  ldiv.o(.text)
    .text                                    0x000006c4   Section        0  memmove.o(.text)
    .text                                    0x00000706   Section        0  memseta.o(.text)
    .text                                    0x0000072a   Section        0  strlen.o(.text)
    .text                                    0x00000738   Section        0  memcmp.o(.text)
    .text                                    0x00000752   Section        0  llshl.o(.text)
    .text                                    0x00000770   Section        0  llushr.o(.text)
    .text                                    0x00000790   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x000007b4   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x0000080c   Section        0  clock_config.o(.text.BOARD_InitBootClocks)
    [Anonymous Symbol]                       0x00000814   Section        0  pin_mux.o(.text.BOARD_InitBootPins)
    [Anonymous Symbol]                       0x0000081c   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x00000834   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x0000090c   Section        0  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    CLOCK_CONFIG_SetFllExtRefDiv             0x00000959   Thumb Code    18  clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv)
    [Anonymous Symbol]                       0x00000958   Section        0  clock_config.o(.text.CLOCK_CONFIG_SetFllExtRefDiv)
    CLOCK_EnableClock                        0x0000096d   Thumb Code    28  pin_mux.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x0000096c   Section        0  pin_mux.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x00000989   Thumb Code    28  fsl_enet_mdio.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x00000988   Section        0  fsl_enet_mdio.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x000009a5   Thumb Code    18  fsl_enet.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000009a4   Section        0  fsl_enet.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x000009b9   Thumb Code    28  fsl_uart.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000009b8   Section        0  fsl_uart.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000009d4   Section        0  fsl_clock.o(.text.CLOCK_EnablePll0)
    [Anonymous Symbol]                       0x00000a24   Section        0  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    [Anonymous Symbol]                       0x00000a40   Section        0  fsl_clock.o(.text.CLOCK_GetEr32kClkFreq)
    [Anonymous Symbol]                       0x00000aac   Section        0  fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq)
    CLOCK_GetFllExtRefClkFreq                0x00000acd   Thumb Code   100  fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq)
    [Anonymous Symbol]                       0x00000acc   Section        0  fsl_clock.o(.text.CLOCK_GetFllExtRefClkFreq)
    [Anonymous Symbol]                       0x00000b30   Section        0  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFllFreq.fllFactorTable          0x00000b70   Number         0  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFllRefClkFreq                   0x00000b81   Thumb Code    34  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x00000b80   Section        0  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x00000ba4   Section        0  fsl_clock.o(.text.CLOCK_GetFreq)
    [Anonymous Symbol]                       0x00000c5c   Section        0  fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq)
    CLOCK_GetInternalRefClkSelectFreq        0x00000c75   Thumb Code    48  fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq)
    [Anonymous Symbol]                       0x00000c74   Section        0  fsl_clock.o(.text.CLOCK_GetInternalRefClkSelectFreq)
    CLOCK_GetMcgExtClkFreq                   0x00000ca5   Thumb Code   108  fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq)
    [Anonymous Symbol]                       0x00000ca4   Section        0  fsl_clock.o(.text.CLOCK_GetMcgExtClkFreq)
    [Anonymous Symbol]                       0x00000d38   Section        0  fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq)
    CLOCK_GetOscRangeFromFreq                0x00000d81   Thumb Code    32  fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq)
    [Anonymous Symbol]                       0x00000d80   Section        0  fsl_clock.o(.text.CLOCK_GetOscRangeFromFreq)
    [Anonymous Symbol]                       0x00000da0   Section        0  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    [Anonymous Symbol]                       0x00000dd0   Section        0  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    CLOCK_GetPll0RefFreq                     0x00000e21   Thumb Code     8  fsl_clock.o(.text.CLOCK_GetPll0RefFreq)
    [Anonymous Symbol]                       0x00000e20   Section        0  fsl_clock.o(.text.CLOCK_GetPll0RefFreq)
    [Anonymous Symbol]                       0x00000e28   Section        0  fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq)
    [Anonymous Symbol]                       0x00000e5c   Section        0  fsl_clock.o(.text.CLOCK_InitOsc0)
    CLOCK_SetEr32kClock                      0x00000eb5   Thumb Code    18  fsl_clock.o(.text.CLOCK_SetEr32kClock)
    [Anonymous Symbol]                       0x00000eb4   Section        0  fsl_clock.o(.text.CLOCK_SetEr32kClock)
    [Anonymous Symbol]                       0x00000ec8   Section        0  fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig)
    [Anonymous Symbol]                       0x00000f04   Section        0  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    [Anonymous Symbol]                       0x00000f98   Section        0  fsl_clock.o(.text.CLOCK_SetPbeMode)
    CLOCK_SetPllFllSelClock                  0x0000100d   Thumb Code    18  fsl_clock.o(.text.CLOCK_SetPllFllSelClock)
    [Anonymous Symbol]                       0x0000100c   Section        0  fsl_clock.o(.text.CLOCK_SetPllFllSelClock)
    [Anonymous Symbol]                       0x00001020   Section        0  fsl_clock.o(.text.CLOCK_SetSimConfig)
    CLOCK_SetSimSafeDivs                     0x00001041   Thumb Code    16  clock_config.o(.text.CLOCK_SetSimSafeDivs)
    [Anonymous Symbol]                       0x00001040   Section        0  clock_config.o(.text.CLOCK_SetSimSafeDivs)
    CLOCK_SetXtal0Freq                       0x00001051   Thumb Code    20  clock_config.o(.text.CLOCK_SetXtal0Freq)
    [Anonymous Symbol]                       0x00001050   Section        0  clock_config.o(.text.CLOCK_SetXtal0Freq)
    ConvertRadixNumToString                  0x00001065   Thumb Code   214  fsl_str.o(.text.ConvertRadixNumToString)
    [Anonymous Symbol]                       0x00001064   Section        0  fsl_str.o(.text.ConvertRadixNumToString)
    [Anonymous Symbol]                       0x0000113c   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_PrintCallback                 0x000011d1   Thumb Code    68  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x000011d0   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00001214   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00001234   Section        0  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    [Anonymous Symbol]                       0x00001274   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    DisableGlobalIRQ                         0x000012b9   Thumb Code    12  fsl_enet.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x000012b8   Section        0  fsl_enet.o(.text.DisableGlobalIRQ)
    DisableGlobalIRQ                         0x000012c5   Thumb Code    12  fsl_component_serial_manager.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x000012c4   Section        0  fsl_component_serial_manager.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x000012d0   Section        0  fsl_enet.o(.text.ENET_1588_Timer_DriverIRQHandler)
    ENET_ActiveRead                          0x000012e5   Thumb Code     8  enet_ethernetif_kinetis.o(.text.ENET_ActiveRead)
    [Anonymous Symbol]                       0x000012e4   Section        0  enet_ethernetif_kinetis.o(.text.ENET_ActiveRead)
    ENET_ActiveReadRing                      0x000012ed   Thumb Code    40  fsl_enet.o(.text.ENET_ActiveReadRing)
    [Anonymous Symbol]                       0x000012ec   Section        0  fsl_enet.o(.text.ENET_ActiveReadRing)
    ENET_ActiveSendRing                      0x00001315   Thumb Code    38  fsl_enet.o(.text.ENET_ActiveSendRing)
    [Anonymous Symbol]                       0x00001314   Section        0  fsl_enet.o(.text.ENET_ActiveSendRing)
    ENET_ClearInterruptStatus                0x0000133d   Thumb Code     8  fsl_enet_mdio.o(.text.ENET_ClearInterruptStatus)
    [Anonymous Symbol]                       0x0000133c   Section        0  fsl_enet_mdio.o(.text.ENET_ClearInterruptStatus)
    ENET_DisableInterrupts                   0x00001345   Thumb Code    10  enet_ethernetif_kinetis.o(.text.ENET_DisableInterrupts)
    [Anonymous Symbol]                       0x00001344   Section        0  enet_ethernetif_kinetis.o(.text.ENET_DisableInterrupts)
    ENET_EnableInterrupts                    0x00001351   Thumb Code    10  enet_ethernetif_kinetis.o(.text.ENET_EnableInterrupts)
    [Anonymous Symbol]                       0x00001350   Section        0  enet_ethernetif_kinetis.o(.text.ENET_EnableInterrupts)
    ENET_EnableInterrupts                    0x0000135d   Thumb Code     8  fsl_enet.o(.text.ENET_EnableInterrupts)
    [Anonymous Symbol]                       0x0000135c   Section        0  fsl_enet.o(.text.ENET_EnableInterrupts)
    ENET_EnableSleepMode                     0x00001365   Thumb Code    10  fsl_enet.o(.text.ENET_EnableSleepMode)
    [Anonymous Symbol]                       0x00001364   Section        0  fsl_enet.o(.text.ENET_EnableSleepMode)
    [Anonymous Symbol]                       0x00001370   Section        0  fsl_enet.o(.text.ENET_ErrIRQHandler)
    [Anonymous Symbol]                       0x00001398   Section        0  fsl_enet.o(.text.ENET_ErrorIRQHandler)
    [Anonymous Symbol]                       0x00001418   Section        0  fsl_enet.o(.text.ENET_Error_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000142c   Section        0  fsl_enet.o(.text.ENET_GetDefaultConfig)
    [Anonymous Symbol]                       0x00001464   Section        0  fsl_enet.o(.text.ENET_GetInstance)
    ENET_GetInterruptStatus                  0x000014b9   Thumb Code     4  fsl_enet_mdio.o(.text.ENET_GetInterruptStatus)
    [Anonymous Symbol]                       0x000014b8   Section        0  fsl_enet_mdio.o(.text.ENET_GetInterruptStatus)
    [Anonymous Symbol]                       0x000014bc   Section        0  fsl_enet.o(.text.ENET_GetRxFrame)
    ENET_GetRxFrameErr                       0x00001791   Thumb Code    84  fsl_enet.o(.text.ENET_GetRxFrameErr)
    [Anonymous Symbol]                       0x00001790   Section        0  fsl_enet.o(.text.ENET_GetRxFrameErr)
    ENET_GetSMI                              0x0000180d   Thumb Code    12  fsl_enet.o(.text.ENET_GetSMI)
    [Anonymous Symbol]                       0x0000180c   Section        0  fsl_enet.o(.text.ENET_GetSMI)
    ENET_IncreaseIndex                       0x00001819   Thumb Code    36  fsl_enet.o(.text.ENET_IncreaseIndex)
    [Anonymous Symbol]                       0x00001818   Section        0  fsl_enet.o(.text.ENET_IncreaseIndex)
    [Anonymous Symbol]                       0x00001848   Section        0  fsl_enet.o(.text.ENET_Init)
    ENET_MDIO_Init                           0x00001885   Thumb Code    40  fsl_enet_mdio.o(.text.ENET_MDIO_Init)
    [Anonymous Symbol]                       0x00001884   Section        0  fsl_enet_mdio.o(.text.ENET_MDIO_Init)
    ENET_MDIO_Read                           0x000018ad   Thumb Code    68  fsl_enet_mdio.o(.text.ENET_MDIO_Read)
    [Anonymous Symbol]                       0x000018ac   Section        0  fsl_enet_mdio.o(.text.ENET_MDIO_Read)
    ENET_MDIO_WaitTransferOver               0x0000193d   Thumb Code    16  fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver)
    [Anonymous Symbol]                       0x0000193c   Section        0  fsl_enet_mdio.o(.text.ENET_MDIO_WaitTransferOver)
    ENET_MDIO_Write                          0x0000194d   Thumb Code    50  fsl_enet_mdio.o(.text.ENET_MDIO_Write)
    [Anonymous Symbol]                       0x0000194c   Section        0  fsl_enet_mdio.o(.text.ENET_MDIO_Write)
    [Anonymous Symbol]                       0x00001980   Section        0  fsl_enet.o(.text.ENET_Ptp1588IRQHandler)
    ENET_ReadSMIData                         0x00001989   Thumb Code     6  fsl_enet_mdio.o(.text.ENET_ReadSMIData)
    [Anonymous Symbol]                       0x00001988   Section        0  fsl_enet_mdio.o(.text.ENET_ReadSMIData)
    [Anonymous Symbol]                       0x00001990   Section        0  fsl_enet.o(.text.ENET_ReceiveIRQHandler)
    [Anonymous Symbol]                       0x000019ec   Section        0  fsl_enet.o(.text.ENET_Receive_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001a00   Section        0  fsl_enet.o(.text.ENET_ReclaimTxDescriptor)
    ENET_Reset                               0x00001ae9   Thumb Code    10  fsl_enet.o(.text.ENET_Reset)
    [Anonymous Symbol]                       0x00001ae8   Section        0  fsl_enet.o(.text.ENET_Reset)
    ENET_RxBufferAllocAll                    0x00001af5   Thumb Code   172  fsl_enet.o(.text.ENET_RxBufferAllocAll)
    [Anonymous Symbol]                       0x00001af4   Section        0  fsl_enet.o(.text.ENET_RxBufferAllocAll)
    ENET_RxBufferFreeAll                     0x00001bbd   Thumb Code   172  fsl_enet.o(.text.ENET_RxBufferFreeAll)
    [Anonymous Symbol]                       0x00001bbc   Section        0  fsl_enet.o(.text.ENET_RxBufferFreeAll)
    [Anonymous Symbol]                       0x00001c84   Section        0  fsl_enet.o(.text.ENET_RxIRQHandler)
    [Anonymous Symbol]                       0x00001cac   Section        0  fsl_enet.o(.text.ENET_SendFrame)
    [Anonymous Symbol]                       0x00001f10   Section        0  fsl_enet.o(.text.ENET_SetErrISRHandler)
    ENET_SetHandler                          0x00001f2d   Thumb Code   270  fsl_enet.o(.text.ENET_SetHandler)
    [Anonymous Symbol]                       0x00001f2c   Section        0  fsl_enet.o(.text.ENET_SetHandler)
    [Anonymous Symbol]                       0x0000203c   Section        0  fsl_enet.o(.text.ENET_SetMacAddr)
    ENET_SetMacController                    0x00002055   Thumb Code   354  fsl_enet.o(.text.ENET_SetMacController)
    [Anonymous Symbol]                       0x00002054   Section        0  fsl_enet.o(.text.ENET_SetMacController)
    ENET_SetRxBufferDescriptors              0x000021b9   Thumb Code   228  fsl_enet.o(.text.ENET_SetRxBufferDescriptors)
    [Anonymous Symbol]                       0x000021b8   Section        0  fsl_enet.o(.text.ENET_SetRxBufferDescriptors)
    [Anonymous Symbol]                       0x000022d0   Section        0  fsl_enet.o(.text.ENET_SetRxISRHandler)
    [Anonymous Symbol]                       0x000022ec   Section        0  fsl_enet.o(.text.ENET_SetSMI)
    ENET_SetTxBufferDescriptors              0x00002395   Thumb Code   210  fsl_enet.o(.text.ENET_SetTxBufferDescriptors)
    [Anonymous Symbol]                       0x00002394   Section        0  fsl_enet.o(.text.ENET_SetTxBufferDescriptors)
    [Anonymous Symbol]                       0x00002468   Section        0  fsl_enet.o(.text.ENET_SetTxISRHandler)
    [Anonymous Symbol]                       0x00002484   Section        0  fsl_enet.o(.text.ENET_StartSMIRead)
    [Anonymous Symbol]                       0x000024a4   Section        0  fsl_enet.o(.text.ENET_StartSMIWrite)
    [Anonymous Symbol]                       0x000024d0   Section        0  fsl_enet.o(.text.ENET_TransmitIRQHandler)
    [Anonymous Symbol]                       0x00002544   Section        0  fsl_enet.o(.text.ENET_Transmit_DriverIRQHandler)
    ENET_TxDirtyRingAvailable                0x00002559   Thumb Code    10  fsl_enet.o(.text.ENET_TxDirtyRingAvailable)
    [Anonymous Symbol]                       0x00002558   Section        0  fsl_enet.o(.text.ENET_TxDirtyRingAvailable)
    [Anonymous Symbol]                       0x00002564   Section        0  fsl_enet.o(.text.ENET_TxIRQHandler)
    [Anonymous Symbol]                       0x0000258c   Section        0  fsl_enet.o(.text.ENET_Up)
    EnableGlobalIRQ                          0x00002675   Thumb Code     6  fsl_enet.o(.text.EnableGlobalIRQ)
    [Anonymous Symbol]                       0x00002674   Section        0  fsl_enet.o(.text.EnableGlobalIRQ)
    EnableGlobalIRQ                          0x0000267d   Thumb Code     6  fsl_component_serial_manager.o(.text.EnableGlobalIRQ)
    [Anonymous Symbol]                       0x0000267c   Section        0  fsl_component_serial_manager.o(.text.EnableGlobalIRQ)
    EnableIRQ                                0x00002685   Thumb Code     8  fsl_enet.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x00002684   Section        0  fsl_enet.o(.text.EnableIRQ)
    HAL_UartGetStatus                        0x0000268d   Thumb Code    10  fsl_adapter_uart.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x0000268c   Section        0  fsl_adapter_uart.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x00002698   Section        0  fsl_adapter_uart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x00002784   Section        0  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    MDIO_Init                                0x000027ed   Thumb Code    10  fsl_phyksz8081.o(.text.MDIO_Init)
    [Anonymous Symbol]                       0x000027ec   Section        0  fsl_phyksz8081.o(.text.MDIO_Init)
    MDIO_Read                                0x000027f9   Thumb Code    14  fsl_phyksz8081.o(.text.MDIO_Read)
    [Anonymous Symbol]                       0x000027f8   Section        0  fsl_phyksz8081.o(.text.MDIO_Read)
    MDIO_Write                               0x00002809   Thumb Code    14  fsl_phyksz8081.o(.text.MDIO_Write)
    [Anonymous Symbol]                       0x00002808   Section        0  fsl_phyksz8081.o(.text.MDIO_Write)
    OSC_SetCapLoad                           0x00002819   Thumb Code    20  fsl_clock.o(.text.OSC_SetCapLoad)
    [Anonymous Symbol]                       0x00002818   Section        0  fsl_clock.o(.text.OSC_SetCapLoad)
    OSC_SetExtRefClkConfig                   0x0000282d   Thumb Code    22  fsl_clock.o(.text.OSC_SetExtRefClkConfig)
    [Anonymous Symbol]                       0x0000282c   Section        0  fsl_clock.o(.text.OSC_SetExtRefClkConfig)
    PHY_GetAutoNegotiationStatus             0x00002845   Thumb Code    10  enet_ethernetif.o(.text.PHY_GetAutoNegotiationStatus)
    [Anonymous Symbol]                       0x00002844   Section        0  enet_ethernetif.o(.text.PHY_GetAutoNegotiationStatus)
    PHY_GetLinkSpeedDuplex                   0x00002851   Thumb Code    10  enet_ethernetif.o(.text.PHY_GetLinkSpeedDuplex)
    [Anonymous Symbol]                       0x00002850   Section        0  enet_ethernetif.o(.text.PHY_GetLinkSpeedDuplex)
    PHY_GetLinkStatus                        0x0000285d   Thumb Code    10  enet_ethernetif.o(.text.PHY_GetLinkStatus)
    [Anonymous Symbol]                       0x0000285c   Section        0  enet_ethernetif.o(.text.PHY_GetLinkStatus)
    PHY_Init                                 0x00002869   Thumb Code    10  enet_ethernetif.o(.text.PHY_Init)
    [Anonymous Symbol]                       0x00002868   Section        0  enet_ethernetif.o(.text.PHY_Init)
    [Anonymous Symbol]                       0x00002874   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback)
    [Anonymous Symbol]                       0x00002984   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus)
    [Anonymous Symbol]                       0x000029c8   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex)
    [Anonymous Symbol]                       0x00002a4c   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus)
    [Anonymous Symbol]                       0x00002a8c   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_Init)
    [Anonymous Symbol]                       0x00002b70   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_Read)
    [Anonymous Symbol]                       0x00002b84   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex)
    [Anonymous Symbol]                       0x00002be4   Section        0  fsl_phyksz8081.o(.text.PHY_KSZ8081_Write)
    PORT_SetPinConfig                        0x00002bf9   Thumb Code    32  pin_mux.o(.text.PORT_SetPinConfig)
    [Anonymous Symbol]                       0x00002bf8   Section        0  pin_mux.o(.text.PORT_SetPinConfig)
    PORT_SetPinMux                           0x00002c59   Thumb Code    14  pin_mux.o(.text.PORT_SetPinMux)
    [Anonymous Symbol]                       0x00002c58   Section        0  pin_mux.o(.text.PORT_SetPinMux)
    [Anonymous Symbol]                       0x00002c70   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00002cd0   Number         0  port.o(.text.PendSV_Handler)
    PrintCheckFlags                          0x00002cd5   Thumb Code   104  fsl_str.o(.text.PrintCheckFlags)
    [Anonymous Symbol]                       0x00002cd4   Section        0  fsl_str.o(.text.PrintCheckFlags)
    PrintGetLengthFlag                       0x00002d3d   Thumb Code    70  fsl_str.o(.text.PrintGetLengthFlag)
    [Anonymous Symbol]                       0x00002d3c   Section        0  fsl_str.o(.text.PrintGetLengthFlag)
    PrintGetPrecision                        0x00002d85   Thumb Code   112  fsl_str.o(.text.PrintGetPrecision)
    [Anonymous Symbol]                       0x00002d84   Section        0  fsl_str.o(.text.PrintGetPrecision)
    PrintGetRadixFromobpu                    0x00002df5   Thumb Code    26  fsl_str.o(.text.PrintGetRadixFromobpu)
    [Anonymous Symbol]                       0x00002df4   Section        0  fsl_str.o(.text.PrintGetRadixFromobpu)
    PrintGetSignChar                         0x00002e11   Thumb Code    36  fsl_str.o(.text.PrintGetSignChar)
    [Anonymous Symbol]                       0x00002e10   Section        0  fsl_str.o(.text.PrintGetSignChar)
    PrintGetWidth                            0x00002e35   Thumb Code    76  fsl_str.o(.text.PrintGetWidth)
    [Anonymous Symbol]                       0x00002e34   Section        0  fsl_str.o(.text.PrintGetWidth)
    PrintIsdi                                0x00002e81   Thumb Code    16  fsl_str.o(.text.PrintIsdi)
    [Anonymous Symbol]                       0x00002e80   Section        0  fsl_str.o(.text.PrintIsdi)
    PrintIsfF                                0x00002e91   Thumb Code    14  fsl_str.o(.text.PrintIsfF)
    [Anonymous Symbol]                       0x00002e90   Section        0  fsl_str.o(.text.PrintIsfF)
    PrintIsobpu                              0x00002ea1   Thumb Code    36  fsl_str.o(.text.PrintIsobpu)
    [Anonymous Symbol]                       0x00002ea0   Section        0  fsl_str.o(.text.PrintIsobpu)
    PrintIsxX                                0x00002ec5   Thumb Code    14  fsl_str.o(.text.PrintIsxX)
    [Anonymous Symbol]                       0x00002ec4   Section        0  fsl_str.o(.text.PrintIsxX)
    PrintOutputdifFobpu                      0x00002ed5   Thumb Code   154  fsl_str.o(.text.PrintOutputdifFobpu)
    [Anonymous Symbol]                       0x00002ed4   Section        0  fsl_str.o(.text.PrintOutputdifFobpu)
    PrintOutputxX                            0x00002f71   Thumb Code   256  fsl_str.o(.text.PrintOutputxX)
    [Anonymous Symbol]                       0x00002f70   Section        0  fsl_str.o(.text.PrintOutputxX)
    [Anonymous Symbol]                       0x00003070   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00003090   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00003094   Section        0  fsl_component_serial_manager.o(.text.SerialManager_Init)
    [Anonymous Symbol]                       0x000030cc   Section        0  fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle)
    [Anonymous Symbol]                       0x0000310c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle)
    SerialManager_StartWriting               0x0000313d   Thumb Code    20  fsl_component_serial_manager.o(.text.SerialManager_StartWriting)
    [Anonymous Symbol]                       0x0000313c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_StartWriting)
    SerialManager_Write                      0x00003151   Thumb Code    34  fsl_component_serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x00003150   Section        0  fsl_component_serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x00003174   Section        0  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    [Anonymous Symbol]                       0x0000317c   Section        0  fsl_component_serial_port_uart.o(.text.Serial_UartInit)
    [Anonymous Symbol]                       0x0000319c   Section        0  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    [Anonymous Symbol]                       0x000031b8   Section        0  fsl_str.o(.text.StrFormatPrintf)
    [Anonymous Symbol]                       0x000034a0   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000034d0   Section        0  system_mk64f12.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00003504   Section        0  system_mk64f12.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x00003508   Section        0  fsl_uart.o(.text.UART0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003530   Section        0  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000353c   Section        0  fsl_uart.o(.text.UART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003564   Section        0  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003570   Section        0  fsl_uart.o(.text.UART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003598   Section        0  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x000035a4   Section        0  fsl_uart.o(.text.UART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x000035cc   Section        0  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x000035d8   Section        0  fsl_uart.o(.text.UART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003600   Section        0  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000360c   Section        0  fsl_uart.o(.text.UART5_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003634   Section        0  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00003640   Section        0  fsl_uart.o(.text.UART_GetDefaultConfig)
    [Anonymous Symbol]                       0x00003678   Section        0  fsl_uart.o(.text.UART_GetInstance)
    s_uartBases                              0x000036a0   Number         0  fsl_uart.o(.text.UART_GetInstance)
    [Anonymous Symbol]                       0x000036d4   Section        0  fsl_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x000038ac   Section        0  fsl_uart.o(.text.UART_WriteBlocking)
    __NVIC_EnableIRQ                         0x000038d1   Thumb Code    22  fsl_enet.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x000038d0   Section        0  fsl_enet.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x000038e9   Thumb Code    16  enet_ethernetif_kinetis.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000038e8   Section        0  enet_ethernetif_kinetis.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000038f8   Section        0  fsl_assert.o(.text.__aeabi_assert)
    accept_function                          0x00003935   Thumb Code   248  api_msg.o(.text.accept_function)
    [Anonymous Symbol]                       0x00003934   Section        0  api_msg.o(.text.accept_function)
    dhcp_bind                                0x00003a55   Thumb Code   240  dhcp.o(.text.dhcp_bind)
    [Anonymous Symbol]                       0x00003a54   Section        0  dhcp.o(.text.dhcp_bind)
    [Anonymous Symbol]                       0x00003b78   Section        0  dhcp.o(.text.dhcp_coarse_tmr)
    dhcp_create_msg                          0x00003be5   Thumb Code   288  dhcp.o(.text.dhcp_create_msg)
    [Anonymous Symbol]                       0x00003be4   Section        0  dhcp.o(.text.dhcp_create_msg)
    dhcp_dec_pcb_refcount                    0x00003d85   Thumb Code    52  dhcp.o(.text.dhcp_dec_pcb_refcount)
    [Anonymous Symbol]                       0x00003d84   Section        0  dhcp.o(.text.dhcp_dec_pcb_refcount)
    dhcp_discover                            0x00003ddd   Thumb Code   244  dhcp.o(.text.dhcp_discover)
    [Anonymous Symbol]                       0x00003ddc   Section        0  dhcp.o(.text.dhcp_discover)
    [Anonymous Symbol]                       0x00003ed0   Section        0  dhcp.o(.text.dhcp_fine_tmr)
    dhcp_handle_ack                          0x00003f0d   Thumb Code   118  dhcp.o(.text.dhcp_handle_ack)
    [Anonymous Symbol]                       0x00003f0c   Section        0  dhcp.o(.text.dhcp_handle_ack)
    dhcp_handle_nak                          0x00003f85   Thumb Code    38  dhcp.o(.text.dhcp_handle_nak)
    [Anonymous Symbol]                       0x00003f84   Section        0  dhcp.o(.text.dhcp_handle_nak)
    dhcp_handle_offer                        0x00003fad   Thumb Code    56  dhcp.o(.text.dhcp_handle_offer)
    [Anonymous Symbol]                       0x00003fac   Section        0  dhcp.o(.text.dhcp_handle_offer)
    dhcp_inc_pcb_refcount                    0x00003fe5   Thumb Code   108  dhcp.o(.text.dhcp_inc_pcb_refcount)
    [Anonymous Symbol]                       0x00003fe4   Section        0  dhcp.o(.text.dhcp_inc_pcb_refcount)
    dhcp_option                              0x00004079   Thumb Code    48  dhcp.o(.text.dhcp_option)
    [Anonymous Symbol]                       0x00004078   Section        0  dhcp.o(.text.dhcp_option)
    dhcp_option_byte                         0x000040a9   Thumb Code    28  dhcp.o(.text.dhcp_option_byte)
    [Anonymous Symbol]                       0x000040a8   Section        0  dhcp.o(.text.dhcp_option_byte)
    dhcp_option_long                         0x000040fd   Thumb Code    52  dhcp.o(.text.dhcp_option_long)
    [Anonymous Symbol]                       0x000040fc   Section        0  dhcp.o(.text.dhcp_option_long)
    dhcp_option_short                        0x0000416d   Thumb Code    36  dhcp.o(.text.dhcp_option_short)
    [Anonymous Symbol]                       0x0000416c   Section        0  dhcp.o(.text.dhcp_option_short)
    dhcp_option_trailer                      0x000041cd   Thumb Code    54  dhcp.o(.text.dhcp_option_trailer)
    [Anonymous Symbol]                       0x000041cc   Section        0  dhcp.o(.text.dhcp_option_trailer)
    dhcp_parse_reply                         0x00004205   Thumb Code   920  dhcp.o(.text.dhcp_parse_reply)
    [Anonymous Symbol]                       0x00004204   Section        0  dhcp.o(.text.dhcp_parse_reply)
    dhcp_rebind                              0x000045b1   Thumb Code   230  dhcp.o(.text.dhcp_rebind)
    [Anonymous Symbol]                       0x000045b0   Section        0  dhcp.o(.text.dhcp_rebind)
    dhcp_reboot                              0x00004699   Thumb Code   266  dhcp.o(.text.dhcp_reboot)
    [Anonymous Symbol]                       0x00004698   Section        0  dhcp.o(.text.dhcp_reboot)
    dhcp_recv                                0x000047a5   Thumb Code   246  dhcp.o(.text.dhcp_recv)
    [Anonymous Symbol]                       0x000047a4   Section        0  dhcp.o(.text.dhcp_recv)
    [Anonymous Symbol]                       0x0000489c   Section        0  dhcp.o(.text.dhcp_release_and_stop)
    [Anonymous Symbol]                       0x00004974   Section        0  dhcp.o(.text.dhcp_renew)
    dhcp_select                              0x00004a65   Thumb Code   364  dhcp.o(.text.dhcp_select)
    [Anonymous Symbol]                       0x00004a64   Section        0  dhcp.o(.text.dhcp_select)
    dhcp_set_state                           0x00004c09   Thumb Code    18  dhcp.o(.text.dhcp_set_state)
    [Anonymous Symbol]                       0x00004c08   Section        0  dhcp.o(.text.dhcp_set_state)
    [Anonymous Symbol]                       0x00004c1c   Section        0  dhcp.o(.text.dhcp_start)
    [Anonymous Symbol]                       0x00004cd0   Section        0  dhcp.o(.text.dhcp_supplied_address)
    dhcp_t1_timeout                          0x00004d01   Thumb Code    50  dhcp.o(.text.dhcp_t1_timeout)
    [Anonymous Symbol]                       0x00004d00   Section        0  dhcp.o(.text.dhcp_t1_timeout)
    dhcp_t2_timeout                          0x00004d35   Thumb Code    50  dhcp.o(.text.dhcp_t2_timeout)
    [Anonymous Symbol]                       0x00004d34   Section        0  dhcp.o(.text.dhcp_t2_timeout)
    dhcp_timeout                             0x00004d69   Thumb Code    90  dhcp.o(.text.dhcp_timeout)
    [Anonymous Symbol]                       0x00004d68   Section        0  dhcp.o(.text.dhcp_timeout)
    do_memp_free_pool                        0x00004dc5   Thumb Code    36  memp.o(.text.do_memp_free_pool)
    [Anonymous Symbol]                       0x00004dc4   Section        0  memp.o(.text.do_memp_free_pool)
    do_memp_malloc_pool                      0x00004e09   Thumb Code    52  memp.o(.text.do_memp_malloc_pool)
    [Anonymous Symbol]                       0x00004e08   Section        0  memp.o(.text.do_memp_malloc_pool)
    enet_send_frame                          0x00004e61   Thumb Code    92  enet_ethernetif_kinetis.o(.text.enet_send_frame)
    [Anonymous Symbol]                       0x00004e60   Section        0  enet_ethernetif_kinetis.o(.text.enet_send_frame)
    err_tcp                                  0x00004ebd   Thumb Code   224  api_msg.o(.text.err_tcp)
    [Anonymous Symbol]                       0x00004ebc   Section        0  api_msg.o(.text.err_tcp)
    etharp_find_entry                        0x00004fd5   Thumb Code   356  etharp.o(.text.etharp_find_entry)
    [Anonymous Symbol]                       0x00004fd4   Section        0  etharp.o(.text.etharp_find_entry)
    etharp_free_entry                        0x0000517d   Thumb Code    60  etharp.o(.text.etharp_free_entry)
    [Anonymous Symbol]                       0x0000517c   Section        0  etharp.o(.text.etharp_free_entry)
    [Anonymous Symbol]                       0x000051b8   Section        0  etharp.o(.text.etharp_input)
    [Anonymous Symbol]                       0x0000528c   Section        0  etharp.o(.text.etharp_output)
    etharp_output_to_arp_index               0x000053c9   Thumb Code   124  etharp.o(.text.etharp_output_to_arp_index)
    [Anonymous Symbol]                       0x000053c8   Section        0  etharp.o(.text.etharp_output_to_arp_index)
    [Anonymous Symbol]                       0x00005474   Section        0  etharp.o(.text.etharp_query)
    etharp_raw                               0x0000566d   Thumb Code   208  etharp.o(.text.etharp_raw)
    [Anonymous Symbol]                       0x0000566c   Section        0  etharp.o(.text.etharp_raw)
    [Anonymous Symbol]                       0x00005770   Section        0  etharp.o(.text.etharp_request)
    etharp_request_dst                       0x00005781   Thumb Code    44  etharp.o(.text.etharp_request_dst)
    [Anonymous Symbol]                       0x00005780   Section        0  etharp.o(.text.etharp_request_dst)
    [Anonymous Symbol]                       0x000057ac   Section        0  etharp.o(.text.etharp_tmr)
    etharp_update_arp_entry                  0x0000581d   Thumb Code   152  etharp.o(.text.etharp_update_arp_entry)
    [Anonymous Symbol]                       0x0000581c   Section        0  etharp.o(.text.etharp_update_arp_entry)
    ethernet_callback                        0x000058d9   Thumb Code   100  enet_ethernetif_kinetis.o(.text.ethernet_callback)
    [Anonymous Symbol]                       0x000058d8   Section        0  enet_ethernetif_kinetis.o(.text.ethernet_callback)
    [Anonymous Symbol]                       0x0000593c   Section        0  ethernet.o(.text.ethernet_input)
    [Anonymous Symbol]                       0x000059e0   Section        0  ethernet.o(.text.ethernet_output)
    [Anonymous Symbol]                       0x00005a74   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif0_init)
    [Anonymous Symbol]                       0x00005abc   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_enet_init)
    [Anonymous Symbol]                       0x00005c00   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_enet_ptr)
    [Anonymous Symbol]                       0x00005c04   Section        0  enet_ethernetif.o(.text.ethernetif_get_enet_base)
    [Anonymous Symbol]                       0x00005c14   Section        0  enet_ethernetif.o(.text.ethernetif_init)
    [Anonymous Symbol]                       0x00005cec   Section        0  enet_ethernetif.o(.text.ethernetif_input)
    [Anonymous Symbol]                       0x00005d30   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_linkinput)
    [Anonymous Symbol]                       0x00005d94   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput)
    [Anonymous Symbol]                       0x00005e14   Section        0  enet_ethernetif.o(.text.ethernetif_phy_init)
    ethernetif_rx_alloc                      0x00005f2d   Thumb Code    50  enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc)
    [Anonymous Symbol]                       0x00005f2c   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_rx_alloc)
    ethernetif_rx_frame_to_pbufs             0x00005f61   Thumb Code   136  enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs)
    [Anonymous Symbol]                       0x00005f60   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_rx_frame_to_pbufs)
    ethernetif_rx_free                       0x00006029   Thumb Code    76  enet_ethernetif_kinetis.o(.text.ethernetif_rx_free)
    [Anonymous Symbol]                       0x00006028   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_rx_free)
    ethernetif_rx_release                    0x000060c1   Thumb Code    18  enet_ethernetif_kinetis.o(.text.ethernetif_rx_release)
    [Anonymous Symbol]                       0x000060c0   Section        0  enet_ethernetif_kinetis.o(.text.ethernetif_rx_release)
    [Anonymous Symbol]                       0x000060d4   Section        0  icmp.o(.text.icmp_dest_unreach)
    [Anonymous Symbol]                       0x000060e0   Section        0  icmp.o(.text.icmp_input)
    icmp_send_response                       0x00006291   Thumb Code   152  icmp.o(.text.icmp_send_response)
    [Anonymous Symbol]                       0x00006290   Section        0  icmp.o(.text.icmp_send_response)
    [Anonymous Symbol]                       0x00006354   Section        0  icmp.o(.text.icmp_time_exceeded)
    [Anonymous Symbol]                       0x00006360   Section        0  inet_chksum.o(.text.inet_chksum)
    [Anonymous Symbol]                       0x00006370   Section        0  inet_chksum.o(.text.inet_chksum_pbuf)
    [Anonymous Symbol]                       0x000063c4   Section        0  inet_chksum.o(.text.inet_chksum_pseudo)
    inet_cksum_pseudo_base                   0x000063f5   Thumb Code   116  inet_chksum.o(.text.inet_cksum_pseudo_base)
    [Anonymous Symbol]                       0x000063f4   Section        0  inet_chksum.o(.text.inet_cksum_pseudo_base)
    [Anonymous Symbol]                       0x00006468   Section        0  ip4_addr.o(.text.ip4_addr_isbroadcast_u32)
    [Anonymous Symbol]                       0x0000649c   Section        0  ip4_frag.o(.text.ip4_frag)
    [Anonymous Symbol]                       0x000066d8   Section        0  ip4.o(.text.ip4_input)
    ip4_input_accept                         0x000068a1   Thumb Code    44  ip4.o(.text.ip4_input_accept)
    [Anonymous Symbol]                       0x000068a0   Section        0  ip4.o(.text.ip4_input_accept)
    [Anonymous Symbol]                       0x000068cc   Section        0  ip4.o(.text.ip4_output_if)
    [Anonymous Symbol]                       0x000068fc   Section        0  ip4.o(.text.ip4_output_if_src)
    [Anonymous Symbol]                       0x00006a34   Section        0  ip4_frag.o(.text.ip4_reass)
    [Anonymous Symbol]                       0x00006c64   Section        0  ip4.o(.text.ip4_route)
    [Anonymous Symbol]                       0x00006ccc   Section        0  inet_chksum.o(.text.ip_chksum_pseudo)
    ip_frag_alloc_pbuf_custom_ref            0x00006ce1   Thumb Code    10  ip4_frag.o(.text.ip_frag_alloc_pbuf_custom_ref)
    [Anonymous Symbol]                       0x00006ce0   Section        0  ip4_frag.o(.text.ip_frag_alloc_pbuf_custom_ref)
    ip_frag_free_pbuf_custom_ref             0x00006ced   Thumb Code    24  ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref)
    [Anonymous Symbol]                       0x00006cec   Section        0  ip4_frag.o(.text.ip_frag_free_pbuf_custom_ref)
    ip_reass_chain_frag_into_datagram_and_validate 0x00006d11   Thumb Code   448  ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate)
    [Anonymous Symbol]                       0x00006d10   Section        0  ip4_frag.o(.text.ip_reass_chain_frag_into_datagram_and_validate)
    ip_reass_dequeue_datagram                0x00006f5d   Thumb Code    48  ip4_frag.o(.text.ip_reass_dequeue_datagram)
    [Anonymous Symbol]                       0x00006f5c   Section        0  ip4_frag.o(.text.ip_reass_dequeue_datagram)
    ip_reass_enqueue_new_datagram            0x00006fa9   Thumb Code    92  ip4_frag.o(.text.ip_reass_enqueue_new_datagram)
    [Anonymous Symbol]                       0x00006fa8   Section        0  ip4_frag.o(.text.ip_reass_enqueue_new_datagram)
    ip_reass_free_complete_datagram          0x00007005   Thumb Code   196  ip4_frag.o(.text.ip_reass_free_complete_datagram)
    [Anonymous Symbol]                       0x00007004   Section        0  ip4_frag.o(.text.ip_reass_free_complete_datagram)
    ip_reass_remove_oldest_datagram          0x0000712d   Thumb Code   142  ip4_frag.o(.text.ip_reass_remove_oldest_datagram)
    [Anonymous Symbol]                       0x0000712c   Section        0  ip4_frag.o(.text.ip_reass_remove_oldest_datagram)
    [Anonymous Symbol]                       0x000071bc   Section        0  ip4_frag.o(.text.ip_reass_tmr)
    ipfrag_free_pbuf_custom                  0x000071f5   Thumb Code    32  ip4_frag.o(.text.ipfrag_free_pbuf_custom)
    [Anonymous Symbol]                       0x000071f4   Section        0  ip4_frag.o(.text.ipfrag_free_pbuf_custom)
    lwip_cyclic_timer                        0x00007221   Thumb Code    50  timeouts.o(.text.lwip_cyclic_timer)
    [Anonymous Symbol]                       0x00007220   Section        0  timeouts.o(.text.lwip_cyclic_timer)
    [Anonymous Symbol]                       0x00007254   Section        0  def.o(.text.lwip_htonl)
    [Anonymous Symbol]                       0x00007258   Section        0  def.o(.text.lwip_htons)
    [Anonymous Symbol]                       0x0000725c   Section        0  init.o(.text.lwip_init)
    [Anonymous Symbol]                       0x0000727c   Section        0  api_msg.o(.text.lwip_netconn_do_accepted)
    [Anonymous Symbol]                       0x0000729c   Section        0  api_msg.o(.text.lwip_netconn_do_bind)
    [Anonymous Symbol]                       0x000072d4   Section        0  api_msg.o(.text.lwip_netconn_do_close)
    lwip_netconn_do_close_internal           0x00007379   Thumb Code   476  api_msg.o(.text.lwip_netconn_do_close_internal)
    [Anonymous Symbol]                       0x00007378   Section        0  api_msg.o(.text.lwip_netconn_do_close_internal)
    [Anonymous Symbol]                       0x000075e0   Section        0  api_msg.o(.text.lwip_netconn_do_delconn)
    [Anonymous Symbol]                       0x000076d8   Section        0  api_msg.o(.text.lwip_netconn_do_listen)
    [Anonymous Symbol]                       0x000077e4   Section        0  api_msg.o(.text.lwip_netconn_do_newconn)
    [Anonymous Symbol]                       0x000077f8   Section        0  api_msg.o(.text.lwip_netconn_do_recv)
    [Anonymous Symbol]                       0x00007834   Section        0  api_msg.o(.text.lwip_netconn_do_write)
    lwip_netconn_do_writemore                0x000078e9   Thumb Code   628  api_msg.o(.text.lwip_netconn_do_writemore)
    [Anonymous Symbol]                       0x000078e8   Section        0  api_msg.o(.text.lwip_netconn_do_writemore)
    lwip_netconn_err_to_msg                  0x00007bd5   Thumb Code    32  api_msg.o(.text.lwip_netconn_err_to_msg)
    [Anonymous Symbol]                       0x00007bd4   Section        0  api_msg.o(.text.lwip_netconn_err_to_msg)
    [Anonymous Symbol]                       0x00007c10   Section        0  api_msg.o(.text.lwip_netconn_is_err_msg)
    [Anonymous Symbol]                       0x00007c64   Section        0  inet_chksum.o(.text.lwip_standard_chksum)
    [Anonymous Symbol]                       0x00007cc4   Section        0  lwip_tcpecho_freertos.o(.text.main)
    [Anonymous Symbol]                       0x00007d3c   Section        0  mem.o(.text.mem_free)
    [Anonymous Symbol]                       0x00007e64   Section        0  mem.o(.text.mem_init)
    mem_link_valid                           0x00007ee9   Thumb Code    94  mem.o(.text.mem_link_valid)
    [Anonymous Symbol]                       0x00007ee8   Section        0  mem.o(.text.mem_link_valid)
    [Anonymous Symbol]                       0x00007f48   Section        0  mem.o(.text.mem_malloc)
    mem_to_ptr                               0x00008111   Thumb Code    16  mem.o(.text.mem_to_ptr)
    [Anonymous Symbol]                       0x00008110   Section        0  mem.o(.text.mem_to_ptr)
    [Anonymous Symbol]                       0x00008120   Section        0  mem.o(.text.mem_trim)
    [Anonymous Symbol]                       0x000082d0   Section        0  memp.o(.text.memp_free)
    [Anonymous Symbol]                       0x00008320   Section        0  memp.o(.text.memp_init)
    [Anonymous Symbol]                       0x00008340   Section        0  memp.o(.text.memp_init_pool)
    [Anonymous Symbol]                       0x00008378   Section        0  memp.o(.text.memp_malloc)
    [Anonymous Symbol]                       0x000083c8   Section        0  netbuf.o(.text.netbuf_data)
    [Anonymous Symbol]                       0x00008464   Section        0  netbuf.o(.text.netbuf_delete)
    [Anonymous Symbol]                       0x0000848c   Section        0  netbuf.o(.text.netbuf_next)
    [Anonymous Symbol]                       0x000084d8   Section        0  api_lib.o(.text.netconn_accept)
    [Anonymous Symbol]                       0x000085dc   Section        0  api_msg.o(.text.netconn_alloc)
    netconn_apimsg                           0x00008681   Thumb Code    28  api_lib.o(.text.netconn_apimsg)
    [Anonymous Symbol]                       0x00008680   Section        0  api_lib.o(.text.netconn_apimsg)
    [Anonymous Symbol]                       0x0000869c   Section        0  api_lib.o(.text.netconn_bind)
    [Anonymous Symbol]                       0x00008700   Section        0  api_lib.o(.text.netconn_close)
    netconn_close_shutdown                   0x0000870d   Thumb Code    60  api_lib.o(.text.netconn_close_shutdown)
    [Anonymous Symbol]                       0x0000870c   Section        0  api_lib.o(.text.netconn_close_shutdown)
    [Anonymous Symbol]                       0x00008764   Section        0  api_lib.o(.text.netconn_delete)
    netconn_drain                            0x00008785   Thumb Code   194  api_msg.o(.text.netconn_drain)
    [Anonymous Symbol]                       0x00008784   Section        0  api_msg.o(.text.netconn_drain)
    [Anonymous Symbol]                       0x00008848   Section        0  api_lib.o(.text.netconn_err)
    [Anonymous Symbol]                       0x00008864   Section        0  api_msg.o(.text.netconn_free)
    [Anonymous Symbol]                       0x00008910   Section        0  api_lib.o(.text.netconn_listen_with_backlog)
    [Anonymous Symbol]                       0x00008968   Section        0  api_lib.o(.text.netconn_new_with_proto_and_callback)
    [Anonymous Symbol]                       0x00008a58   Section        0  api_lib.o(.text.netconn_prepare_delete)
    [Anonymous Symbol]                       0x00008a80   Section        0  api_lib.o(.text.netconn_recv)
    netconn_recv_data                        0x00008b39   Thumb Code   264  api_lib.o(.text.netconn_recv_data)
    [Anonymous Symbol]                       0x00008b38   Section        0  api_lib.o(.text.netconn_recv_data)
    netconn_recv_data_tcp                    0x00008c4d   Thumb Code   140  api_lib.o(.text.netconn_recv_data_tcp)
    [Anonymous Symbol]                       0x00008c4c   Section        0  api_lib.o(.text.netconn_recv_data_tcp)
    netconn_tcp_recvd_msg                    0x00008cd9   Thumb Code    66  api_lib.o(.text.netconn_tcp_recvd_msg)
    [Anonymous Symbol]                       0x00008cd8   Section        0  api_lib.o(.text.netconn_tcp_recvd_msg)
    [Anonymous Symbol]                       0x00008d1c   Section        0  api_lib.o(.text.netconn_write_partly)
    [Anonymous Symbol]                       0x00008d38   Section        0  api_lib.o(.text.netconn_write_vectors_partly)
    [Anonymous Symbol]                       0x00008e88   Section        0  netif.o(.text.netif_add)
    netif_do_ip_addr_changed                 0x00009051   Thumb Code    20  netif.o(.text.netif_do_ip_addr_changed)
    [Anonymous Symbol]                       0x00009050   Section        0  netif.o(.text.netif_do_ip_addr_changed)
    netif_do_set_gw                          0x00009065   Thumb Code    20  netif.o(.text.netif_do_set_gw)
    [Anonymous Symbol]                       0x00009064   Section        0  netif.o(.text.netif_do_set_gw)
    netif_do_set_ipaddr                      0x00009079   Thumb Code    86  netif.o(.text.netif_do_set_ipaddr)
    [Anonymous Symbol]                       0x00009078   Section        0  netif.o(.text.netif_do_set_ipaddr)
    netif_do_set_netmask                     0x000090d1   Thumb Code    20  netif.o(.text.netif_do_set_netmask)
    [Anonymous Symbol]                       0x000090d0   Section        0  netif.o(.text.netif_do_set_netmask)
    [Anonymous Symbol]                       0x000090e4   Section        0  netif.o(.text.netif_get_by_index)
    [Anonymous Symbol]                       0x00009120   Section        0  netif.o(.text.netif_init)
    netif_issue_reports                      0x00009125   Thumb Code    56  netif.o(.text.netif_issue_reports)
    [Anonymous Symbol]                       0x00009124   Section        0  netif.o(.text.netif_issue_reports)
    netif_null_output_ip4                    0x00009181   Thumb Code     6  netif.o(.text.netif_null_output_ip4)
    [Anonymous Symbol]                       0x00009180   Section        0  netif.o(.text.netif_null_output_ip4)
    [Anonymous Symbol]                       0x00009188   Section        0  netif.o(.text.netif_set_addr)
    [Anonymous Symbol]                       0x000091f4   Section        0  netif.o(.text.netif_set_default)
    [Anonymous Symbol]                       0x00009208   Section        0  netif.o(.text.netif_set_up)
    netifapi_do_netif_add                    0x00009261   Thumb Code    48  netifapi.o(.text.netifapi_do_netif_add)
    [Anonymous Symbol]                       0x00009260   Section        0  netifapi.o(.text.netifapi_do_netif_add)
    netifapi_do_netif_common                 0x00009291   Thumb Code    24  netifapi.o(.text.netifapi_do_netif_common)
    [Anonymous Symbol]                       0x00009290   Section        0  netifapi.o(.text.netifapi_do_netif_common)
    [Anonymous Symbol]                       0x000092a8   Section        0  netifapi.o(.text.netifapi_netif_add)
    [Anonymous Symbol]                       0x000092ec   Section        0  netifapi.o(.text.netifapi_netif_common)
    [Anonymous Symbol]                       0x00009308   Section        0  pbuf.o(.text.pbuf_add_header)
    pbuf_add_header_impl                     0x00009315   Thumb Code   110  pbuf.o(.text.pbuf_add_header_impl)
    [Anonymous Symbol]                       0x00009314   Section        0  pbuf.o(.text.pbuf_add_header_impl)
    [Anonymous Symbol]                       0x00009384   Section        0  pbuf.o(.text.pbuf_alloc)
    [Anonymous Symbol]                       0x00009550   Section        0  pbuf.o(.text.pbuf_alloc_reference)
    [Anonymous Symbol]                       0x000095a4   Section        0  pbuf.o(.text.pbuf_alloced_custom)
    [Anonymous Symbol]                       0x000095e0   Section        0  pbuf.o(.text.pbuf_cat)
    [Anonymous Symbol]                       0x000096b4   Section        0  pbuf.o(.text.pbuf_chain)
    [Anonymous Symbol]                       0x000096c4   Section        0  pbuf.o(.text.pbuf_clen)
    [Anonymous Symbol]                       0x000096d4   Section        0  pbuf.o(.text.pbuf_clone)
    [Anonymous Symbol]                       0x00009710   Section        0  pbuf.o(.text.pbuf_copy)
    [Anonymous Symbol]                       0x00009754   Section        0  pbuf.o(.text.pbuf_copy_partial)
    [Anonymous Symbol]                       0x00009834   Section        0  pbuf.o(.text.pbuf_copy_partial_pbuf)
    [Anonymous Symbol]                       0x0000999c   Section        0  pbuf.o(.text.pbuf_free)
    [Anonymous Symbol]                       0x00009a94   Section        0  pbuf.o(.text.pbuf_header_force)
    pbuf_header_impl                         0x00009aa1   Thumb Code    22  pbuf.o(.text.pbuf_header_impl)
    [Anonymous Symbol]                       0x00009aa0   Section        0  pbuf.o(.text.pbuf_header_impl)
    pbuf_init_alloced_pbuf                   0x00009ab9   Thumb Code    30  pbuf.o(.text.pbuf_init_alloced_pbuf)
    [Anonymous Symbol]                       0x00009ab8   Section        0  pbuf.o(.text.pbuf_init_alloced_pbuf)
    [Anonymous Symbol]                       0x00009ad8   Section        0  pbuf.o(.text.pbuf_realloc)
    [Anonymous Symbol]                       0x00009bdc   Section        0  pbuf.o(.text.pbuf_ref)
    [Anonymous Symbol]                       0x00009c14   Section        0  pbuf.o(.text.pbuf_remove_header)
    pcb_new                                  0x00009c91   Thumb Code   120  api_msg.o(.text.pcb_new)
    [Anonymous Symbol]                       0x00009c90   Section        0  api_msg.o(.text.pcb_new)
    plug_holes                               0x00009d29   Thumb Code   196  mem.o(.text.plug_holes)
    [Anonymous Symbol]                       0x00009d28   Section        0  mem.o(.text.plug_holes)
    poll_tcp                                 0x00009e69   Thumb Code   116  api_msg.o(.text.poll_tcp)
    [Anonymous Symbol]                       0x00009e68   Section        0  api_msg.o(.text.poll_tcp)
    prvAddCurrentTaskToDelayedList           0x00009edd   Thumb Code   162  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00009edc   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00009f81   Thumb Code   174  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00009f80   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x0000a031   Thumb Code   100  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x0000a030   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0000a09d   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0000a09c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x0000a0ed   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x0000a0ec   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0000a115   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0000a114   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x0000a191   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x0000a190   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x0000a1a5   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x0000a1a4   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x0000a1b9   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0000a1b8   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x0000a1d9   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000a1d8   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x0000a205   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x0000a204   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0000a225   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0000a224   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x0000a245   Thumb Code   174  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x0000a244   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x0000a2f5   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x0000a2f4   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x0000a365   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x0000a364   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x0000a3a5   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x0000a3a4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x0000a3bd   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x0000a3bc   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x0000a3d9   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x0000a3d8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x0000a401   Thumb Code   110  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x0000a400   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x0000a471   Thumb Code   290  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x0000a470   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x0000a595   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x0000a594   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x0000a615   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0000a614   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x0000a63d   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x0000a63c   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x0000a669   Thumb Code   142  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x0000a668   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x0000a6f9   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0000a6f8   Section        0  port.o(.text.prvTaskExitError)
    prvTestWaitCondition                     0x0000a72d   Thumb Code    24  event_groups.o(.text.prvTestWaitCondition)
    [Anonymous Symbol]                       0x0000a72c   Section        0  event_groups.o(.text.prvTestWaitCondition)
    prvTimerTask                             0x0000a745   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x0000a744   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x0000a75d   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0000a75c   Section        0  queue.o(.text.prvUnlockQueue)
    ptr_to_mem                               0x0000a7d1   Thumb Code    14  mem.o(.text.ptr_to_mem)
    [Anonymous Symbol]                       0x0000a7d0   Section        0  mem.o(.text.ptr_to_mem)
    [Anonymous Symbol]                       0x0000a7e0   Section        0  heap_3.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x0000a7f8   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x0000a810   Section        0  port.o(.text.pxPortInitialiseStack)
    recv_tcp                                 0x0000a839   Thumb Code   148  api_msg.o(.text.recv_tcp)
    [Anonymous Symbol]                       0x0000a838   Section        0  api_msg.o(.text.recv_tcp)
    recv_udp                                 0x0000a949   Thumb Code   144  api_msg.o(.text.recv_udp)
    [Anonymous Symbol]                       0x0000a948   Section        0  api_msg.o(.text.recv_udp)
    sent_tcp                                 0x0000aa3d   Thumb Code   104  api_msg.o(.text.sent_tcp)
    [Anonymous Symbol]                       0x0000aa3c   Section        0  api_msg.o(.text.sent_tcp)
    setup_tcp                                0x0000aaa5   Thumb Code    72  api_msg.o(.text.setup_tcp)
    [Anonymous Symbol]                       0x0000aaa4   Section        0  api_msg.o(.text.setup_tcp)
    stack_init                               0x0000aaed   Thumb Code   272  lwip_tcpecho_freertos.o(.text.stack_init)
    [Anonymous Symbol]                       0x0000aaec   Section        0  lwip_tcpecho_freertos.o(.text.stack_init)
    [Anonymous Symbol]                       0x0000ac7c   Section        0  sys_arch.o(.text.sys_arch_mbox_fetch)
    [Anonymous Symbol]                       0x0000acdc   Section        0  sys_arch.o(.text.sys_arch_mbox_tryfetch)
    [Anonymous Symbol]                       0x0000acfc   Section        0  sys_arch.o(.text.sys_arch_protect)
    [Anonymous Symbol]                       0x0000ad24   Section        0  sys_arch.o(.text.sys_arch_sem_wait)
    [Anonymous Symbol]                       0x0000ad68   Section        0  sys_arch.o(.text.sys_arch_unprotect)
    [Anonymous Symbol]                       0x0000ad7c   Section        0  sys_arch.o(.text.sys_assert)
    [Anonymous Symbol]                       0x0000ad94   Section        0  sys_arch.o(.text.sys_check_core_locking)
    [Anonymous Symbol]                       0x0000ae24   Section        0  timeouts.o(.text.sys_check_timeouts)
    [Anonymous Symbol]                       0x0000ae78   Section        0  sys_arch.o(.text.sys_init)
    [Anonymous Symbol]                       0x0000ae7c   Section        0  sys_arch.o(.text.sys_lock_tcpip_core)
    [Anonymous Symbol]                       0x0000aeac   Section        0  sys_arch.o(.text.sys_mark_tcpip_thread)
    [Anonymous Symbol]                       0x0000aec0   Section        0  sys_arch.o(.text.sys_mbox_free)
    [Anonymous Symbol]                       0x0000aee8   Section        0  sys_arch.o(.text.sys_mbox_new)
    [Anonymous Symbol]                       0x0000af08   Section        0  sys_arch.o(.text.sys_mbox_trypost)
    [Anonymous Symbol]                       0x0000af68   Section        0  sys_arch.o(.text.sys_mutex_lock)
    [Anonymous Symbol]                       0x0000af7c   Section        0  sys_arch.o(.text.sys_mutex_new)
    [Anonymous Symbol]                       0x0000af98   Section        0  sys_arch.o(.text.sys_mutex_unlock)
    [Anonymous Symbol]                       0x0000afa8   Section        0  sys_arch.o(.text.sys_now)
    [Anonymous Symbol]                       0x0000afb0   Section        0  sys_arch.o(.text.sys_sem_free)
    [Anonymous Symbol]                       0x0000afbc   Section        0  sys_arch.o(.text.sys_sem_new)
    [Anonymous Symbol]                       0x0000aff4   Section        0  sys_arch.o(.text.sys_sem_signal)
    [Anonymous Symbol]                       0x0000b004   Section        0  sys_arch.o(.text.sys_thread_new)
    [Anonymous Symbol]                       0x0000b068   Section        0  timeouts.o(.text.sys_timeout)
    sys_timeout_abs                          0x0000b0c9   Thumb Code    80  timeouts.o(.text.sys_timeout_abs)
    [Anonymous Symbol]                       0x0000b0c8   Section        0  timeouts.o(.text.sys_timeout_abs)
    [Anonymous Symbol]                       0x0000b158   Section        0  timeouts.o(.text.sys_timeouts_init)
    [Anonymous Symbol]                       0x0000b180   Section        0  timeouts.o(.text.sys_timeouts_sleeptime)
    [Anonymous Symbol]                       0x0000b1a8   Section        0  sys_arch.o(.text.sys_unlock_tcpip_core)
    [Anonymous Symbol]                       0x0000b1d8   Section        0  tcp.o(.text.tcp_abandon)
    [Anonymous Symbol]                       0x0000b320   Section        0  tcp.o(.text.tcp_abort)
    [Anonymous Symbol]                       0x0000b32c   Section        0  tcp.o(.text.tcp_accept)
    tcp_accept_null                          0x0000b349   Thumb Code    24  tcp.o(.text.tcp_accept_null)
    [Anonymous Symbol]                       0x0000b348   Section        0  tcp.o(.text.tcp_accept_null)
    [Anonymous Symbol]                       0x0000b380   Section        0  tcp.o(.text.tcp_alloc)
    [Anonymous Symbol]                       0x0000b444   Section        0  tcp.o(.text.tcp_arg)
    [Anonymous Symbol]                       0x0000b458   Section        0  tcp.o(.text.tcp_backlog_accepted)
    [Anonymous Symbol]                       0x0000b4a0   Section        0  tcp.o(.text.tcp_backlog_delayed)
    [Anonymous Symbol]                       0x0000b4e8   Section        0  tcp.o(.text.tcp_bind)
    [Anonymous Symbol]                       0x0000b5e4   Section        0  tcp.o(.text.tcp_close)
    tcp_close_shutdown                       0x0000b639   Thumb Code   292  tcp.o(.text.tcp_close_shutdown)
    [Anonymous Symbol]                       0x0000b638   Section        0  tcp.o(.text.tcp_close_shutdown)
    tcp_close_shutdown_fin                   0x0000b799   Thumb Code   114  tcp.o(.text.tcp_close_shutdown_fin)
    [Anonymous Symbol]                       0x0000b798   Section        0  tcp.o(.text.tcp_close_shutdown_fin)
    tcp_create_segment                       0x0000b80d   Thumb Code   188  tcp_out.o(.text.tcp_create_segment)
    [Anonymous Symbol]                       0x0000b80c   Section        0  tcp_out.o(.text.tcp_create_segment)
    [Anonymous Symbol]                       0x0000b924   Section        0  tcp.o(.text.tcp_eff_send_mss_netif)
    [Anonymous Symbol]                       0x0000b980   Section        0  tcp_out.o(.text.tcp_enqueue_flags)
    [Anonymous Symbol]                       0x0000bb04   Section        0  tcp.o(.text.tcp_err)
    [Anonymous Symbol]                       0x0000bb50   Section        0  tcp.o(.text.tcp_fasttmr)
    [Anonymous Symbol]                       0x0000bbe4   Section        0  tcp.o(.text.tcp_free)
    tcp_free_acked_segments                  0x0000bc15   Thumb Code   176  tcp_in.o(.text.tcp_free_acked_segments)
    [Anonymous Symbol]                       0x0000bc14   Section        0  tcp_in.o(.text.tcp_free_acked_segments)
    tcp_free_listen                          0x0000bd0d   Thumb Code    28  tcp.o(.text.tcp_free_listen)
    [Anonymous Symbol]                       0x0000bd0c   Section        0  tcp.o(.text.tcp_free_listen)
    tcp_get_next_optbyte                     0x0000bd45   Thumb Code    68  tcp_in.o(.text.tcp_get_next_optbyte)
    [Anonymous Symbol]                       0x0000bd44   Section        0  tcp_in.o(.text.tcp_get_next_optbyte)
    tcp_handle_closepend                     0x0000bd89   Thumb Code    46  tcp.o(.text.tcp_handle_closepend)
    [Anonymous Symbol]                       0x0000bd88   Section        0  tcp.o(.text.tcp_handle_closepend)
    [Anonymous Symbol]                       0x0000bdb8   Section        0  tcp.o(.text.tcp_init)
    [Anonymous Symbol]                       0x0000bdbc   Section        0  tcp_in.o(.text.tcp_input)
    tcp_input_delayed_close                  0x0000c399   Thumb Code    76  tcp_in.o(.text.tcp_input_delayed_close)
    [Anonymous Symbol]                       0x0000c398   Section        0  tcp_in.o(.text.tcp_input_delayed_close)
    [Anonymous Symbol]                       0x0000c40c   Section        0  tcp_out.o(.text.tcp_keepalive)
    tcp_kill_prio                            0x0000c465   Thumb Code    96  tcp.o(.text.tcp_kill_prio)
    [Anonymous Symbol]                       0x0000c464   Section        0  tcp.o(.text.tcp_kill_prio)
    tcp_kill_state                           0x0000c4c5   Thumb Code    78  tcp.o(.text.tcp_kill_state)
    [Anonymous Symbol]                       0x0000c4c4   Section        0  tcp.o(.text.tcp_kill_state)
    tcp_kill_timewait                        0x0000c515   Thumb Code    68  tcp.o(.text.tcp_kill_timewait)
    [Anonymous Symbol]                       0x0000c514   Section        0  tcp.o(.text.tcp_kill_timewait)
    tcp_listen_closed                        0x0000c559   Thumb Code    60  tcp.o(.text.tcp_listen_closed)
    [Anonymous Symbol]                       0x0000c558   Section        0  tcp.o(.text.tcp_listen_closed)
    tcp_listen_input                         0x0000c5ad   Thumb Code   384  tcp_in.o(.text.tcp_listen_input)
    [Anonymous Symbol]                       0x0000c5ac   Section        0  tcp_in.o(.text.tcp_listen_input)
    [Anonymous Symbol]                       0x0000c74c   Section        0  tcp.o(.text.tcp_listen_with_backlog_and_err)
    [Anonymous Symbol]                       0x0000c898   Section        0  tcp.o(.text.tcp_netif_ip_addr_changed)
    tcp_netif_ip_addr_changed_pcblist        0x0000c8f1   Thumb Code    44  tcp.o(.text.tcp_netif_ip_addr_changed_pcblist)
    [Anonymous Symbol]                       0x0000c8f0   Section        0  tcp.o(.text.tcp_netif_ip_addr_changed_pcblist)
    [Anonymous Symbol]                       0x0000c950   Section        0  tcp.o(.text.tcp_new_ip_type)
    tcp_new_port                             0x0000c95d   Thumb Code   108  tcp.o(.text.tcp_new_port)
    [Anonymous Symbol]                       0x0000c95c   Section        0  tcp.o(.text.tcp_new_port)
    [Anonymous Symbol]                       0x0000c9c8   Section        0  tcp.o(.text.tcp_next_iss)
    [Anonymous Symbol]                       0x0000ca08   Section        0  tcp_out.o(.text.tcp_output)
    tcp_output_alloc_header                  0x0000cccd   Thumb Code    56  tcp_out.o(.text.tcp_output_alloc_header)
    [Anonymous Symbol]                       0x0000cccc   Section        0  tcp_out.o(.text.tcp_output_alloc_header)
    tcp_output_alloc_header_common           0x0000cd2d   Thumb Code   112  tcp_out.o(.text.tcp_output_alloc_header_common)
    [Anonymous Symbol]                       0x0000cd2c   Section        0  tcp_out.o(.text.tcp_output_alloc_header_common)
    tcp_output_control_segment               0x0000cdcd   Thumb Code    68  tcp_out.o(.text.tcp_output_control_segment)
    [Anonymous Symbol]                       0x0000cdcc   Section        0  tcp_out.o(.text.tcp_output_control_segment)
    tcp_output_control_segment_netif         0x0000ce3d   Thumb Code   100  tcp_out.o(.text.tcp_output_control_segment_netif)
    [Anonymous Symbol]                       0x0000ce3c   Section        0  tcp_out.o(.text.tcp_output_control_segment_netif)
    tcp_output_fill_options                  0x0000ced5   Thumb Code    20  tcp_out.o(.text.tcp_output_fill_options)
    [Anonymous Symbol]                       0x0000ced4   Section        0  tcp_out.o(.text.tcp_output_fill_options)
    tcp_output_segment                       0x0000cf11   Thumb Code   272  tcp_out.o(.text.tcp_output_segment)
    [Anonymous Symbol]                       0x0000cf10   Section        0  tcp_out.o(.text.tcp_output_segment)
    tcp_output_segment_busy                  0x0000d099   Thumb Code    24  tcp_out.o(.text.tcp_output_segment_busy)
    [Anonymous Symbol]                       0x0000d098   Section        0  tcp_out.o(.text.tcp_output_segment_busy)
    tcp_parseopt                             0x0000d0d9   Thumb Code   132  tcp_in.o(.text.tcp_parseopt)
    [Anonymous Symbol]                       0x0000d0d8   Section        0  tcp_in.o(.text.tcp_parseopt)
    tcp_pbuf_prealloc                        0x0000d179   Thumb Code   148  tcp_out.o(.text.tcp_pbuf_prealloc)
    [Anonymous Symbol]                       0x0000d178   Section        0  tcp_out.o(.text.tcp_pbuf_prealloc)
    [Anonymous Symbol]                       0x0000d264   Section        0  tcp.o(.text.tcp_pcb_purge)
    [Anonymous Symbol]                       0x0000d2e0   Section        0  tcp.o(.text.tcp_pcb_remove)
    [Anonymous Symbol]                       0x0000d3d0   Section        0  tcp.o(.text.tcp_poll)
    tcp_process                              0x0000d441   Thumb Code  1424  tcp_in.o(.text.tcp_process)
    [Anonymous Symbol]                       0x0000d440   Section        0  tcp_in.o(.text.tcp_process)
    [Anonymous Symbol]                       0x0000da58   Section        0  tcp.o(.text.tcp_process_refused_data)
    tcp_receive                              0x0000db11   Thumb Code  1176  tcp_in.o(.text.tcp_receive)
    [Anonymous Symbol]                       0x0000db10   Section        0  tcp_in.o(.text.tcp_receive)
    [Anonymous Symbol]                       0x0000e030   Section        0  tcp.o(.text.tcp_recv)
    [Anonymous Symbol]                       0x0000e07c   Section        0  tcp.o(.text.tcp_recv_null)
    [Anonymous Symbol]                       0x0000e0dc   Section        0  tcp.o(.text.tcp_recved)
    tcp_remove_listener                      0x0000e189   Thumb Code    40  tcp.o(.text.tcp_remove_listener)
    [Anonymous Symbol]                       0x0000e188   Section        0  tcp.o(.text.tcp_remove_listener)
    [Anonymous Symbol]                       0x0000e1d8   Section        0  tcp_out.o(.text.tcp_rexmit)
    [Anonymous Symbol]                       0x0000e270   Section        0  tcp_out.o(.text.tcp_rexmit_fast)
    [Anonymous Symbol]                       0x0000e2f4   Section        0  tcp_out.o(.text.tcp_rexmit_rto)
    [Anonymous Symbol]                       0x0000e330   Section        0  tcp_out.o(.text.tcp_rexmit_rto_commit)
    [Anonymous Symbol]                       0x0000e378   Section        0  tcp_out.o(.text.tcp_rexmit_rto_prepare)
    tcp_route                                0x0000e419   Thumb Code    22  tcp_out.o(.text.tcp_route)
    [Anonymous Symbol]                       0x0000e418   Section        0  tcp_out.o(.text.tcp_route)
    [Anonymous Symbol]                       0x0000e430   Section        0  tcp_out.o(.text.tcp_rst)
    tcp_rst_common                           0x0000e461   Thumb Code    84  tcp_out.o(.text.tcp_rst_common)
    [Anonymous Symbol]                       0x0000e460   Section        0  tcp_out.o(.text.tcp_rst_common)
    [Anonymous Symbol]                       0x0000e4ec   Section        0  tcp_out.o(.text.tcp_rst_netif)
    [Anonymous Symbol]                       0x0000e520   Section        0  tcp.o(.text.tcp_seg_free)
    [Anonymous Symbol]                       0x0000e544   Section        0  tcp.o(.text.tcp_segs_free)
    [Anonymous Symbol]                       0x0000e55c   Section        0  tcp_out.o(.text.tcp_send_empty_ack)
    [Anonymous Symbol]                       0x0000e5d0   Section        0  tcp_out.o(.text.tcp_send_fin)
    [Anonymous Symbol]                       0x0000e638   Section        0  tcp.o(.text.tcp_sent)
    [Anonymous Symbol]                       0x0000e680   Section        0  tcp.o(.text.tcp_shutdown)
    [Anonymous Symbol]                       0x0000e71c   Section        0  tcp.o(.text.tcp_slowtmr)
    tcp_persist_backoff                      0x0000eb90   Number         0  tcp.o(.text.tcp_slowtmr)
    [Anonymous Symbol]                       0x0000eb98   Section        0  tcp_out.o(.text.tcp_split_unsent_seg)
    [Anonymous Symbol]                       0x0000ed70   Section        0  timeouts.o(.text.tcp_timer_needed)
    tcp_timewait_input                       0x0000edb5   Thumb Code   180  tcp_in.o(.text.tcp_timewait_input)
    [Anonymous Symbol]                       0x0000edb4   Section        0  tcp_in.o(.text.tcp_timewait_input)
    [Anonymous Symbol]                       0x0000ee88   Section        0  tcp.o(.text.tcp_tmr)
    [Anonymous Symbol]                       0x0000eea8   Section        0  tcp_in.o(.text.tcp_trigger_input_pcb_close)
    [Anonymous Symbol]                       0x0000eebc   Section        0  tcp.o(.text.tcp_update_rcv_ann_wnd)
    [Anonymous Symbol]                       0x0000ef4c   Section        0  tcp_out.o(.text.tcp_write)
    tcp_write_checks                         0x0000f599   Thumb Code   116  tcp_out.o(.text.tcp_write_checks)
    [Anonymous Symbol]                       0x0000f598   Section        0  tcp_out.o(.text.tcp_write_checks)
    [Anonymous Symbol]                       0x0000f668   Section        0  tcp_out.o(.text.tcp_zero_window_probe)
    [Anonymous Symbol]                       0x0000f744   Section        0  tcpecho.o(.text.tcpecho_init)
    tcpecho_thread                           0x0000f779   Thumb Code   192  tcpecho.o(.text.tcpecho_thread)
    [Anonymous Symbol]                       0x0000f778   Section        0  tcpecho.o(.text.tcpecho_thread)
    [Anonymous Symbol]                       0x0000f870   Section        0  tcpip.o(.text.tcpip_api_call)
    [Anonymous Symbol]                       0x0000f888   Section        0  tcpip.o(.text.tcpip_init)
    [Anonymous Symbol]                       0x0000f948   Section        0  tcpip.o(.text.tcpip_inpkt)
    [Anonymous Symbol]                       0x0000f9a8   Section        0  tcpip.o(.text.tcpip_input)
    [Anonymous Symbol]                       0x0000f9cc   Section        0  tcpip.o(.text.tcpip_send_msg_wait_sem)
    tcpip_tcp_timer                          0x0000f9e5   Thumb Code    62  timeouts.o(.text.tcpip_tcp_timer)
    [Anonymous Symbol]                       0x0000f9e4   Section        0  timeouts.o(.text.tcpip_tcp_timer)
    tcpip_thread                             0x0000fa25   Thumb Code    72  tcpip.o(.text.tcpip_thread)
    [Anonymous Symbol]                       0x0000fa24   Section        0  tcpip.o(.text.tcpip_thread)
    tcpip_thread_handle_msg                  0x0000fa6d   Thumb Code    72  tcpip.o(.text.tcpip_thread_handle_msg)
    [Anonymous Symbol]                       0x0000fa6c   Section        0  tcpip.o(.text.tcpip_thread_handle_msg)
    tcpip_timeouts_mbox_fetch                0x0000fab5   Thumb Code    92  tcpip.o(.text.tcpip_timeouts_mbox_fetch)
    [Anonymous Symbol]                       0x0000fab4   Section        0  tcpip.o(.text.tcpip_timeouts_mbox_fetch)
    [Anonymous Symbol]                       0x0000fb10   Section        0  udp.o(.text.udp_bind)
    [Anonymous Symbol]                       0x0000fbd0   Section        0  udp.o(.text.udp_connect)
    [Anonymous Symbol]                       0x0000fc80   Section        0  udp.o(.text.udp_init)
    [Anonymous Symbol]                       0x0000fc84   Section        0  udp.o(.text.udp_input)
    udp_input_local_match                    0x0000fe99   Thumb Code   136  udp.o(.text.udp_input_local_match)
    [Anonymous Symbol]                       0x0000fe98   Section        0  udp.o(.text.udp_input_local_match)
    [Anonymous Symbol]                       0x0000ff6c   Section        0  udp.o(.text.udp_netif_ip_addr_changed)
    [Anonymous Symbol]                       0x0000ffac   Section        0  udp.o(.text.udp_new)
    [Anonymous Symbol]                       0x0000ffd0   Section        0  udp.o(.text.udp_new_ip_type)
    udp_new_port                             0x0000ffdd   Thumb Code    98  udp.o(.text.udp_new_port)
    [Anonymous Symbol]                       0x0000ffdc   Section        0  udp.o(.text.udp_new_port)
    [Anonymous Symbol]                       0x00010040   Section        0  udp.o(.text.udp_recv)
    [Anonymous Symbol]                       0x00010084   Section        0  udp.o(.text.udp_remove)
    [Anonymous Symbol]                       0x000100e8   Section        0  udp.o(.text.udp_sendto_if)
    [Anonymous Symbol]                       0x00010200   Section        0  udp.o(.text.udp_sendto_if_src)
    [Anonymous Symbol]                       0x000103f8   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0001041c   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    [Anonymous Symbol]                       0x00010444   Section        0  tasks.o(.text.uxTaskResetEventItemValue)
    [Anonymous Symbol]                       0x00010460   Section        0  event_groups.o(.text.vEventGroupSetBitsCallback)
    [Anonymous Symbol]                       0x00010468   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00010480   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00010488   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x000104c4   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000104e1   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000104e0   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000104f4   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0001053c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0001056c   Section        0  heap_3.o(.text.vPortFree)
    [Anonymous Symbol]                       0x0001058c   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000105c0   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x00010624   Section        0  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x0001064c   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x00010674   Section        0  queue.o(.text.vQueueUnregisterQueue)
    [Anonymous Symbol]                       0x000106a0   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000106e4   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x000107dc   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000107f8   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00010808   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0001083c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0001087c   Section        0  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    [Anonymous Symbol]                       0x000108d8   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00010994   Section        0  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    [Anonymous Symbol]                       0x00010a2c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00010ac8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00010ad8   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00010ad8   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00010b60   Section        0  event_groups.o(.text.xEventGroupCreate)
    [Anonymous Symbol]                       0x00010b7c   Section        0  event_groups.o(.text.xEventGroupSetBits)
    [Anonymous Symbol]                       0x00010c1c   Section        0  event_groups.o(.text.xEventGroupSetBitsFromISR)
    [Anonymous Symbol]                       0x00010c34   Section        0  event_groups.o(.text.xEventGroupWaitBits)
    [Anonymous Symbol]                       0x00010d54   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00010e68   Section        0  queue.o(.text.xQueueCreateCountingSemaphore)
    [Anonymous Symbol]                       0x00010eac   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00010ec4   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00010f34   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00010fb4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00011158   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x00011240   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x000113c4   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x0001158c   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00011618   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00011678   Section        0  tasks.o(.text.xTaskGetCurrentTaskHandle)
    [Anonymous Symbol]                       0x00011684   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000116ac   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000116b8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00011800   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000118ac   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00011958   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000119e8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00011b00   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x00011b60   Section        0  timers.o(.text.xTimerGenericCommand)
    [Anonymous Symbol]                       0x00011bc8   Section        0  timers.o(.text.xTimerPendFunctionCallFromISR)
    i.__free$2region                         0x00011bf4   Section        0  malloc2.o(i.__free$2region)
    i.__malloc$2region                       0x00011c44   Section        0  malloc2.o(i.__malloc$2region)
    i.__scatterload_copy                     0x00011cb0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00011cbe   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00011cc0   Section       14  handlers.o(i.__scatterload_zeroinit)
    .L__const.stack_init.enet_config         0x00011cd0   Data          12  lwip_tcpecho_freertos.o(.rodata..L__const.stack_init.enet_config)
    dhcp_discover_request_options            0x00011cdc   Data           3  dhcp.o(.rodata.dhcp_discover_request_options)
    [Anonymous Symbol]                       0x00011cdc   Section        0  dhcp.o(.rodata.dhcp_discover_request_options)
    s_UartAdapterBase                        0x00011e6c   Data          24  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    [Anonymous Symbol]                       0x00011e6c   Section        0  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    s_uartClock                              0x00011e88   Data          24  fsl_uart.o(.rodata.s_uartClock)
    [Anonymous Symbol]                       0x00011e88   Section        0  fsl_uart.o(.rodata.s_uartClock)
    .L.str.2                                 0x00011ea8   Data          53  lwip_tcpecho_freertos.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00011ea8   Section        0  lwip_tcpecho_freertos.o(.rodata.str1.1)
    .L.str.4                                 0x00011eaa   Data          51  lwip_tcpecho_freertos.o(.rodata.str1.1)
    .L.str.4                                 0x00011edd   Data          24  fsl_phyksz8081.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00011edd   Section        0  fsl_phyksz8081.o(.rodata.str1.1)
    .L.str.1                                 0x00011ef5   Data          68  fsl_phyksz8081.o(.rodata.str1.1)
    .L.str.2                                 0x00011f39   Data           7  fsl_phyksz8081.o(.rodata.str1.1)
    .L.str.3                                 0x00011f40   Data          91  enet_ethernetif.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00011f40   Section        0  enet_ethernetif.o(.rodata.str1.1)
    .L.str.1                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.1                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.11                                0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.15                                0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.3                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.3                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.4                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.4                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str.5                                 0x00011f98   Data           3  enet_ethernetif.o(.rodata.str1.1)
    .L.str                                   0x00011f9b   Data          14  enet_ethernetif.o(.rodata.str1.1)
    .L.str.2                                 0x00011f9b   Data          14  enet_ethernetif.o(.rodata.str1.1)
    .L.str.4                                 0x00011f9b   Data          14  enet_ethernetif.o(.rodata.str1.1)
    .L.str.6                                 0x00011fa9   Data          66  enet_ethernetif_kinetis.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00011fa9   Section        0  enet_ethernetif_kinetis.o(.rodata.str1.1)
    .L.str.5                                 0x00011feb   Data          76  enet_ethernetif_kinetis.o(.rodata.str1.1)
    .L.str.4                                 0x00012037   Data          30  tcpip.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012037   Section        0  tcpip.o(.rodata.str1.1)
    .L.str                                   0x00012055   Data          13  tcpip.o(.rodata.str1.1)
    .L.str.8                                 0x00012062   Data           7  api_msg.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012062   Section        0  api_msg.o(.rodata.str1.1)
    .L.str.41                                0x00012069   Data          43  api_msg.o(.rodata.str1.1)
    .L.str.40                                0x00012094   Data          40  api_msg.o(.rodata.str1.1)
    .L.str.24                                0x000120bc   Data          14  api_msg.o(.rodata.str1.1)
    .L.str.22                                0x000120ca   Data          26  api_msg.o(.rodata.str1.1)
    .L.str.25                                0x000120e4   Data          13  api_msg.o(.rodata.str1.1)
    .L.str.7                                 0x000120f1   Data          27  api_msg.o(.rodata.str1.1)
    .L.str.4                                 0x0001210c   Data          60  api_msg.o(.rodata.str1.1)
    .L.str.15                                0x00012148   Data          36  api_lib.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012148   Section        0  api_lib.o(.rodata.str1.1)
    .L.str.18                                0x0001216c   Data          27  api_lib.o(.rodata.str1.1)
    .L.str.16                                0x0001216f   Data          42  api_lib.o(.rodata.str1.1)
    .L.str.17                                0x00012187   Data          30  api_lib.o(.rodata.str1.1)
    .L.str.14                                0x00012195   Data          16  api_lib.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000121a5   Section        0  memp.o(.rodata.str1.1)
    .L.str.13                                0x00012230   Data          18  memp.o(.rodata.str1.1)
    .L.str.28                                0x00012230   Data          55  pbuf.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012230   Section        0  pbuf.o(.rodata.str1.1)
    .L.str.9                                 0x00012267   Data          10  pbuf.o(.rodata.str1.1)
    .L.str.1                                 0x00012271   Data          52  pbuf.o(.rodata.str1.1)
    .L.str.22                                0x000122a5   Data          52  pbuf.o(.rodata.str1.1)
    .L.str.23                                0x000122d9   Data          46  pbuf.o(.rodata.str1.1)
    .L.str.2                                 0x00012307   Data          49  tcp_out.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012307   Section        0  tcp_out.o(.rodata.str1.1)
    .L.str.32                                0x0001230a   Data          37  pbuf.o(.rodata.str1.1)
    .L.str.22                                0x00012338   Data          85  tcp_out.o(.rodata.str1.1)
    .L.str.8                                 0x0001238d   Data          47  tcp_out.o(.rodata.str1.1)
    .L.str.10                                0x000123bc   Data          14  tcp_out.o(.rodata.str1.1)
    .L.str.11                                0x000123ca   Data          17  tcp_out.o(.rodata.str1.1)
    .L.str                                   0x000123db   Data          23  tcp_out.o(.rodata.str1.1)
    .L.str.12                                0x000123f2   Data          44  tcp_out.o(.rodata.str1.1)
    .L.str.7                                 0x0001241e   Data          41  tcp_out.o(.rodata.str1.1)
    .L.str.14                                0x00012447   Data          53  tcp_out.o(.rodata.str1.1)
    .L.str.15                                0x0001247c   Data          30  tcp_out.o(.rodata.str1.1)
    .L.str.27                                0x0001249a   Data          40  tcp_out.o(.rodata.str1.1)
    .L.str.26                                0x000124c2   Data          42  tcp_out.o(.rodata.str1.1)
    .L.str.6                                 0x000124e5   Data           7  tcp_out.o(.rodata.str1.1)
    .L.str.9                                 0x000124ec   Data          62  tcp_out.o(.rodata.str1.1)
    .L.str.41                                0x0001252a   Data          50  tcp_out.o(.rodata.str1.1)
    .L.str.13                                0x0001255c   Data          56  tcp_out.o(.rodata.str1.1)
    .L.str.7                                 0x00012594   Data          43  tcp_in.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012594   Section        0  tcp_in.o(.rodata.str1.1)
    .L.str.8                                 0x000125bf   Data          42  tcp_in.o(.rodata.str1.1)
    .L.str.10                                0x000125e9   Data          26  tcp_in.o(.rodata.str1.1)
    .L.str.6                                 0x00012603   Data          39  tcp_in.o(.rodata.str1.1)
    .L.str.5                                 0x0001262a   Data          42  tcp_in.o(.rodata.str1.1)
    .L.str.9                                 0x00012654   Data          45  tcp_in.o(.rodata.str1.1)
    .L.str.27                                0x00012681   Data          54  tcp_in.o(.rodata.str1.1)
    .L.str.10                                0x000126b7   Data          47  mem.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000126b7   Section        0  mem.o(.rodata.str1.1)
    .L.str.7                                 0x000126e6   Data          17  mem.o(.rodata.str1.1)
    .L.str.2                                 0x000126f7   Data          25  mem.o(.rodata.str1.1)
    .L.str.13                                0x00012710   Data          31  udp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012710   Section        0  udp.o(.rodata.str1.1)
    .L.str.14                                0x0001272f   Data          32  udp.o(.rodata.str1.1)
    .L.str.15                                0x0001274f   Data          34  udp.o(.rodata.str1.1)
    .L.str.2                                 0x00012771   Data          21  tcp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012771   Section        0  tcp.o(.rodata.str1.1)
    .L.str.1                                 0x00012786   Data          12  tcp.o(.rodata.str1.1)
    .L.str.27                                0x00012792   Data          47  tcp.o(.rodata.str1.1)
    .L.str.23                                0x000127c1   Data          50  tcp.o(.rodata.str1.1)
    .L.str.5                                 0x000127ee   Data           5  tcp.o(.rodata.str1.1)
    .L.str.10                                0x000127f3   Data          45  tcp.o(.rodata.str1.1)
    .L.str.24                                0x00012820   Data          53  tcp.o(.rodata.str1.1)
    .L.str.25                                0x00012855   Data          43  tcp.o(.rodata.str1.1)
    .L.str.26                                0x00012880   Data          42  tcp.o(.rodata.str1.1)
    .L.str.28                                0x000128aa   Data          39  tcp.o(.rodata.str1.1)
    .L.str.29                                0x000128d1   Data          38  tcp.o(.rodata.str1.1)
    .L.str.13                                0x000128f7   Data          66  dhcp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000128f7   Section        0  dhcp.o(.rodata.str1.1)
    .L.str                                   0x00012939   Data          12  ip4.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012939   Section        0  ip4.o(.rodata.str1.1)
    .L.str.16                                0x00012945   Data          65  etharp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012945   Section        0  etharp.o(.rodata.str1.1)
    .L.str.11                                0x00012986   Data          19  etharp.o(.rodata.str1.1)
    .L.str.5                                 0x00012999   Data          10  etharp.o(.rodata.str1.1)
    .L.str.1                                 0x000129a3   Data          15  etharp.o(.rodata.str1.1)
    .L.str.11                                0x000129b2   Data          57  fsl_enet.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000129b2   Section        0  fsl_enet.o(.rodata.str1.1)
    .L.str.6                                 0x000129eb   Data          67  fsl_enet.o(.rodata.str1.1)
    .L.str.9                                 0x00012a2e   Data          41  fsl_enet.o(.rodata.str1.1)
    .L.str.12                                0x00012a57   Data          13  fsl_enet.o(.rodata.str1.1)
    .L.str.3                                 0x00012a64   Data          15  fsl_enet.o(.rodata.str1.1)
    .L.str.13                                0x00012a73   Data          42  fsl_enet.o(.rodata.str1.1)
    .L.str.4                                 0x00012a9d   Data          21  fsl_enet.o(.rodata.str1.1)
    .L.str.2                                 0x00012ab2   Data          15  fsl_enet.o(.rodata.str1.1)
    .L.str.3                                 0x00012ab2   Data          15  fsl_enet.o(.rodata.str1.1)
    .L.str.5                                 0x00012ac1   Data          16  fsl_enet.o(.rodata.str1.1)
    .L.str.1                                 0x00012ad1   Data          53  fsl_enet.o(.rodata.str1.1)
    .L.str.21                                0x00012b06   Data          16  fsl_enet.o(.rodata.str1.1)
    .L.str.22                                0x00012b06   Data          71  fsl_enet.o(.rodata.str1.1)
    .L.str.1                                 0x00012b4d   Data          54  fsl_clock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012b4d   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str.4                                 0x00012b83   Data           7  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x00012b8a   Data          53  fsl_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012b8a   Section        0  fsl_uart.o(.rodata.str1.1)
    .L.str.2                                 0x00012bbf   Data          15  fsl_uart.o(.rodata.str1.1)
    .L.str.6                                 0x00012bbf   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.5                                 0x00012c05   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.3                                 0x00012c4b   Data          69  fsl_adapter_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00012c4b   Section        0  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.8                                 0x00012c69   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.9                                 0x00012c76   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.11                                0x00012c83   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00012c90   Data          53  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.12                                0x00012c90   Data          21  fsl_uart.o(.rodata.str1.1)
    .L.str.14                                0x00012ca5   Data          14  fsl_uart.o(.rodata.str1.1)
    .L.str                                   0x00012cc5   Data           7  fsl_adapter_uart.o(.rodata.str1.1)
    tcp_backoff                              0x00012ccc   Data          13  tcp.o(.rodata.tcp_backoff)
    [Anonymous Symbol]                       0x00012ccc   Section        0  tcp.o(.rodata.tcp_backoff)
    .data                                    0x20000000   Section        4  mvars.o(.data)
    .data                                    0x20000004   Section        4  mvars.o(.data)
    dhcp_create_msg.xid                      0x2000000c   Data           4  dhcp.o(.data.dhcp_create_msg.xid)
    [Anonymous Symbol]                       0x2000000c   Section        0  dhcp.o(.data.dhcp_create_msg.xid)
    mdioHandle                               0x20000010   Data          12  lwip_tcpecho_freertos.o(.data.mdioHandle)
    [Anonymous Symbol]                       0x20000010   Section        0  lwip_tcpecho_freertos.o(.data.mdioHandle)
    phyHandle                                0x2000001c   Data          12  lwip_tcpecho_freertos.o(.data.phyHandle)
    [Anonymous Symbol]                       0x2000001c   Section        0  lwip_tcpecho_freertos.o(.data.phyHandle)
    s_fastIrcFreq                            0x20000028   Data           4  fsl_clock.o(.data.s_fastIrcFreq)
    [Anonymous Symbol]                       0x20000028   Section        0  fsl_clock.o(.data.s_fastIrcFreq)
    s_slowIrcFreq                            0x2000002c   Data           4  fsl_clock.o(.data.s_slowIrcFreq)
    [Anonymous Symbol]                       0x2000002c   Section        0  fsl_clock.o(.data.s_slowIrcFreq)
    tcp_next_iss.iss                         0x20000034   Data           4  tcp.o(.data.tcp_next_iss.iss)
    [Anonymous Symbol]                       0x20000034   Section        0  tcp.o(.data.tcp_next_iss.iss)
    tcp_port                                 0x20000038   Data           2  tcp.o(.data.tcp_port)
    [Anonymous Symbol]                       0x20000038   Section        0  tcp.o(.data.tcp_port)
    udp_port                                 0x2000003a   Data           2  udp.o(.data.udp_port)
    [Anonymous Symbol]                       0x2000003a   Section        0  udp.o(.data.udp_port)
    uxCriticalNesting                        0x2000003c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000003c   Section        0  port.o(.data.uxCriticalNesting)
    ackno                                    0x20000040   Data           4  tcp_in.o(.bss.ackno)
    [Anonymous Symbol]                       0x20000040   Section        0  tcp_in.o(.bss.ackno)
    arp_table                                0x20000044   Data         240  etharp.o(.bss.arp_table)
    [Anonymous Symbol]                       0x20000044   Section        0  etharp.o(.bss.arp_table)
    current_timeout_due_time                 0x20000134   Data           4  timeouts.o(.bss.current_timeout_due_time)
    [Anonymous Symbol]                       0x20000134   Section        0  timeouts.o(.bss.current_timeout_due_time)
    dhcp_pcb                                 0x20000138   Data           4  dhcp.o(.bss.dhcp_pcb)
    [Anonymous Symbol]                       0x20000138   Section        0  dhcp.o(.bss.dhcp_pcb)
    dhcp_pcb_refcount                        0x2000013c   Data           1  dhcp.o(.bss.dhcp_pcb_refcount)
    [Anonymous Symbol]                       0x2000013c   Section        0  dhcp.o(.bss.dhcp_pcb_refcount)
    enet_get_tx_buffer.ucBuffer              0x20000168   Data        1518  enet_ethernetif_kinetis.o(.bss.enet_get_tx_buffer.ucBuffer)
    [Anonymous Symbol]                       0x20000168   Section        0  enet_ethernetif_kinetis.o(.bss.enet_get_tx_buffer.ucBuffer)
    etharp_cached_entry                      0x20000756   Data           1  etharp.o(.bss.etharp_cached_entry)
    [Anonymous Symbol]                       0x20000756   Section        0  etharp.o(.bss.etharp_cached_entry)
    ethernetif0_init.ethernetif_0            0x20000758   Data         480  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.ethernetif_0)
    [Anonymous Symbol]                       0x20000758   Section        0  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.ethernetif_0)
    ethernetif0_init.rxBuffDescrip_0         0x20000940   Data          40  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxBuffDescrip_0)
    [Anonymous Symbol]                       0x20000940   Section        0  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxBuffDescrip_0)
    ethernetif0_init.rxDataBuff_0            0x20000970   Data       15200  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxDataBuff_0)
    [Anonymous Symbol]                       0x20000970   Section        0  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.rxDataBuff_0)
    ethernetif0_init.txBuffDescrip_0         0x200044d0   Data          24  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txBuffDescrip_0)
    [Anonymous Symbol]                       0x200044d0   Section        0  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txBuffDescrip_0)
    ethernetif0_init.txDataBuff_0            0x200044f0   Data        4560  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txDataBuff_0)
    [Anonymous Symbol]                       0x200044f0   Section        0  enet_ethernetif_kinetis.o(.bss.ethernetif0_init.txDataBuff_0)
    flags                                    0x200056c0   Data           1  tcp_in.o(.bss.flags)
    [Anonymous Symbol]                       0x200056c0   Section        0  tcp_in.o(.bss.flags)
    inseg.1                                  0x200056d0   Data           4  tcp_in.o(.bss.inseg.1)
    [Anonymous Symbol]                       0x200056d0   Section        0  tcp_in.o(.bss.inseg.1)
    inseg.2                                  0x200056d4   Data           2  tcp_in.o(.bss.inseg.2)
    [Anonymous Symbol]                       0x200056d4   Section        0  tcp_in.o(.bss.inseg.2)
    inseg.5                                  0x200056d8   Data           4  tcp_in.o(.bss.inseg.5)
    [Anonymous Symbol]                       0x200056d8   Section        0  tcp_in.o(.bss.inseg.5)
    ip_id                                    0x200056f4   Data           2  ip4.o(.bss.ip_id)
    [Anonymous Symbol]                       0x200056f4   Section        0  ip4.o(.bss.ip_id)
    ip_reass_pbufcount                       0x200056f6   Data           2  ip4_frag.o(.bss.ip_reass_pbufcount)
    [Anonymous Symbol]                       0x200056f6   Section        0  ip4_frag.o(.bss.ip_reass_pbufcount)
    lfree                                    0x200056f8   Data           4  mem.o(.bss.lfree)
    [Anonymous Symbol]                       0x200056f8   Section        0  mem.o(.bss.lfree)
    lwip_core_lock_count                     0x20005700   Data           1  sys_arch.o(.bss.lwip_core_lock_count)
    [Anonymous Symbol]                       0x20005700   Section        0  sys_arch.o(.bss.lwip_core_lock_count)
    lwip_core_lock_holder_thread             0x20005704   Data           4  sys_arch.o(.bss.lwip_core_lock_holder_thread)
    [Anonymous Symbol]                       0x20005704   Section        0  sys_arch.o(.bss.lwip_core_lock_holder_thread)
    lwip_tcpip_thread                        0x20005708   Data           4  sys_arch.o(.bss.lwip_tcpip_thread)
    [Anonymous Symbol]                       0x20005708   Section        0  sys_arch.o(.bss.lwip_tcpip_thread)
    mem_mutex                                0x2000570c   Data           4  mem.o(.bss.mem_mutex)
    [Anonymous Symbol]                       0x2000570c   Section        0  mem.o(.bss.mem_mutex)
    memp_tab_FRAG_PBUF                       0x200083b4   Data           4  memp.o(.bss.memp_tab_FRAG_PBUF)
    [Anonymous Symbol]                       0x200083b4   Section        0  memp.o(.bss.memp_tab_FRAG_PBUF)
    memp_tab_NETBUF                          0x200083b8   Data           4  memp.o(.bss.memp_tab_NETBUF)
    [Anonymous Symbol]                       0x200083b8   Section        0  memp.o(.bss.memp_tab_NETBUF)
    memp_tab_NETCONN                         0x200083bc   Data           4  memp.o(.bss.memp_tab_NETCONN)
    [Anonymous Symbol]                       0x200083bc   Section        0  memp.o(.bss.memp_tab_NETCONN)
    memp_tab_PBUF                            0x200083c0   Data           4  memp.o(.bss.memp_tab_PBUF)
    [Anonymous Symbol]                       0x200083c0   Section        0  memp.o(.bss.memp_tab_PBUF)
    memp_tab_PBUF_POOL                       0x200083c4   Data           4  memp.o(.bss.memp_tab_PBUF_POOL)
    [Anonymous Symbol]                       0x200083c4   Section        0  memp.o(.bss.memp_tab_PBUF_POOL)
    memp_tab_REASSDATA                       0x200083c8   Data           4  memp.o(.bss.memp_tab_REASSDATA)
    [Anonymous Symbol]                       0x200083c8   Section        0  memp.o(.bss.memp_tab_REASSDATA)
    memp_tab_SYS_TIMEOUT                     0x200083cc   Data           4  memp.o(.bss.memp_tab_SYS_TIMEOUT)
    [Anonymous Symbol]                       0x200083cc   Section        0  memp.o(.bss.memp_tab_SYS_TIMEOUT)
    memp_tab_TCPIP_MSG_API                   0x200083d0   Data           4  memp.o(.bss.memp_tab_TCPIP_MSG_API)
    [Anonymous Symbol]                       0x200083d0   Section        0  memp.o(.bss.memp_tab_TCPIP_MSG_API)
    memp_tab_TCPIP_MSG_INPKT                 0x200083d4   Data           4  memp.o(.bss.memp_tab_TCPIP_MSG_INPKT)
    [Anonymous Symbol]                       0x200083d4   Section        0  memp.o(.bss.memp_tab_TCPIP_MSG_INPKT)
    memp_tab_TCP_PCB                         0x200083d8   Data           4  memp.o(.bss.memp_tab_TCP_PCB)
    [Anonymous Symbol]                       0x200083d8   Section        0  memp.o(.bss.memp_tab_TCP_PCB)
    memp_tab_TCP_PCB_LISTEN                  0x200083dc   Data           4  memp.o(.bss.memp_tab_TCP_PCB_LISTEN)
    [Anonymous Symbol]                       0x200083dc   Section        0  memp.o(.bss.memp_tab_TCP_PCB_LISTEN)
    memp_tab_TCP_SEG                         0x200083e0   Data           4  memp.o(.bss.memp_tab_TCP_SEG)
    [Anonymous Symbol]                       0x200083e0   Section        0  memp.o(.bss.memp_tab_TCP_SEG)
    memp_tab_UDP_PCB                         0x200083e4   Data           4  memp.o(.bss.memp_tab_UDP_PCB)
    [Anonymous Symbol]                       0x200083e4   Section        0  memp.o(.bss.memp_tab_UDP_PCB)
    netif_num                                0x200083f0   Data           1  netif.o(.bss.netif_num)
    [Anonymous Symbol]                       0x200083f0   Section        0  netif.o(.bss.netif_num)
    next_timeout                             0x200083f4   Data           4  timeouts.o(.bss.next_timeout)
    [Anonymous Symbol]                       0x200083f4   Section        0  timeouts.o(.bss.next_timeout)
    prvSampleTimeNow.xLastTime               0x200083f8   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200083f8   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20008400   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20008400   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20008404   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20008404   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20008408   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20008408   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x2000840c   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x2000840c   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20008410   Data         360  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20008410   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ram                                      0x20008578   Data           4  mem.o(.bss.ram)
    [Anonymous Symbol]                       0x20008578   Section        0  mem.o(.bss.ram)
    ram_end                                  0x2000857c   Data           4  mem.o(.bss.ram_end)
    [Anonymous Symbol]                       0x2000857c   Section        0  mem.o(.bss.ram_end)
    reassdatagrams                           0x2000dd94   Data           4  ip4_frag.o(.bss.reassdatagrams)
    [Anonymous Symbol]                       0x2000dd94   Section        0  ip4_frag.o(.bss.reassdatagrams)
    recv_acked                               0x2000dd98   Data           2  tcp_in.o(.bss.recv_acked)
    [Anonymous Symbol]                       0x2000dd98   Section        0  tcp_in.o(.bss.recv_acked)
    recv_data                                0x2000dd9c   Data           4  tcp_in.o(.bss.recv_data)
    [Anonymous Symbol]                       0x2000dd9c   Section        0  tcp_in.o(.bss.recv_data)
    recv_flags                               0x2000dda0   Data           1  tcp_in.o(.bss.recv_flags)
    [Anonymous Symbol]                       0x2000dda0   Section        0  tcp_in.o(.bss.recv_flags)
    s_ENETHandle.0                           0x2000dda4   Data           4  fsl_enet.o(.bss.s_ENETHandle.0)
    [Anonymous Symbol]                       0x2000dda4   Section        0  fsl_enet.o(.bss.s_ENETHandle.0)
    s_debugConsoleReadWaitSemaphore          0x2000dda8   Data           1  fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore)
    [Anonymous Symbol]                       0x2000dda8   Section        0  fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore)
    s_debugConsoleState                      0x2000ddac   Data          32  fsl_debug_console.o(.bss.s_debugConsoleState)
    [Anonymous Symbol]                       0x2000ddac   Section        0  fsl_debug_console.o(.bss.s_debugConsoleState)
    s_enetErrIsr.0                           0x2000ddcc   Data           4  fsl_enet.o(.bss.s_enetErrIsr.0)
    [Anonymous Symbol]                       0x2000ddcc   Section        0  fsl_enet.o(.bss.s_enetErrIsr.0)
    s_enetRxIsr.0                            0x2000ddd0   Data           4  fsl_enet.o(.bss.s_enetRxIsr.0)
    [Anonymous Symbol]                       0x2000ddd0   Section        0  fsl_enet.o(.bss.s_enetRxIsr.0)
    s_enetTxIsr.0                            0x2000ddd4   Data           4  fsl_enet.o(.bss.s_enetTxIsr.0)
    [Anonymous Symbol]                       0x2000ddd4   Section        0  fsl_enet.o(.bss.s_enetTxIsr.0)
    seqno                                    0x2000ddf0   Data           4  tcp_in.o(.bss.seqno)
    [Anonymous Symbol]                       0x2000ddf0   Section        0  tcp_in.o(.bss.seqno)
    stack_init.netif                         0x2000ddf4   Data          52  lwip_tcpecho_freertos.o(.bss.stack_init.netif)
    [Anonymous Symbol]                       0x2000ddf4   Section        0  lwip_tcpecho_freertos.o(.bss.stack_init.netif)
    tcp_optidx                               0x2000de3c   Data           2  tcp_in.o(.bss.tcp_optidx)
    [Anonymous Symbol]                       0x2000de3c   Section        0  tcp_in.o(.bss.tcp_optidx)
    tcp_timer                                0x2000de44   Data           1  tcp.o(.bss.tcp_timer)
    [Anonymous Symbol]                       0x2000de44   Section        0  tcp.o(.bss.tcp_timer)
    tcp_timer_ctr                            0x2000de45   Data           1  tcp.o(.bss.tcp_timer_ctr)
    [Anonymous Symbol]                       0x2000de45   Section        0  tcp.o(.bss.tcp_timer_ctr)
    tcphdr                                   0x2000de4c   Data           4  tcp_in.o(.bss.tcphdr)
    [Anonymous Symbol]                       0x2000de4c   Section        0  tcp_in.o(.bss.tcphdr)
    tcphdr_opt1len                           0x2000de50   Data           2  tcp_in.o(.bss.tcphdr_opt1len)
    [Anonymous Symbol]                       0x2000de50   Section        0  tcp_in.o(.bss.tcphdr_opt1len)
    tcphdr_opt2                              0x2000de54   Data           4  tcp_in.o(.bss.tcphdr_opt2)
    [Anonymous Symbol]                       0x2000de54   Section        0  tcp_in.o(.bss.tcphdr_opt2)
    tcphdr_optlen                            0x2000de58   Data           2  tcp_in.o(.bss.tcphdr_optlen)
    [Anonymous Symbol]                       0x2000de58   Section        0  tcp_in.o(.bss.tcphdr_optlen)
    tcpip_init_done                          0x2000de5c   Data           4  tcpip.o(.bss.tcpip_init_done)
    [Anonymous Symbol]                       0x2000de5c   Section        0  tcpip.o(.bss.tcpip_init_done)
    tcpip_init_done_arg                      0x2000de60   Data           4  tcpip.o(.bss.tcpip_init_done_arg)
    [Anonymous Symbol]                       0x2000de60   Section        0  tcpip.o(.bss.tcpip_init_done_arg)
    tcpip_mbox                               0x2000de64   Data           4  tcpip.o(.bss.tcpip_mbox)
    [Anonymous Symbol]                       0x2000de64   Section        0  tcpip.o(.bss.tcpip_mbox)
    tcpip_tcp_timer_active                   0x2000de68   Data           1  timeouts.o(.bss.tcpip_tcp_timer_active)
    [Anonymous Symbol]                       0x2000de68   Section        0  timeouts.o(.bss.tcpip_tcp_timer_active)
    tcplen                                   0x2000de6a   Data           2  tcp_in.o(.bss.tcplen)
    [Anonymous Symbol]                       0x2000de6a   Section        0  tcp_in.o(.bss.tcplen)
    ucMaxSysCallPriority                     0x2000de6c   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x2000de6c   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000de74   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000de74   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x2000de78   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x2000de78   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2000de7c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2000de7c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000de80   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000de80   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000de84   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000de84   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x2000de88   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x2000de88   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x2000de8c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2000de8c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2000dea0   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2000dea0   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x2000deb4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2000deb4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x2000dec8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x2000dec8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x2000dedc   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2000dedc   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextTaskUnblockTime                     0x2000dee0   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2000dee0   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2000dee4   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2000dee4   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x2000dee8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x2000dee8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x2000deec   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x2000deec   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000df40   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000df40   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x2000df44   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x2000df44   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x2000df58   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2000df58   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x2000df6c   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x2000df6c   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x2000df70   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x2000df70   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x2000df74   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x2000df74   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x2000df78   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x2000df78   Section        0  tasks.o(.bss.xYieldPending)
    VTOR                                     0xe000ed08   Number         0  startup_mk64f12.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number      1024  startup_mk64f12.o(.isr_vector)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000411   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000411   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00000415   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000419   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000419   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000419   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000419   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000421   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000421   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000425   Thumb Code    40  startup_mk64f12.o(.text)
    ADC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ADC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    BusFault_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMT_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DebugMon_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DefaultISR                               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTFE_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LLWU_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LPTMR0_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LVD_LVW_IRQHandler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCM_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MemManage_Handler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PDB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTA_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTB_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTC_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTD_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTE_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RNG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_Seconds_IRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Read_Collision_IRQHandler                0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Reserved71_IRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SWI_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USBDCD_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UsageFault_Handler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    WDOG_EWM_IRQHandler                      0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    NMI_Handler                              0x00000451   Thumb Code     4  startup_mk64f12.o(.text)
    HardFault_Handler                        0x00000455   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_IRQHandler                          0x00000465   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_IRQHandler                          0x00000469   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_IRQHandler                          0x0000046d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_IRQHandler                          0x00000471   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_IRQHandler                          0x00000475   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_IRQHandler                          0x00000479   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_IRQHandler                          0x0000047d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_IRQHandler                          0x00000481   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_IRQHandler                          0x00000485   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_IRQHandler                          0x00000489   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_IRQHandler                         0x0000048d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_IRQHandler                         0x00000491   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_IRQHandler                         0x00000495   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_IRQHandler                         0x00000499   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_IRQHandler                         0x0000049d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_IRQHandler                         0x000004a1   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_IRQHandler                     0x000004a5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_IRQHandler                          0x000004a9   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_IRQHandler                          0x000004ad   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_IRQHandler                          0x000004b1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_IRQHandler                          0x000004b5   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_IRQHandler                       0x000004b9   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_IRQHandler                       0x000004bd   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_IRQHandler                     0x000004c1   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_RX_TX_IRQHandler                   0x000004c5   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_IRQHandler                     0x000004c9   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_RX_TX_IRQHandler                   0x000004cd   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_IRQHandler                     0x000004d1   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_RX_TX_IRQHandler                   0x000004d5   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_IRQHandler                     0x000004d9   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_RX_TX_IRQHandler                   0x000004dd   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_IRQHandler                     0x000004e1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_IRQHandler                          0x000004e5   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_RX_TX_IRQHandler                   0x000004e9   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_IRQHandler                     0x000004ed   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_RX_TX_IRQHandler                   0x000004f1   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_IRQHandler                     0x000004f5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_IRQHandler                          0x000004f9   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_ORed_Message_buffer_IRQHandler      0x000004fd   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Bus_Off_IRQHandler                  0x00000501   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Error_IRQHandler                    0x00000505   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Tx_Warning_IRQHandler               0x00000509   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Rx_Warning_IRQHandler               0x0000050d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Wake_Up_IRQHandler                  0x00000511   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_IRQHandler                          0x00000515   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_1588_Timer_IRQHandler               0x00000519   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Transmit_IRQHandler                 0x0000051d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Receive_IRQHandler                  0x00000521   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Error_IRQHandler                    0x00000525   Thumb Code     4  startup_mk64f12.o(.text)
    __aeabi_uldivmod                         0x00000601   Thumb Code    98  uldiv.o(.text)
    __aeabi_ldivmod                          0x00000663   Thumb Code    98  ldiv.o(.text)
    ____aeabi_memcpy4$ret$move               0x000006c5   Thumb Code     0  memmove.o(.text)
    ____aeabi_memcpy8$ret$move               0x000006c5   Thumb Code     0  memmove.o(.text)
    ___aeabi_memmove$ret                     0x000006c5   Thumb Code     0  memmove.o(.text)
    ___aeabi_memmove4$ret                    0x000006c5   Thumb Code     0  memmove.o(.text)
    ___aeabi_memmove8$ret                    0x000006c5   Thumb Code     0  memmove.o(.text)
    __aeabi_memcpy                           0x000006c5   Thumb Code    66  memmove.o(.text)
    memcpy                                   0x000006c5   Thumb Code     0  memmove.o(.text)
    memmove                                  0x000006c5   Thumb Code     0  memmove.o(.text)
    __aeabi_memset                           0x00000707   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000707   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000707   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000715   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000715   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000715   Thumb Code     0  memseta.o(.text)
    memset                                   0x00000719   Thumb Code    18  memseta.o(.text)
    strlen                                   0x0000072b   Thumb Code    14  strlen.o(.text)
    memcmp                                   0x00000739   Thumb Code    26  memcmp.o(.text)
    __aeabi_llsl                             0x00000753   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000753   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000771   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00000771   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x00000791   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000791   Thumb Code     0  init.o(.text)
    BOARD_BootClockRUN                       0x000007b5   Thumb Code    88  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_InitBootClocks                     0x0000080d   Thumb Code     8  clock_config.o(.text.BOARD_InitBootClocks)
    BOARD_InitBootPins                       0x00000815   Thumb Code     8  pin_mux.o(.text.BOARD_InitBootPins)
    BOARD_InitDebugConsole                   0x0000081d   Thumb Code    22  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x00000835   Thumb Code   214  pin_mux.o(.text.BOARD_InitPins)
    CLOCK_BootToPeeMode                      0x0000090d   Thumb Code    74  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    CLOCK_EnablePll0                         0x000009d5   Thumb Code    80  fsl_clock.o(.text.CLOCK_EnablePll0)
    CLOCK_GetCoreSysClkFreq                  0x00000a25   Thumb Code    28  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    CLOCK_GetEr32kClkFreq                    0x00000a41   Thumb Code    92  fsl_clock.o(.text.CLOCK_GetEr32kClkFreq)
    CLOCK_GetFixedFreqClkFreq                0x00000aad   Thumb Code    30  fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq)
    CLOCK_GetFllFreq                         0x00000b31   Thumb Code    64  fsl_clock.o(.text.CLOCK_GetFllFreq)
    CLOCK_GetFreq                            0x00000ba5   Thumb Code   184  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_GetInternalRefClkFreq              0x00000c5d   Thumb Code    24  fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq)
    CLOCK_GetOsc0ErClkFreq                   0x00000d39   Thumb Code    60  fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq)
    CLOCK_GetOutClkFreq                      0x00000da1   Thumb Code    48  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    CLOCK_GetPll0Freq                        0x00000dd1   Thumb Code    68  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    CLOCK_GetPllFllSelClkFreq                0x00000e29   Thumb Code    52  fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq)
    CLOCK_InitOsc0                           0x00000e5d   Thumb Code    88  fsl_clock.o(.text.CLOCK_InitOsc0)
    CLOCK_SetExternalRefClkConfig            0x00000ec9   Thumb Code    58  fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig)
    CLOCK_SetInternalRefClkConfig            0x00000f05   Thumb Code   146  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    CLOCK_SetPbeMode                         0x00000f99   Thumb Code   114  fsl_clock.o(.text.CLOCK_SetPbeMode)
    CLOCK_SetSimConfig                       0x00001021   Thumb Code    30  fsl_clock.o(.text.CLOCK_SetSimConfig)
    DbgConsole_Init                          0x0000113d   Thumb Code   146  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x00001215   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_SendDataReliable              0x00001235   Thumb Code    62  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    DbgConsole_Vprintf                       0x00001275   Thumb Code    66  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    ENET_1588_Timer_DriverIRQHandler         0x000012d1   Thumb Code    18  fsl_enet.o(.text.ENET_1588_Timer_DriverIRQHandler)
    ENET_ErrIRQHandler                       0x00001371   Thumb Code    40  fsl_enet.o(.text.ENET_ErrIRQHandler)
    ENET_ErrorIRQHandler                     0x00001399   Thumb Code   128  fsl_enet.o(.text.ENET_ErrorIRQHandler)
    ENET_Error_DriverIRQHandler              0x00001419   Thumb Code    18  fsl_enet.o(.text.ENET_Error_DriverIRQHandler)
    ENET_GetDefaultConfig                    0x0000142d   Thumb Code    54  fsl_enet.o(.text.ENET_GetDefaultConfig)
    ENET_GetInstance                         0x00001465   Thumb Code    48  fsl_enet.o(.text.ENET_GetInstance)
    ENET_GetRxFrame                          0x000014bd   Thumb Code   676  fsl_enet.o(.text.ENET_GetRxFrame)
    ENET_Init                                0x00001849   Thumb Code    58  fsl_enet.o(.text.ENET_Init)
    ENET_Ptp1588IRQHandler                   0x00001981   Thumb Code     8  fsl_enet.o(.text.ENET_Ptp1588IRQHandler)
    ENET_ReceiveIRQHandler                   0x00001991   Thumb Code    92  fsl_enet.o(.text.ENET_ReceiveIRQHandler)
    ENET_Receive_DriverIRQHandler            0x000019ed   Thumb Code    18  fsl_enet.o(.text.ENET_Receive_DriverIRQHandler)
    ENET_ReclaimTxDescriptor                 0x00001a01   Thumb Code   232  fsl_enet.o(.text.ENET_ReclaimTxDescriptor)
    ENET_RxIRQHandler                        0x00001c85   Thumb Code    40  fsl_enet.o(.text.ENET_RxIRQHandler)
    ENET_SendFrame                           0x00001cad   Thumb Code   612  fsl_enet.o(.text.ENET_SendFrame)
    ENET_SetErrISRHandler                    0x00001f11   Thumb Code    26  fsl_enet.o(.text.ENET_SetErrISRHandler)
    ENET_SetMacAddr                          0x0000203d   Thumb Code    24  fsl_enet.o(.text.ENET_SetMacAddr)
    ENET_SetRxISRHandler                     0x000022d1   Thumb Code    26  fsl_enet.o(.text.ENET_SetRxISRHandler)
    ENET_SetSMI                              0x000022ed   Thumb Code   116  fsl_enet.o(.text.ENET_SetSMI)
    ENET_SetTxISRHandler                     0x00002469   Thumb Code    26  fsl_enet.o(.text.ENET_SetTxISRHandler)
    ENET_StartSMIRead                        0x00002485   Thumb Code    32  fsl_enet.o(.text.ENET_StartSMIRead)
    ENET_StartSMIWrite                       0x000024a5   Thumb Code    42  fsl_enet.o(.text.ENET_StartSMIWrite)
    ENET_TransmitIRQHandler                  0x000024d1   Thumb Code   116  fsl_enet.o(.text.ENET_TransmitIRQHandler)
    ENET_Transmit_DriverIRQHandler           0x00002545   Thumb Code    18  fsl_enet.o(.text.ENET_Transmit_DriverIRQHandler)
    ENET_TxIRQHandler                        0x00002565   Thumb Code    40  fsl_enet.o(.text.ENET_TxIRQHandler)
    ENET_Up                                  0x0000258d   Thumb Code   232  fsl_enet.o(.text.ENET_Up)
    HAL_UartInit                             0x00002699   Thumb Code   228  fsl_adapter_uart.o(.text.HAL_UartInit)
    HAL_UartSendBlocking                     0x00002785   Thumb Code   102  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    PHY_KSZ8081_EnableLoopback               0x00002875   Thumb Code   224  fsl_phyksz8081.o(.text.PHY_KSZ8081_EnableLoopback)
    PHY_KSZ8081_GetAutoNegotiationStatus     0x00002985   Thumb Code    68  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetAutoNegotiationStatus)
    PHY_KSZ8081_GetLinkSpeedDuplex           0x000029c9   Thumb Code    92  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkSpeedDuplex)
    PHY_KSZ8081_GetLinkStatus                0x00002a4d   Thumb Code    62  fsl_phyksz8081.o(.text.PHY_KSZ8081_GetLinkStatus)
    PHY_KSZ8081_Init                         0x00002a8d   Thumb Code   196  fsl_phyksz8081.o(.text.PHY_KSZ8081_Init)
    PHY_KSZ8081_Read                         0x00002b71   Thumb Code    20  fsl_phyksz8081.o(.text.PHY_KSZ8081_Read)
    PHY_KSZ8081_SetLinkSpeedDuplex           0x00002b85   Thumb Code    96  fsl_phyksz8081.o(.text.PHY_KSZ8081_SetLinkSpeedDuplex)
    PHY_KSZ8081_Write                        0x00002be5   Thumb Code    20  fsl_phyksz8081.o(.text.PHY_KSZ8081_Write)
    PendSV_Handler                           0x00002c71   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00003071   Thumb Code    36  port.o(.text.SVC_Handler)
    SerialManager_Init                       0x00003095   Thumb Code    54  fsl_component_serial_manager.o(.text.SerialManager_Init)
    SerialManager_OpenReadHandle             0x000030cd   Thumb Code    62  fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle)
    SerialManager_OpenWriteHandle            0x0000310d   Thumb Code    46  fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle)
    SerialManager_WriteBlocking              0x00003175   Thumb Code     8  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    Serial_UartInit                          0x0000317d   Thumb Code    30  fsl_component_serial_port_uart.o(.text.Serial_UartInit)
    Serial_UartWrite                         0x0000319d   Thumb Code    26  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    StrFormatPrintf                          0x000031b9   Thumb Code   744  fsl_str.o(.text.StrFormatPrintf)
    SysTick_Handler                          0x000034a1   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x000034d1   Thumb Code    52  system_mk64f12.o(.text.SystemInit)
    SystemInitHook                           0x00003505   Thumb Code     2  system_mk64f12.o(.text.SystemInitHook)
    UART0_DriverIRQHandler                   0x00003509   Thumb Code    38  fsl_uart.o(.text.UART0_DriverIRQHandler)
    UART0_RX_TX_DriverIRQHandler             0x00003531   Thumb Code    12  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    UART1_DriverIRQHandler                   0x0000353d   Thumb Code    38  fsl_uart.o(.text.UART1_DriverIRQHandler)
    UART1_RX_TX_DriverIRQHandler             0x00003565   Thumb Code    12  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    UART2_DriverIRQHandler                   0x00003571   Thumb Code    38  fsl_uart.o(.text.UART2_DriverIRQHandler)
    UART2_RX_TX_DriverIRQHandler             0x00003599   Thumb Code    12  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    UART3_DriverIRQHandler                   0x000035a5   Thumb Code    38  fsl_uart.o(.text.UART3_DriverIRQHandler)
    UART3_RX_TX_DriverIRQHandler             0x000035cd   Thumb Code    12  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    UART4_DriverIRQHandler                   0x000035d9   Thumb Code    38  fsl_uart.o(.text.UART4_DriverIRQHandler)
    UART4_RX_TX_DriverIRQHandler             0x00003601   Thumb Code    12  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    UART5_DriverIRQHandler                   0x0000360d   Thumb Code    38  fsl_uart.o(.text.UART5_DriverIRQHandler)
    UART5_RX_TX_DriverIRQHandler             0x00003635   Thumb Code    12  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    UART_GetDefaultConfig                    0x00003641   Thumb Code    56  fsl_uart.o(.text.UART_GetDefaultConfig)
    UART_GetInstance                         0x00003679   Thumb Code    40  fsl_uart.o(.text.UART_GetInstance)
    UART_Init                                0x000036d5   Thumb Code   428  fsl_uart.o(.text.UART_Init)
    UART_WriteBlocking                       0x000038ad   Thumb Code    34  fsl_uart.o(.text.UART_WriteBlocking)
    __aeabi_assert                           0x000038f9   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    dhcp_coarse_tmr                          0x00003b79   Thumb Code   108  dhcp.o(.text.dhcp_coarse_tmr)
    dhcp_fine_tmr                            0x00003ed1   Thumb Code    60  dhcp.o(.text.dhcp_fine_tmr)
    dhcp_release_and_stop                    0x0000489d   Thumb Code   216  dhcp.o(.text.dhcp_release_and_stop)
    dhcp_renew                               0x00004975   Thumb Code   238  dhcp.o(.text.dhcp_renew)
    dhcp_start                               0x00004c1d   Thumb Code   144  dhcp.o(.text.dhcp_start)
    dhcp_supplied_address                    0x00004cd1   Thumb Code    46  dhcp.o(.text.dhcp_supplied_address)
    etharp_input                             0x000051b9   Thumb Code   208  etharp.o(.text.etharp_input)
    etharp_output                            0x0000528d   Thumb Code   316  etharp.o(.text.etharp_output)
    etharp_query                             0x00005475   Thumb Code   420  etharp.o(.text.etharp_query)
    etharp_request                           0x00005771   Thumb Code    16  etharp.o(.text.etharp_request)
    etharp_tmr                               0x000057ad   Thumb Code   110  etharp.o(.text.etharp_tmr)
    ethernet_input                           0x0000593d   Thumb Code   164  ethernet.o(.text.ethernet_input)
    ethernet_output                          0x000059e1   Thumb Code    96  ethernet.o(.text.ethernet_output)
    ethernetif0_init                         0x00005a75   Thumb Code    72  enet_ethernetif_kinetis.o(.text.ethernetif0_init)
    ethernetif_enet_init                     0x00005abd   Thumb Code   296  enet_ethernetif_kinetis.o(.text.ethernetif_enet_init)
    ethernetif_enet_ptr                      0x00005c01   Thumb Code     2  enet_ethernetif_kinetis.o(.text.ethernetif_enet_ptr)
    ethernetif_get_enet_base                 0x00005c05   Thumb Code    16  enet_ethernetif.o(.text.ethernetif_get_enet_base)
    ethernetif_init                          0x00005c15   Thumb Code   144  enet_ethernetif.o(.text.ethernetif_init)
    ethernetif_input                         0x00005ced   Thumb Code    68  enet_ethernetif.o(.text.ethernetif_input)
    ethernetif_linkinput                     0x00005d31   Thumb Code    76  enet_ethernetif_kinetis.o(.text.ethernetif_linkinput)
    ethernetif_linkoutput                    0x00005d95   Thumb Code   100  enet_ethernetif_kinetis.o(.text.ethernetif_linkoutput)
    ethernetif_phy_init                      0x00005e15   Thumb Code   228  enet_ethernetif.o(.text.ethernetif_phy_init)
    icmp_dest_unreach                        0x000060d5   Thumb Code    12  icmp.o(.text.icmp_dest_unreach)
    icmp_input                               0x000060e1   Thumb Code   328  icmp.o(.text.icmp_input)
    icmp_time_exceeded                       0x00006355   Thumb Code    12  icmp.o(.text.icmp_time_exceeded)
    inet_chksum                              0x00006361   Thumb Code    14  inet_chksum.o(.text.inet_chksum)
    inet_chksum_pbuf                         0x00006371   Thumb Code    82  inet_chksum.o(.text.inet_chksum_pbuf)
    inet_chksum_pseudo                       0x000063c5   Thumb Code    46  inet_chksum.o(.text.inet_chksum_pseudo)
    ip4_addr_isbroadcast_u32                 0x00006469   Thumb Code    52  ip4_addr.o(.text.ip4_addr_isbroadcast_u32)
    ip4_frag                                 0x0000649d   Thumb Code   492  ip4_frag.o(.text.ip4_frag)
    ip4_input                                0x000066d9   Thumb Code   454  ip4.o(.text.ip4_input)
    ip4_output_if                            0x000068cd   Thumb Code    48  ip4.o(.text.ip4_output_if)
    ip4_output_if_src                        0x000068fd   Thumb Code   264  ip4.o(.text.ip4_output_if_src)
    ip4_reass                                0x00006a35   Thumb Code   488  ip4_frag.o(.text.ip4_reass)
    ip4_route                                0x00006c65   Thumb Code   104  ip4.o(.text.ip4_route)
    ip_chksum_pseudo                         0x00006ccd   Thumb Code    20  inet_chksum.o(.text.ip_chksum_pseudo)
    ip_reass_tmr                             0x000071bd   Thumb Code    54  ip4_frag.o(.text.ip_reass_tmr)
    lwip_htonl                               0x00007255   Thumb Code     4  def.o(.text.lwip_htonl)
    lwip_htons                               0x00007259   Thumb Code     4  def.o(.text.lwip_htons)
    lwip_init                                0x0000725d   Thumb Code    32  init.o(.text.lwip_init)
    lwip_netconn_do_accepted                 0x0000727d   Thumb Code    32  api_msg.o(.text.lwip_netconn_do_accepted)
    lwip_netconn_do_bind                     0x0000729d   Thumb Code    56  api_msg.o(.text.lwip_netconn_do_bind)
    lwip_netconn_do_close                    0x000072d5   Thumb Code   164  api_msg.o(.text.lwip_netconn_do_close)
    lwip_netconn_do_delconn                  0x000075e1   Thumb Code   228  api_msg.o(.text.lwip_netconn_do_delconn)
    lwip_netconn_do_listen                   0x000076d9   Thumb Code   220  api_msg.o(.text.lwip_netconn_do_listen)
    lwip_netconn_do_newconn                  0x000077e5   Thumb Code    20  api_msg.o(.text.lwip_netconn_do_newconn)
    lwip_netconn_do_recv                     0x000077f9   Thumb Code    60  api_msg.o(.text.lwip_netconn_do_recv)
    lwip_netconn_do_write                    0x00007835   Thumb Code   160  api_msg.o(.text.lwip_netconn_do_write)
    lwip_netconn_is_err_msg                  0x00007c11   Thumb Code    72  api_msg.o(.text.lwip_netconn_is_err_msg)
    lwip_standard_chksum                     0x00007c65   Thumb Code    96  inet_chksum.o(.text.lwip_standard_chksum)
    main                                     0x00007cc5   Thumb Code    80  lwip_tcpecho_freertos.o(.text.main)
    mem_free                                 0x00007d3d   Thumb Code   168  mem.o(.text.mem_free)
    mem_init                                 0x00007e65   Thumb Code   104  mem.o(.text.mem_init)
    mem_malloc                               0x00007f49   Thumb Code   344  mem.o(.text.mem_malloc)
    mem_trim                                 0x00008121   Thumb Code   376  mem.o(.text.mem_trim)
    memp_free                                0x000082d1   Thumb Code    52  memp.o(.text.memp_free)
    memp_init                                0x00008321   Thumb Code    32  memp.o(.text.memp_init)
    memp_init_pool                           0x00008341   Thumb Code    54  memp.o(.text.memp_init_pool)
    memp_malloc                              0x00008379   Thumb Code    48  memp.o(.text.memp_malloc)
    netbuf_data                              0x000083c9   Thumb Code    68  netbuf.o(.text.netbuf_data)
    netbuf_delete                            0x00008465   Thumb Code    38  netbuf.o(.text.netbuf_delete)
    netbuf_next                              0x0000848d   Thumb Code    48  netbuf.o(.text.netbuf_next)
    netconn_accept                           0x000084d9   Thumb Code   196  api_lib.o(.text.netconn_accept)
    netconn_alloc                            0x000085dd   Thumb Code   124  api_msg.o(.text.netconn_alloc)
    netconn_bind                             0x0000869d   Thumb Code    72  api_lib.o(.text.netconn_bind)
    netconn_close                            0x00008701   Thumb Code    10  api_lib.o(.text.netconn_close)
    netconn_delete                           0x00008765   Thumb Code    32  api_lib.o(.text.netconn_delete)
    netconn_err                              0x00008849   Thumb Code    28  api_lib.o(.text.netconn_err)
    netconn_free                             0x00008865   Thumb Code    64  api_msg.o(.text.netconn_free)
    netconn_listen_with_backlog              0x00008911   Thumb Code    56  api_lib.o(.text.netconn_listen_with_backlog)
    netconn_new_with_proto_and_callback      0x00008969   Thumb Code   116  api_lib.o(.text.netconn_new_with_proto_and_callback)
    netconn_prepare_delete                   0x00008a59   Thumb Code    38  api_lib.o(.text.netconn_prepare_delete)
    netconn_recv                             0x00008a81   Thumb Code   172  api_lib.o(.text.netconn_recv)
    netconn_write_partly                     0x00008d1d   Thumb Code    28  api_lib.o(.text.netconn_write_partly)
    netconn_write_vectors_partly             0x00008d39   Thumb Code   236  api_lib.o(.text.netconn_write_vectors_partly)
    netif_add                                0x00008e89   Thumb Code   324  netif.o(.text.netif_add)
    netif_get_by_index                       0x000090e5   Thumb Code    58  netif.o(.text.netif_get_by_index)
    netif_init                               0x00009121   Thumb Code     2  netif.o(.text.netif_init)
    netif_set_addr                           0x00009189   Thumb Code   106  netif.o(.text.netif_set_addr)
    netif_set_default                        0x000091f5   Thumb Code    20  netif.o(.text.netif_set_default)
    netif_set_up                             0x00009209   Thumb Code    60  netif.o(.text.netif_set_up)
    netifapi_netif_add                       0x000092a9   Thumb Code    66  netifapi.o(.text.netifapi_netif_add)
    netifapi_netif_common                    0x000092ed   Thumb Code    26  netifapi.o(.text.netifapi_netif_common)
    pbuf_add_header                          0x00009309   Thumb Code    10  pbuf.o(.text.pbuf_add_header)
    pbuf_alloc                               0x00009385   Thumb Code   340  pbuf.o(.text.pbuf_alloc)
    pbuf_alloc_reference                     0x00009551   Thumb Code    64  pbuf.o(.text.pbuf_alloc_reference)
    pbuf_alloced_custom                      0x000095a5   Thumb Code    60  pbuf.o(.text.pbuf_alloced_custom)
    pbuf_cat                                 0x000095e1   Thumb Code    92  pbuf.o(.text.pbuf_cat)
    pbuf_chain                               0x000096b5   Thumb Code    16  pbuf.o(.text.pbuf_chain)
    pbuf_clen                                0x000096c5   Thumb Code    16  pbuf.o(.text.pbuf_clen)
    pbuf_clone                               0x000096d5   Thumb Code    40  pbuf.o(.text.pbuf_clone)
    pbuf_copy                                0x00009711   Thumb Code    40  pbuf.o(.text.pbuf_copy)
    pbuf_copy_partial                        0x00009755   Thumb Code   156  pbuf.o(.text.pbuf_copy_partial)
    pbuf_copy_partial_pbuf                   0x00009835   Thumb Code   276  pbuf.o(.text.pbuf_copy_partial_pbuf)
    pbuf_free                                0x0000999d   Thumb Code   168  pbuf.o(.text.pbuf_free)
    pbuf_header_force                        0x00009a95   Thumb Code    10  pbuf.o(.text.pbuf_header_force)
    pbuf_realloc                             0x00009ad9   Thumb Code   156  pbuf.o(.text.pbuf_realloc)
    pbuf_ref                                 0x00009bdd   Thumb Code    36  pbuf.o(.text.pbuf_ref)
    pbuf_remove_header                       0x00009c15   Thumb Code    92  pbuf.o(.text.pbuf_remove_header)
    pvPortMalloc                             0x0000a7e1   Thumb Code    24  heap_3.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x0000a7f9   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x0000a811   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    sys_arch_mbox_fetch                      0x0000ac7d   Thumb Code    94  sys_arch.o(.text.sys_arch_mbox_fetch)
    sys_arch_mbox_tryfetch                   0x0000acdd   Thumb Code    32  sys_arch.o(.text.sys_arch_mbox_tryfetch)
    sys_arch_protect                         0x0000acfd   Thumb Code    38  sys_arch.o(.text.sys_arch_protect)
    sys_arch_sem_wait                        0x0000ad25   Thumb Code    66  sys_arch.o(.text.sys_arch_sem_wait)
    sys_arch_unprotect                       0x0000ad69   Thumb Code    20  sys_arch.o(.text.sys_arch_unprotect)
    sys_assert                               0x0000ad7d   Thumb Code    20  sys_arch.o(.text.sys_assert)
    sys_check_core_locking                   0x0000ad95   Thumb Code    68  sys_arch.o(.text.sys_check_core_locking)
    sys_check_timeouts                       0x0000ae25   Thumb Code    82  timeouts.o(.text.sys_check_timeouts)
    sys_init                                 0x0000ae79   Thumb Code     2  sys_arch.o(.text.sys_init)
    sys_lock_tcpip_core                      0x0000ae7d   Thumb Code    48  sys_arch.o(.text.sys_lock_tcpip_core)
    sys_mark_tcpip_thread                    0x0000aead   Thumb Code    18  sys_arch.o(.text.sys_mark_tcpip_thread)
    sys_mbox_free                            0x0000aec1   Thumb Code    38  sys_arch.o(.text.sys_mbox_free)
    sys_mbox_new                             0x0000aee9   Thumb Code    32  sys_arch.o(.text.sys_mbox_new)
    sys_mbox_trypost                         0x0000af09   Thumb Code    96  sys_arch.o(.text.sys_mbox_trypost)
    sys_mutex_lock                           0x0000af69   Thumb Code    20  sys_arch.o(.text.sys_mutex_lock)
    sys_mutex_new                            0x0000af7d   Thumb Code    26  sys_arch.o(.text.sys_mutex_new)
    sys_mutex_unlock                         0x0000af99   Thumb Code    16  sys_arch.o(.text.sys_mutex_unlock)
    sys_now                                  0x0000afa9   Thumb Code     8  sys_arch.o(.text.sys_now)
    sys_sem_free                             0x0000afb1   Thumb Code    10  sys_arch.o(.text.sys_sem_free)
    sys_sem_new                              0x0000afbd   Thumb Code    54  sys_arch.o(.text.sys_sem_new)
    sys_sem_signal                           0x0000aff5   Thumb Code    16  sys_arch.o(.text.sys_sem_signal)
    sys_thread_new                           0x0000b005   Thumb Code    56  sys_arch.o(.text.sys_thread_new)
    sys_timeout                              0x0000b069   Thumb Code    40  timeouts.o(.text.sys_timeout)
    sys_timeouts_init                        0x0000b159   Thumb Code    40  timeouts.o(.text.sys_timeouts_init)
    sys_timeouts_sleeptime                   0x0000b181   Thumb Code    40  timeouts.o(.text.sys_timeouts_sleeptime)
    sys_unlock_tcpip_core                    0x0000b1a9   Thumb Code    46  sys_arch.o(.text.sys_unlock_tcpip_core)
    tcp_abandon                              0x0000b1d9   Thumb Code   248  tcp.o(.text.tcp_abandon)
    tcp_abort                                0x0000b321   Thumb Code    10  tcp.o(.text.tcp_abort)
    tcp_accept                               0x0000b32d   Thumb Code    26  tcp.o(.text.tcp_accept)
    tcp_alloc                                0x0000b381   Thumb Code   196  tcp.o(.text.tcp_alloc)
    tcp_arg                                  0x0000b445   Thumb Code    18  tcp.o(.text.tcp_arg)
    tcp_backlog_accepted                     0x0000b459   Thumb Code    70  tcp.o(.text.tcp_backlog_accepted)
    tcp_backlog_delayed                      0x0000b4a1   Thumb Code    70  tcp.o(.text.tcp_backlog_delayed)
    tcp_bind                                 0x0000b4e9   Thumb Code   188  tcp.o(.text.tcp_bind)
    tcp_close                                0x0000b5e5   Thumb Code    60  tcp.o(.text.tcp_close)
    tcp_eff_send_mss_netif                   0x0000b925   Thumb Code    52  tcp.o(.text.tcp_eff_send_mss_netif)
    tcp_enqueue_flags                        0x0000b981   Thumb Code   272  tcp_out.o(.text.tcp_enqueue_flags)
    tcp_err                                  0x0000bb05   Thumb Code    36  tcp.o(.text.tcp_err)
    tcp_fasttmr                              0x0000bb51   Thumb Code   148  tcp.o(.text.tcp_fasttmr)
    tcp_free                                 0x0000bbe5   Thumb Code    28  tcp.o(.text.tcp_free)
    tcp_init                                 0x0000bdb9   Thumb Code     2  tcp.o(.text.tcp_init)
    tcp_input                                0x0000bdbd   Thumb Code  1376  tcp_in.o(.text.tcp_input)
    tcp_keepalive                            0x0000c40d   Thumb Code    60  tcp_out.o(.text.tcp_keepalive)
    tcp_listen_with_backlog_and_err          0x0000c74d   Thumb Code   228  tcp.o(.text.tcp_listen_with_backlog_and_err)
    tcp_netif_ip_addr_changed                0x0000c899   Thumb Code    88  tcp.o(.text.tcp_netif_ip_addr_changed)
    tcp_new_ip_type                          0x0000c951   Thumb Code    10  tcp.o(.text.tcp_new_ip_type)
    tcp_next_iss                             0x0000c9c9   Thumb Code    36  tcp.o(.text.tcp_next_iss)
    tcp_output                               0x0000ca09   Thumb Code   620  tcp_out.o(.text.tcp_output)
    tcp_pcb_purge                            0x0000d265   Thumb Code    96  tcp.o(.text.tcp_pcb_purge)
    tcp_pcb_remove                           0x0000d2e1   Thumb Code   128  tcp.o(.text.tcp_pcb_remove)
    tcp_poll                                 0x0000d3d1   Thumb Code    56  tcp.o(.text.tcp_poll)
    tcp_process_refused_data                 0x0000da59   Thumb Code   144  tcp.o(.text.tcp_process_refused_data)
    tcp_recv                                 0x0000e031   Thumb Code    36  tcp.o(.text.tcp_recv)
    tcp_recv_null                            0x0000e07d   Thumb Code    68  tcp.o(.text.tcp_recv_null)
    tcp_recved                               0x0000e0dd   Thumb Code   108  tcp.o(.text.tcp_recved)
    tcp_rexmit                               0x0000e1d9   Thumb Code   128  tcp_out.o(.text.tcp_rexmit)
    tcp_rexmit_fast                          0x0000e271   Thumb Code   100  tcp_out.o(.text.tcp_rexmit_fast)
    tcp_rexmit_rto                           0x0000e2f5   Thumb Code    32  tcp_out.o(.text.tcp_rexmit_rto)
    tcp_rexmit_rto_commit                    0x0000e331   Thumb Code    36  tcp_out.o(.text.tcp_rexmit_rto_commit)
    tcp_rexmit_rto_prepare                   0x0000e379   Thumb Code   124  tcp_out.o(.text.tcp_rexmit_rto_prepare)
    tcp_rst                                  0x0000e431   Thumb Code    48  tcp_out.o(.text.tcp_rst)
    tcp_rst_netif                            0x0000e4ed   Thumb Code    52  tcp_out.o(.text.tcp_rst_netif)
    tcp_seg_free                             0x0000e521   Thumb Code    34  tcp.o(.text.tcp_seg_free)
    tcp_segs_free                            0x0000e545   Thumb Code    22  tcp.o(.text.tcp_segs_free)
    tcp_send_empty_ack                       0x0000e55d   Thumb Code    84  tcp_out.o(.text.tcp_send_empty_ack)
    tcp_send_fin                             0x0000e5d1   Thumb Code    76  tcp_out.o(.text.tcp_send_fin)
    tcp_sent                                 0x0000e639   Thumb Code    32  tcp.o(.text.tcp_sent)
    tcp_shutdown                             0x0000e681   Thumb Code   128  tcp.o(.text.tcp_shutdown)
    tcp_slowtmr                              0x0000e71d   Thumb Code  1008  tcp.o(.text.tcp_slowtmr)
    tcp_split_unsent_seg                     0x0000eb99   Thumb Code   368  tcp_out.o(.text.tcp_split_unsent_seg)
    tcp_timer_needed                         0x0000ed71   Thumb Code    66  timeouts.o(.text.tcp_timer_needed)
    tcp_tmr                                  0x0000ee89   Thumb Code    30  tcp.o(.text.tcp_tmr)
    tcp_trigger_input_pcb_close              0x0000eea9   Thumb Code    18  tcp_in.o(.text.tcp_trigger_input_pcb_close)
    tcp_update_rcv_ann_wnd                   0x0000eebd   Thumb Code    80  tcp.o(.text.tcp_update_rcv_ann_wnd)
    tcp_write                                0x0000ef4d   Thumb Code  1476  tcp_out.o(.text.tcp_write)
    tcp_zero_window_probe                    0x0000f669   Thumb Code   184  tcp_out.o(.text.tcp_zero_window_probe)
    tcpecho_init                             0x0000f745   Thumb Code    36  tcpecho.o(.text.tcpecho_init)
    tcpip_api_call                           0x0000f871   Thumb Code    24  tcpip.o(.text.tcpip_api_call)
    tcpip_init                               0x0000f889   Thumb Code   104  tcpip.o(.text.tcpip_init)
    tcpip_inpkt                              0x0000f949   Thumb Code    96  tcpip.o(.text.tcpip_inpkt)
    tcpip_input                              0x0000f9a9   Thumb Code    36  tcpip.o(.text.tcpip_input)
    tcpip_send_msg_wait_sem                  0x0000f9cd   Thumb Code    22  tcpip.o(.text.tcpip_send_msg_wait_sem)
    udp_bind                                 0x0000fb11   Thumb Code   168  udp.o(.text.udp_bind)
    udp_connect                              0x0000fbd1   Thumb Code   120  udp.o(.text.udp_connect)
    udp_init                                 0x0000fc81   Thumb Code     2  udp.o(.text.udp_init)
    udp_input                                0x0000fc85   Thumb Code   452  udp.o(.text.udp_input)
    udp_netif_ip_addr_changed                0x0000ff6d   Thumb Code    62  udp.o(.text.udp_netif_ip_addr_changed)
    udp_new                                  0x0000ffad   Thumb Code    34  udp.o(.text.udp_new)
    udp_new_ip_type                          0x0000ffd1   Thumb Code    12  udp.o(.text.udp_new_ip_type)
    udp_recv                                 0x00010041   Thumb Code    44  udp.o(.text.udp_recv)
    udp_remove                               0x00010085   Thumb Code    76  udp.o(.text.udp_remove)
    udp_sendto_if                            0x000100e9   Thumb Code   160  udp.o(.text.udp_sendto_if)
    udp_sendto_if_src                        0x00010201   Thumb Code   384  udp.o(.text.udp_sendto_if_src)
    uxListRemove                             0x000103f9   Thumb Code    36  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x0001041d   Thumb Code    38  queue.o(.text.uxQueueMessagesWaiting)
    uxTaskResetEventItemValue                0x00010445   Thumb Code    26  tasks.o(.text.uxTaskResetEventItemValue)
    vEventGroupSetBitsCallback               0x00010461   Thumb Code     8  event_groups.o(.text.vEventGroupSetBitsCallback)
    vListInitialise                          0x00010469   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00010481   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00010489   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x000104c5   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000104f5   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0001053d   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x0001056d   Thumb Code    30  heap_3.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x0001058d   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x000105c1   Thumb Code    98  port.o(.text.vPortValidateInterruptPriority)
    vQueueAddToRegistry                      0x00010625   Thumb Code    40  queue.o(.text.vQueueAddToRegistry)
    vQueueDelete                             0x0001064d   Thumb Code    38  queue.o(.text.vQueueDelete)
    vQueueUnregisterQueue                    0x00010675   Thumb Code    42  queue.o(.text.vQueueUnregisterQueue)
    vQueueWaitForMessageRestricted           0x000106a1   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelete                              0x000106e5   Thumb Code   246  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x000107dd   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000107f9   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00010809   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0001083d   Thumb Code    62  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPlaceOnUnorderedEventList           0x0001087d   Thumb Code    90  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    vTaskPriorityDisinheritAfterTimeout      0x000108d9   Thumb Code   186  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskRemoveFromUnorderedEventList        0x00010995   Thumb Code   150  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    vTaskStartScheduler                      0x00010a2d   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x00010ac9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00010ad9   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xEventGroupCreate                        0x00010b61   Thumb Code    28  event_groups.o(.text.xEventGroupCreate)
    xEventGroupSetBits                       0x00010b7d   Thumb Code   158  event_groups.o(.text.xEventGroupSetBits)
    xEventGroupSetBitsFromISR                0x00010c1d   Thumb Code    22  event_groups.o(.text.xEventGroupSetBitsFromISR)
    xEventGroupWaitBits                      0x00010c35   Thumb Code   288  event_groups.o(.text.xEventGroupWaitBits)
    xPortStartScheduler                      0x00010d55   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueCreateCountingSemaphore            0x00010e69   Thumb Code    66  queue.o(.text.xQueueCreateCountingSemaphore)
    xQueueCreateMutex                        0x00010ead   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00010ec5   Thumb Code   112  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00010f35   Thumb Code   126  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00010fb5   Thumb Code   418  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00011159   Thumb Code   232  queue.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x00011241   Thumb Code   388  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x000113c5   Thumb Code   454  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x0001158d   Thumb Code   140  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00011619   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetCurrentTaskHandle                0x00011679   Thumb Code    12  tasks.o(.text.xTaskGetCurrentTaskHandle)
    xTaskGetSchedulerState                   0x00011685   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000116ad   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000116b9   Thumb Code   328  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00011801   Thumb Code   170  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x000118ad   Thumb Code   170  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00011959   Thumb Code   144  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000119e9   Thumb Code   280  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00011b01   Thumb Code    88  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00011b61   Thumb Code   104  timers.o(.text.xTimerGenericCommand)
    xTimerPendFunctionCallFromISR            0x00011bc9   Thumb Code    42  timers.o(.text.xTimerPendFunctionCallFromISR)
    free                                     0x00011bf5   Thumb Code    76  malloc2.o(i.__free$2region)
    malloc                                   0x00011c45   Thumb Code    92  malloc2.o(i.__malloc$2region)
    __scatterload_copy                       0x00011cb1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00011cbf   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00011cc1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    enet_ops                                 0x00011ce0   Data          20  fsl_enet_mdio.o(.rodata.enet_ops)
    ethbroadcast                             0x00011cf4   Data           6  ethernet.o(.rodata.ethbroadcast)
    ethzero                                  0x00011cfa   Data           6  ethernet.o(.rodata.ethzero)
    ip_addr_any                              0x00011d00   Data           4  ip4_addr.o(.rodata.ip_addr_any)
    ip_addr_broadcast                        0x00011d04   Data           4  ip4_addr.o(.rodata.ip_addr_broadcast)
    lwip_cyclic_timers                       0x00011d08   Data          40  timeouts.o(.rodata.lwip_cyclic_timers)
    mcgConfig_BOARD_BootClockRUN             0x00011d30   Data          11  clock_config.o(.rodata.mcgConfig_BOARD_BootClockRUN)
    memp_FRAG_PBUF                           0x00011d3c   Data          16  memp.o(.rodata.memp_FRAG_PBUF)
    memp_NETBUF                              0x00011d4c   Data          16  memp.o(.rodata.memp_NETBUF)
    memp_NETCONN                             0x00011d5c   Data          16  memp.o(.rodata.memp_NETCONN)
    memp_PBUF                                0x00011d6c   Data          16  memp.o(.rodata.memp_PBUF)
    memp_PBUF_POOL                           0x00011d7c   Data          16  memp.o(.rodata.memp_PBUF_POOL)
    memp_REASSDATA                           0x00011d8c   Data          16  memp.o(.rodata.memp_REASSDATA)
    memp_SYS_TIMEOUT                         0x00011d9c   Data          16  memp.o(.rodata.memp_SYS_TIMEOUT)
    memp_TCPIP_MSG_API                       0x00011dac   Data          16  memp.o(.rodata.memp_TCPIP_MSG_API)
    memp_TCPIP_MSG_INPKT                     0x00011dbc   Data          16  memp.o(.rodata.memp_TCPIP_MSG_INPKT)
    memp_TCP_PCB                             0x00011dcc   Data          16  memp.o(.rodata.memp_TCP_PCB)
    memp_TCP_PCB_LISTEN                      0x00011ddc   Data          16  memp.o(.rodata.memp_TCP_PCB_LISTEN)
    memp_TCP_SEG                             0x00011dec   Data          16  memp.o(.rodata.memp_TCP_SEG)
    memp_UDP_PCB                             0x00011dfc   Data          16  memp.o(.rodata.memp_UDP_PCB)
    memp_pools                               0x00011e0c   Data          52  memp.o(.rodata.memp_pools)
    netconn_aborted                          0x00011e40   Data           1  api_msg.o(.rodata.netconn_aborted)
    netconn_closed                           0x00011e41   Data           1  api_msg.o(.rodata.netconn_closed)
    netconn_reset                            0x00011e42   Data           1  api_msg.o(.rodata.netconn_reset)
    oscConfig_BOARD_BootClockRUN             0x00011e44   Data           8  clock_config.o(.rodata.oscConfig_BOARD_BootClockRUN)
    phyksz8081_ops                           0x00011e4c   Data          32  fsl_phyksz8081.o(.rodata.phyksz8081_ops)
    s_enetClock                              0x00011e84   Data           4  fsl_enet.o(.rodata.s_enetClock)
    simConfig_BOARD_BootClockRUN             0x00011ea0   Data           8  clock_config.o(.rodata.simConfig_BOARD_BootClockRUN)
    tcp_pcb_lists                            0x00012cdc   Data          16  tcp.o(.rodata.tcp_pcb_lists)
    uxTopUsedPriority                        0x00012cec   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00012cf0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00012d10   Number         0  anon$$obj.o(Region$$Table)
    __microlib_freelist                      0x20000000   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x20000004   Data           4  mvars.o(.data)
    SystemCoreClock                          0x20000008   Data           4  system_mk64f12.o(.data.SystemCoreClock)
    s_uartIsr                                0x20000030   Data           4  fsl_uart.o(.data.s_uartIsr)
    dhcp_rx_options_given                    0x2000013d   Data           8  dhcp.o(.bss.dhcp_rx_options_given)
    dhcp_rx_options_val                      0x20000148   Data          32  dhcp.o(.bss.dhcp_rx_options_val)
    g_serialHandle                           0x200056c4   Data           4  fsl_debug_console.o(.bss.g_serialHandle)
    g_xtal0Freq                              0x200056c8   Data           4  fsl_clock.o(.bss.g_xtal0Freq)
    g_xtal32Freq                             0x200056cc   Data           4  fsl_clock.o(.bss.g_xtal32Freq)
    ip_data                                  0x200056dc   Data          24  ip.o(.bss.ip_data)
    lock_tcpip_core                          0x200056fc   Data           4  tcpip.o(.bss.lock_tcpip_core)
    memp_memory_FRAG_PBUF_base               0x20005710   Data         363  memp.o(.bss.memp_memory_FRAG_PBUF_base)
    memp_memory_NETBUF_base                  0x2000587b   Data          35  memp.o(.bss.memp_memory_NETBUF_base)
    memp_memory_NETCONN_base                 0x2000589e   Data         179  memp.o(.bss.memp_memory_NETCONN_base)
    memp_memory_PBUF_POOL_base               0x20005951   Data        7663  memp.o(.bss.memp_memory_PBUF_POOL_base)
    memp_memory_PBUF_base                    0x20007740   Data         243  memp.o(.bss.memp_memory_PBUF_base)
    memp_memory_REASSDATA_base               0x20007833   Data         163  memp.o(.bss.memp_memory_REASSDATA_base)
    memp_memory_SYS_TIMEOUT_base             0x200078d6   Data         163  memp.o(.bss.memp_memory_SYS_TIMEOUT_base)
    memp_memory_TCPIP_MSG_API_base           0x20007979   Data         131  memp.o(.bss.memp_memory_TCPIP_MSG_API_base)
    memp_memory_TCPIP_MSG_INPKT_base         0x200079fc   Data         131  memp.o(.bss.memp_memory_TCPIP_MSG_INPKT_base)
    memp_memory_TCP_PCB_LISTEN_base          0x20007a7f   Data         195  memp.o(.bss.memp_memory_TCP_PCB_LISTEN_base)
    memp_memory_TCP_PCB_base                 0x20007b42   Data        1523  memp.o(.bss.memp_memory_TCP_PCB_base)
    memp_memory_TCP_SEG_base                 0x20008135   Data         443  memp.o(.bss.memp_memory_TCP_SEG_base)
    memp_memory_UDP_PCB_base                 0x200082f0   Data         195  memp.o(.bss.memp_memory_UDP_PCB_base)
    netif_default                            0x200083e8   Data           4  netif.o(.bss.netif_default)
    netif_list                               0x200083ec   Data           4  netif.o(.bss.netif_list)
    pxCurrentTCB                             0x200083fc   Data           4  tasks.o(.bss.pxCurrentTCB)
    ram_heap                                 0x20008580   Data       22547  mem.o(.bss.ram_heap)
    s_uartHandle                             0x2000ddd8   Data          24  fsl_uart.o(.bss.s_uartHandle)
    tcp_active_pcbs                          0x2000de28   Data           4  tcp.o(.bss.tcp_active_pcbs)
    tcp_active_pcbs_changed                  0x2000de2c   Data           1  tcp.o(.bss.tcp_active_pcbs_changed)
    tcp_bound_pcbs                           0x2000de30   Data           4  tcp.o(.bss.tcp_bound_pcbs)
    tcp_input_pcb                            0x2000de34   Data           4  tcp_in.o(.bss.tcp_input_pcb)
    tcp_listen_pcbs                          0x2000de38   Data           4  tcp.o(.bss.tcp_listen_pcbs)
    tcp_ticks                                0x2000de40   Data           4  tcp.o(.bss.tcp_ticks)
    tcp_tw_pcbs                              0x2000de48   Data           4  tcp.o(.bss.tcp_tw_pcbs)
    udp_pcbs                                 0x2000de70   Data           4  udp.o(.bss.udp_pcbs)
    xQueueRegistry                           0x2000df00   Data          64  queue.o(.bss.xQueueRegistry)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x2000df7c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x2001437c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20030000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000425

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00012d50, Max: 0x00100000, ABSOLUTE)

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000400   Data   RO         2493    .isr_vector         startup_mk64f12.o


    Execution Region ER_m_flash_config (Exec base: 0x00000400, Load base: 0x00000400, Size: 0x00000010, Max: 0x00000010, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000400   0x00000400   0x00000010   Data   RO         2494    .FlashConfig        startup_mk64f12.o


    Execution Region ER_m_text (Exec base: 0x00000410, Load base: 0x00000410, Size: 0x00012900, Max: 0x000ffbf0, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000410   0x00000410   0x00000000   Code   RO         2952  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000410   0x00000410   0x00000004   Code   RO         3307    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00000414   0x00000414   0x00000004   Code   RO         3310    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000418   0x00000418   0x00000000   Code   RO         3312    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000418   0x00000418   0x00000000   Code   RO         3314    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000418   0x00000418   0x00000008   Code   RO         3315    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         3317    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         3319    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000420   0x00000420   0x00000004   Code   RO         3308    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00000424   0x00000424   0x000001dc   Code   RO         2492  * .text               startup_mk64f12.o
    0x00000600   0x00000600   0x00000062   Code   RO         2955    .text               mc_w.l(uldiv.o)
    0x00000662   0x00000662   0x00000062   Code   RO         2957    .text               mc_w.l(ldiv.o)
    0x000006c4   0x000006c4   0x00000042   Code   RO         2989    .text               mc_w.l(memmove.o)
    0x00000706   0x00000706   0x00000024   Code   RO         2993    .text               mc_w.l(memseta.o)
    0x0000072a   0x0000072a   0x0000000e   Code   RO         2995    .text               mc_w.l(strlen.o)
    0x00000738   0x00000738   0x0000001a   Code   RO         2997    .text               mc_w.l(memcmp.o)
    0x00000752   0x00000752   0x0000001e   Code   RO         3337    .text               mc_w.l(llshl.o)
    0x00000770   0x00000770   0x00000020   Code   RO         3339    .text               mc_w.l(llushr.o)
    0x00000790   0x00000790   0x00000024   Code   RO         3362    .text               mc_w.l(init.o)
    0x000007b4   0x000007b4   0x00000058   Code   RO           51    .text.BOARD_BootClockRUN  clock_config.o
    0x0000080c   0x0000080c   0x00000008   Code   RO           49    .text.BOARD_InitBootClocks  clock_config.o
    0x00000814   0x00000814   0x00000008   Code   RO           22    .text.BOARD_InitBootPins  pin_mux.o
    0x0000081c   0x0000081c   0x00000016   Code   RO           40    .text.BOARD_InitDebugConsole  board.o
    0x00000832   0x00000832   0x00000002   PAD
    0x00000834   0x00000834   0x000000d6   Code   RO           24    .text.BOARD_InitPins  pin_mux.o
    0x0000090a   0x0000090a   0x00000002   PAD
    0x0000090c   0x0000090c   0x0000004a   Code   RO         1856    .text.CLOCK_BootToPeeMode  fsl_clock.o
    0x00000956   0x00000956   0x00000002   PAD
    0x00000958   0x00000958   0x00000012   Code   RO           57    .text.CLOCK_CONFIG_SetFllExtRefDiv  clock_config.o
    0x0000096a   0x0000096a   0x00000002   PAD
    0x0000096c   0x0000096c   0x0000001c   Code   RO           26    .text.CLOCK_EnableClock  pin_mux.o
    0x00000988   0x00000988   0x0000001c   Code   RO           84    .text.CLOCK_EnableClock  fsl_enet_mdio.o
    0x000009a4   0x000009a4   0x00000012   Code   RO         1606    .text.CLOCK_EnableClock  fsl_enet.o
    0x000009b6   0x000009b6   0x00000002   PAD
    0x000009b8   0x000009b8   0x0000001c   Code   RO         2060    .text.CLOCK_EnableClock  fsl_uart.o
    0x000009d4   0x000009d4   0x00000050   Code   RO         1798    .text.CLOCK_EnablePll0  fsl_clock.o
    0x00000a24   0x00000a24   0x0000001c   Code   RO         1764    .text.CLOCK_GetCoreSysClkFreq  fsl_clock.o
    0x00000a40   0x00000a40   0x0000006c   Code   RO         1746    .text.CLOCK_GetEr32kClkFreq  fsl_clock.o
    0x00000aac   0x00000aac   0x0000001e   Code   RO         1768    .text.CLOCK_GetFixedFreqClkFreq  fsl_clock.o
    0x00000aca   0x00000aca   0x00000002   PAD
    0x00000acc   0x00000acc   0x00000064   Code   RO         1862    .text.CLOCK_GetFllExtRefClkFreq  fsl_clock.o
    0x00000b30   0x00000b30   0x00000050   Code   RO         1750    .text.CLOCK_GetFllFreq  fsl_clock.o
    0x00000b80   0x00000b80   0x00000022   Code   RO         1788    .text.CLOCK_GetFllRefClkFreq  fsl_clock.o
    0x00000ba2   0x00000ba2   0x00000002   PAD
    0x00000ba4   0x00000ba4   0x000000b8   Code   RO         1766    .text.CLOCK_GetFreq  fsl_clock.o
    0x00000c5c   0x00000c5c   0x00000018   Code   RO         1770    .text.CLOCK_GetInternalRefClkFreq  fsl_clock.o
    0x00000c74   0x00000c74   0x00000030   Code   RO         1784    .text.CLOCK_GetInternalRefClkSelectFreq  fsl_clock.o
    0x00000ca4   0x00000ca4   0x00000094   Code   RO         1786    .text.CLOCK_GetMcgExtClkFreq  fsl_clock.o
    0x00000d38   0x00000d38   0x00000048   Code   RO         1744    .text.CLOCK_GetOsc0ErClkFreq  fsl_clock.o
    0x00000d80   0x00000d80   0x00000020   Code   RO         1812    .text.CLOCK_GetOscRangeFromFreq  fsl_clock.o
    0x00000da0   0x00000da0   0x00000030   Code   RO         1756    .text.CLOCK_GetOutClkFreq  fsl_clock.o
    0x00000dd0   0x00000dd0   0x00000050   Code   RO         1752    .text.CLOCK_GetPll0Freq  fsl_clock.o
    0x00000e20   0x00000e20   0x00000008   Code   RO         1790    .text.CLOCK_GetPll0RefFreq  fsl_clock.o
    0x00000e28   0x00000e28   0x00000034   Code   RO         1748    .text.CLOCK_GetPllFllSelClkFreq  fsl_clock.o
    0x00000e5c   0x00000e5c   0x00000058   Code   RO         1810    .text.CLOCK_InitOsc0  fsl_clock.o
    0x00000eb4   0x00000eb4   0x00000012   Code   RO         1776    .text.CLOCK_SetEr32kClock  fsl_clock.o
    0x00000ec6   0x00000ec6   0x00000002   PAD
    0x00000ec8   0x00000ec8   0x0000003a   Code   RO         1792    .text.CLOCK_SetExternalRefClkConfig  fsl_clock.o
    0x00000f02   0x00000f02   0x00000002   PAD
    0x00000f04   0x00000f04   0x00000092   Code   RO         1794    .text.CLOCK_SetInternalRefClkConfig  fsl_clock.o
    0x00000f96   0x00000f96   0x00000002   PAD
    0x00000f98   0x00000f98   0x00000072   Code   RO         1840    .text.CLOCK_SetPbeMode  fsl_clock.o
    0x0000100a   0x0000100a   0x00000002   PAD
    0x0000100c   0x0000100c   0x00000012   Code   RO         1774    .text.CLOCK_SetPllFllSelClock  fsl_clock.o
    0x0000101e   0x0000101e   0x00000002   PAD
    0x00001020   0x00001020   0x0000001e   Code   RO         1772    .text.CLOCK_SetSimConfig  fsl_clock.o
    0x0000103e   0x0000103e   0x00000002   PAD
    0x00001040   0x00001040   0x00000010   Code   RO           53    .text.CLOCK_SetSimSafeDivs  clock_config.o
    0x00001050   0x00001050   0x00000014   Code   RO           55    .text.CLOCK_SetXtal0Freq  clock_config.o
    0x00001064   0x00001064   0x000000d6   Code   RO         2248    .text.ConvertRadixNumToString  fsl_str.o
    0x0000113a   0x0000113a   0x00000002   PAD
    0x0000113c   0x0000113c   0x00000092   Code   RO         2298    .text.DbgConsole_Init  fsl_debug_console.o
    0x000011ce   0x000011ce   0x00000002   PAD
    0x000011d0   0x000011d0   0x00000044   Code   RO         2312    .text.DbgConsole_PrintCallback  fsl_debug_console.o
    0x00001214   0x00001214   0x00000020   Code   RO         2308    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00001234   0x00001234   0x0000003e   Code   RO         2292    .text.DbgConsole_SendDataReliable  fsl_debug_console.o
    0x00001272   0x00001272   0x00000002   PAD
    0x00001274   0x00001274   0x00000042   Code   RO         2310    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x000012b6   0x000012b6   0x00000002   PAD
    0x000012b8   0x000012b8   0x0000000c   Code   RO         1656    .text.DisableGlobalIRQ  fsl_enet.o
    0x000012c4   0x000012c4   0x0000000c   Code   RO         2399    .text.DisableGlobalIRQ  fsl_component_serial_manager.o
    0x000012d0   0x000012d0   0x00000012   Code   RO         1710    .text.ENET_1588_Timer_DriverIRQHandler  fsl_enet.o
    0x000012e2   0x000012e2   0x00000002   PAD
    0x000012e4   0x000012e4   0x00000008   Code   RO          184    .text.ENET_ActiveRead  enet_ethernetif_kinetis.o
    0x000012ec   0x000012ec   0x00000028   Code   RO         1670    .text.ENET_ActiveReadRing  fsl_enet.o
    0x00001314   0x00001314   0x00000026   Code   RO         1660    .text.ENET_ActiveSendRing  fsl_enet.o
    0x0000133a   0x0000133a   0x00000002   PAD
    0x0000133c   0x0000133c   0x00000008   Code   RO           86    .text.ENET_ClearInterruptStatus  fsl_enet_mdio.o
    0x00001344   0x00001344   0x0000000a   Code   RO          198    .text.ENET_DisableInterrupts  enet_ethernetif_kinetis.o
    0x0000134e   0x0000134e   0x00000002   PAD
    0x00001350   0x00001350   0x0000000a   Code   RO          200    .text.ENET_EnableInterrupts  enet_ethernetif_kinetis.o
    0x0000135a   0x0000135a   0x00000002   PAD
    0x0000135c   0x0000135c   0x00000008   Code   RO         1716    .text.ENET_EnableInterrupts  fsl_enet.o
    0x00001364   0x00001364   0x0000000a   Code   RO         1690    .text.ENET_EnableSleepMode  fsl_enet.o
    0x0000136e   0x0000136e   0x00000002   PAD
    0x00001370   0x00001370   0x00000028   Code   RO         1700    .text.ENET_ErrIRQHandler  fsl_enet.o
    0x00001398   0x00001398   0x00000080   Code   RO         1688    .text.ENET_ErrorIRQHandler  fsl_enet.o
    0x00001418   0x00001418   0x00000012   Code   RO         1706    .text.ENET_Error_DriverIRQHandler  fsl_enet.o
    0x0000142a   0x0000142a   0x00000002   PAD
    0x0000142c   0x0000142c   0x00000036   Code   RO         1590    .text.ENET_GetDefaultConfig  fsl_enet.o
    0x00001462   0x00001462   0x00000002   PAD
    0x00001464   0x00001464   0x00000054   Code   RO         1588    .text.ENET_GetInstance  fsl_enet.o
    0x000014b8   0x000014b8   0x00000004   Code   RO           90    .text.ENET_GetInterruptStatus  fsl_enet_mdio.o
    0x000014bc   0x000014bc   0x000002d4   Code   RO         1672    .text.ENET_GetRxFrame  fsl_enet.o
    0x00001790   0x00001790   0x0000007c   Code   RO         1674    .text.ENET_GetRxFrameErr  fsl_enet.o
    0x0000180c   0x0000180c   0x0000000c   Code   RO         1714    .text.ENET_GetSMI   fsl_enet.o
    0x00001818   0x00001818   0x00000030   Code   RO         1646    .text.ENET_IncreaseIndex  fsl_enet.o
    0x00001848   0x00001848   0x0000003a   Code   RO         1604    .text.ENET_Init     fsl_enet.o
    0x00001882   0x00001882   0x00000002   PAD
    0x00001884   0x00001884   0x00000028   Code   RO           78    .text.ENET_MDIO_Init  fsl_enet_mdio.o
    0x000018ac   0x000018ac   0x00000090   Code   RO           82    .text.ENET_MDIO_Read  fsl_enet_mdio.o
    0x0000193c   0x0000193c   0x00000010   Code   RO           88    .text.ENET_MDIO_WaitTransferOver  fsl_enet_mdio.o
    0x0000194c   0x0000194c   0x00000032   Code   RO           80    .text.ENET_MDIO_Write  fsl_enet_mdio.o
    0x0000197e   0x0000197e   0x00000002   PAD
    0x00001980   0x00001980   0x00000008   Code   RO         1694    .text.ENET_Ptp1588IRQHandler  fsl_enet.o
    0x00001988   0x00001988   0x00000006   Code   RO           92    .text.ENET_ReadSMIData  fsl_enet_mdio.o
    0x0000198e   0x0000198e   0x00000002   PAD
    0x00001990   0x00001990   0x0000005c   Code   RO         1686    .text.ENET_ReceiveIRQHandler  fsl_enet.o
    0x000019ec   0x000019ec   0x00000012   Code   RO         1704    .text.ENET_Receive_DriverIRQHandler  fsl_enet.o
    0x000019fe   0x000019fe   0x00000002   PAD
    0x00001a00   0x00001a00   0x000000e8   Code   RO         1664    .text.ENET_ReclaimTxDescriptor  fsl_enet.o
    0x00001ae8   0x00001ae8   0x0000000a   Code   RO         1608    .text.ENET_Reset    fsl_enet.o
    0x00001af2   0x00001af2   0x00000002   PAD
    0x00001af4   0x00001af4   0x000000c8   Code   RO         1602    .text.ENET_RxBufferAllocAll  fsl_enet.o
    0x00001bbc   0x00001bbc   0x000000c8   Code   RO         1612    .text.ENET_RxBufferFreeAll  fsl_enet.o
    0x00001c84   0x00001c84   0x00000028   Code   RO         1698    .text.ENET_RxIRQHandler  fsl_enet.o
    0x00001cac   0x00001cac   0x00000264   Code   RO         1652    .text.ENET_SendFrame  fsl_enet.o
    0x00001f10   0x00001f10   0x0000001a   Code   RO         1626    .text.ENET_SetErrISRHandler  fsl_enet.o
    0x00001f2a   0x00001f2a   0x00000002   PAD
    0x00001f2c   0x00001f2c   0x0000010e   Code   RO         1600    .text.ENET_SetHandler  fsl_enet.o
    0x0000203a   0x0000203a   0x00000002   PAD
    0x0000203c   0x0000203c   0x00000018   Code   RO         1630    .text.ENET_SetMacAddr  fsl_enet.o
    0x00002054   0x00002054   0x00000162   Code   RO         1598    .text.ENET_SetMacController  fsl_enet.o
    0x000021b6   0x000021b6   0x00000002   PAD
    0x000021b8   0x000021b8   0x00000118   Code   RO         1596    .text.ENET_SetRxBufferDescriptors  fsl_enet.o
    0x000022d0   0x000022d0   0x0000001a   Code   RO         1620    .text.ENET_SetRxISRHandler  fsl_enet.o
    0x000022ea   0x000022ea   0x00000002   PAD
    0x000022ec   0x000022ec   0x000000a8   Code   RO         1634    .text.ENET_SetSMI   fsl_enet.o
    0x00002394   0x00002394   0x000000d2   Code   RO         1594    .text.ENET_SetTxBufferDescriptors  fsl_enet.o
    0x00002466   0x00002466   0x00000002   PAD
    0x00002468   0x00002468   0x0000001a   Code   RO         1624    .text.ENET_SetTxISRHandler  fsl_enet.o
    0x00002482   0x00002482   0x00000002   PAD
    0x00002484   0x00002484   0x00000020   Code   RO         1638    .text.ENET_StartSMIRead  fsl_enet.o
    0x000024a4   0x000024a4   0x0000002a   Code   RO         1636    .text.ENET_StartSMIWrite  fsl_enet.o
    0x000024ce   0x000024ce   0x00000002   PAD
    0x000024d0   0x000024d0   0x00000074   Code   RO         1684    .text.ENET_TransmitIRQHandler  fsl_enet.o
    0x00002544   0x00002544   0x00000012   Code   RO         1702    .text.ENET_Transmit_DriverIRQHandler  fsl_enet.o
    0x00002556   0x00002556   0x00000002   PAD
    0x00002558   0x00002558   0x0000000a   Code   RO         1654    .text.ENET_TxDirtyRingAvailable  fsl_enet.o
    0x00002562   0x00002562   0x00000002   PAD
    0x00002564   0x00002564   0x00000028   Code   RO         1696    .text.ENET_TxIRQHandler  fsl_enet.o
    0x0000258c   0x0000258c   0x000000e8   Code   RO         1592    .text.ENET_Up       fsl_enet.o
    0x00002674   0x00002674   0x00000006   Code   RO         1658    .text.EnableGlobalIRQ  fsl_enet.o
    0x0000267a   0x0000267a   0x00000002   PAD
    0x0000267c   0x0000267c   0x00000006   Code   RO         2401    .text.EnableGlobalIRQ  fsl_component_serial_manager.o
    0x00002682   0x00002682   0x00000002   PAD
    0x00002684   0x00002684   0x00000008   Code   RO         1622    .text.EnableIRQ     fsl_enet.o
    0x0000268c   0x0000268c   0x0000000a   Code   RO         2373    .text.HAL_UartGetStatus  fsl_adapter_uart.o
    0x00002696   0x00002696   0x00000002   PAD
    0x00002698   0x00002698   0x000000ec   Code   RO         2371    .text.HAL_UartInit  fsl_adapter_uart.o
    0x00002784   0x00002784   0x00000066   Code   RO         2379    .text.HAL_UartSendBlocking  fsl_adapter_uart.o
    0x000027ea   0x000027ea   0x00000002   PAD
    0x000027ec   0x000027ec   0x0000000a   Code   RO          119    .text.MDIO_Init     fsl_phyksz8081.o
    0x000027f6   0x000027f6   0x00000002   PAD
    0x000027f8   0x000027f8   0x0000000e   Code   RO          121    .text.MDIO_Read     fsl_phyksz8081.o
    0x00002806   0x00002806   0x00000002   PAD
    0x00002808   0x00002808   0x0000000e   Code   RO          123    .text.MDIO_Write    fsl_phyksz8081.o
    0x00002816   0x00002816   0x00000002   PAD
    0x00002818   0x00002818   0x00000014   Code   RO         1814    .text.OSC_SetCapLoad  fsl_clock.o
    0x0000282c   0x0000282c   0x00000016   Code   RO         1816    .text.OSC_SetExtRefClkConfig  fsl_clock.o
    0x00002842   0x00002842   0x00000002   PAD
    0x00002844   0x00002844   0x0000000a   Code   RO          151    .text.PHY_GetAutoNegotiationStatus  enet_ethernetif.o
    0x0000284e   0x0000284e   0x00000002   PAD
    0x00002850   0x00002850   0x0000000a   Code   RO          155    .text.PHY_GetLinkSpeedDuplex  enet_ethernetif.o
    0x0000285a   0x0000285a   0x00000002   PAD
    0x0000285c   0x0000285c   0x0000000a   Code   RO          153    .text.PHY_GetLinkStatus  enet_ethernetif.o
    0x00002866   0x00002866   0x00000002   PAD
    0x00002868   0x00002868   0x0000000a   Code   RO          149    .text.PHY_Init      enet_ethernetif.o
    0x00002872   0x00002872   0x00000002   PAD
    0x00002874   0x00002874   0x00000110   Code   RO          117    .text.PHY_KSZ8081_EnableLoopback  fsl_phyksz8081.o
    0x00002984   0x00002984   0x00000044   Code   RO          109    .text.PHY_KSZ8081_GetAutoNegotiationStatus  fsl_phyksz8081.o
    0x000029c8   0x000029c8   0x00000084   Code   RO          113    .text.PHY_KSZ8081_GetLinkSpeedDuplex  fsl_phyksz8081.o
    0x00002a4c   0x00002a4c   0x0000003e   Code   RO          111    .text.PHY_KSZ8081_GetLinkStatus  fsl_phyksz8081.o
    0x00002a8a   0x00002a8a   0x00000002   PAD
    0x00002a8c   0x00002a8c   0x000000e4   Code   RO          103    .text.PHY_KSZ8081_Init  fsl_phyksz8081.o
    0x00002b70   0x00002b70   0x00000014   Code   RO          107    .text.PHY_KSZ8081_Read  fsl_phyksz8081.o
    0x00002b84   0x00002b84   0x00000060   Code   RO          115    .text.PHY_KSZ8081_SetLinkSpeedDuplex  fsl_phyksz8081.o
    0x00002be4   0x00002be4   0x00000014   Code   RO          105    .text.PHY_KSZ8081_Write  fsl_phyksz8081.o
    0x00002bf8   0x00002bf8   0x00000060   Code   RO           30    .text.PORT_SetPinConfig  pin_mux.o
    0x00002c58   0x00002c58   0x0000000e   Code   RO           28    .text.PORT_SetPinMux  pin_mux.o
    0x00002c66   0x00002c66   0x0000000a   PAD
    0x00002c70   0x00002c70   0x00000064   Code   RO         2936    .text.PendSV_Handler  port.o
    0x00002cd4   0x00002cd4   0x00000068   Code   RO         2238    .text.PrintCheckFlags  fsl_str.o
    0x00002d3c   0x00002d3c   0x00000046   Code   RO         2244    .text.PrintGetLengthFlag  fsl_str.o
    0x00002d82   0x00002d82   0x00000002   PAD
    0x00002d84   0x00002d84   0x00000070   Code   RO         2242    .text.PrintGetPrecision  fsl_str.o
    0x00002df4   0x00002df4   0x0000001a   Code   RO         2262    .text.PrintGetRadixFromobpu  fsl_str.o
    0x00002e0e   0x00002e0e   0x00000002   PAD
    0x00002e10   0x00002e10   0x00000024   Code   RO         2250    .text.PrintGetSignChar  fsl_str.o
    0x00002e34   0x00002e34   0x0000004c   Code   RO         2240    .text.PrintGetWidth  fsl_str.o
    0x00002e80   0x00002e80   0x00000010   Code   RO         2246    .text.PrintIsdi     fsl_str.o
    0x00002e90   0x00002e90   0x0000000e   Code   RO         2254    .text.PrintIsfF     fsl_str.o
    0x00002e9e   0x00002e9e   0x00000002   PAD
    0x00002ea0   0x00002ea0   0x00000024   Code   RO         2260    .text.PrintIsobpu   fsl_str.o
    0x00002ec4   0x00002ec4   0x0000000e   Code   RO         2256    .text.PrintIsxX     fsl_str.o
    0x00002ed2   0x00002ed2   0x00000002   PAD
    0x00002ed4   0x00002ed4   0x0000009a   Code   RO         2252    .text.PrintOutputdifFobpu  fsl_str.o
    0x00002f6e   0x00002f6e   0x00000002   PAD
    0x00002f70   0x00002f70   0x00000100   Code   RO         2258    .text.PrintOutputxX  fsl_str.o
    0x00003070   0x00003070   0x00000024   Code   RO         2920    .text.SVC_Handler   port.o
    0x00003094   0x00003094   0x00000036   Code   RO         2395    .text.SerialManager_Init  fsl_component_serial_manager.o
    0x000030ca   0x000030ca   0x00000002   PAD
    0x000030cc   0x000030cc   0x0000003e   Code   RO         2407    .text.SerialManager_OpenReadHandle  fsl_component_serial_manager.o
    0x0000310a   0x0000310a   0x00000002   PAD
    0x0000310c   0x0000310c   0x0000002e   Code   RO         2403    .text.SerialManager_OpenWriteHandle  fsl_component_serial_manager.o
    0x0000313a   0x0000313a   0x00000002   PAD
    0x0000313c   0x0000313c   0x00000014   Code   RO         2423    .text.SerialManager_StartWriting  fsl_component_serial_manager.o
    0x00003150   0x00003150   0x00000022   Code   RO         2413    .text.SerialManager_Write  fsl_component_serial_manager.o
    0x00003172   0x00003172   0x00000002   PAD
    0x00003174   0x00003174   0x00000008   Code   RO         2411    .text.SerialManager_WriteBlocking  fsl_component_serial_manager.o
    0x0000317c   0x0000317c   0x0000001e   Code   RO         2435    .text.Serial_UartInit  fsl_component_serial_port_uart.o
    0x0000319a   0x0000319a   0x00000002   PAD
    0x0000319c   0x0000319c   0x0000001a   Code   RO         2439    .text.Serial_UartWrite  fsl_component_serial_port_uart.o
    0x000031b6   0x000031b6   0x00000002   PAD
    0x000031b8   0x000031b8   0x000002e8   Code   RO         2236    .text.StrFormatPrintf  fsl_str.o
    0x000034a0   0x000034a0   0x0000002e   Code   RO         2938    .text.SysTick_Handler  port.o
    0x000034ce   0x000034ce   0x00000002   PAD
    0x000034d0   0x000034d0   0x00000034   Code   RO         2356    .text.SystemInit    system_mk64f12.o
    0x00003504   0x00003504   0x00000002   Code   RO         2358    .text.SystemInitHook  system_mk64f12.o
    0x00003506   0x00003506   0x00000002   PAD
    0x00003508   0x00003508   0x00000026   Code   RO         2132    .text.UART0_DriverIRQHandler  fsl_uart.o
    0x0000352e   0x0000352e   0x00000002   PAD
    0x00003530   0x00003530   0x0000000c   Code   RO         2134    .text.UART0_RX_TX_DriverIRQHandler  fsl_uart.o
    0x0000353c   0x0000353c   0x00000026   Code   RO         2136    .text.UART1_DriverIRQHandler  fsl_uart.o
    0x00003562   0x00003562   0x00000002   PAD
    0x00003564   0x00003564   0x0000000c   Code   RO         2138    .text.UART1_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00003570   0x00003570   0x00000026   Code   RO         2140    .text.UART2_DriverIRQHandler  fsl_uart.o
    0x00003596   0x00003596   0x00000002   PAD
    0x00003598   0x00003598   0x0000000c   Code   RO         2142    .text.UART2_RX_TX_DriverIRQHandler  fsl_uart.o
    0x000035a4   0x000035a4   0x00000026   Code   RO         2144    .text.UART3_DriverIRQHandler  fsl_uart.o
    0x000035ca   0x000035ca   0x00000002   PAD
    0x000035cc   0x000035cc   0x0000000c   Code   RO         2146    .text.UART3_RX_TX_DriverIRQHandler  fsl_uart.o
    0x000035d8   0x000035d8   0x00000026   Code   RO         2148    .text.UART4_DriverIRQHandler  fsl_uart.o
    0x000035fe   0x000035fe   0x00000002   PAD
    0x00003600   0x00003600   0x0000000c   Code   RO         2150    .text.UART4_RX_TX_DriverIRQHandler  fsl_uart.o
    0x0000360c   0x0000360c   0x00000026   Code   RO         2152    .text.UART5_DriverIRQHandler  fsl_uart.o
    0x00003632   0x00003632   0x00000002   PAD
    0x00003634   0x00003634   0x0000000c   Code   RO         2154    .text.UART5_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00003640   0x00003640   0x00000038   Code   RO         2066    .text.UART_GetDefaultConfig  fsl_uart.o
    0x00003678   0x00003678   0x0000005c   Code   RO         2054    .text.UART_GetInstance  fsl_uart.o
    0x000036d4   0x000036d4   0x000001d8   Code   RO         2058    .text.UART_Init     fsl_uart.o
    0x000038ac   0x000038ac   0x00000022   Code   RO         2090    .text.UART_WriteBlocking  fsl_uart.o
    0x000038ce   0x000038ce   0x00000002   PAD
    0x000038d0   0x000038d0   0x00000016   Code   RO         1712    .text.__NVIC_EnableIRQ  fsl_enet.o
    0x000038e6   0x000038e6   0x00000002   PAD
    0x000038e8   0x000038e8   0x00000010   Code   RO          180    .text.__NVIC_SetPriority  enet_ethernetif_kinetis.o
    0x000038f8   0x000038f8   0x0000003c   Code   RO         2335    .text.__aeabi_assert  fsl_assert.o
    0x00003934   0x00003934   0x00000120   Code   RO          540    .text.accept_function  api_msg.o
    0x00003a54   0x00003a54   0x00000124   Code   RO         1367    .text.dhcp_bind     dhcp.o
    0x00003b78   0x00003b78   0x0000006c   Code   RO         1305    .text.dhcp_coarse_tmr  dhcp.o
    0x00003be4   0x00003be4   0x000001a0   Code   RO         1333    .text.dhcp_create_msg  dhcp.o
    0x00003d84   0x00003d84   0x00000058   Code   RO         1323    .text.dhcp_dec_pcb_refcount  dhcp.o
    0x00003ddc   0x00003ddc   0x000000f4   Code   RO         1329    .text.dhcp_discover  dhcp.o
    0x00003ed0   0x00003ed0   0x0000003c   Code   RO         1315    .text.dhcp_fine_tmr  dhcp.o
    0x00003f0c   0x00003f0c   0x00000076   Code   RO         1365    .text.dhcp_handle_ack  dhcp.o
    0x00003f82   0x00003f82   0x00000002   PAD
    0x00003f84   0x00003f84   0x00000026   Code   RO         1369    .text.dhcp_handle_nak  dhcp.o
    0x00003faa   0x00003faa   0x00000002   PAD
    0x00003fac   0x00003fac   0x00000038   Code   RO         1371    .text.dhcp_handle_offer  dhcp.o
    0x00003fe4   0x00003fe4   0x00000094   Code   RO         1325    .text.dhcp_inc_pcb_refcount  dhcp.o
    0x00004078   0x00004078   0x00000030   Code   RO         1335    .text.dhcp_option   dhcp.o
    0x000040a8   0x000040a8   0x00000054   Code   RO         1347    .text.dhcp_option_byte  dhcp.o
    0x000040fc   0x000040fc   0x00000070   Code   RO         1351    .text.dhcp_option_long  dhcp.o
    0x0000416c   0x0000416c   0x00000060   Code   RO         1337    .text.dhcp_option_short  dhcp.o
    0x000041cc   0x000041cc   0x00000036   Code   RO         1339    .text.dhcp_option_trailer  dhcp.o
    0x00004202   0x00004202   0x00000002   PAD
    0x00004204   0x00004204   0x000003ac   Code   RO         1363    .text.dhcp_parse_reply  dhcp.o
    0x000045b0   0x000045b0   0x000000e6   Code   RO         1359    .text.dhcp_rebind   dhcp.o
    0x00004696   0x00004696   0x00000002   PAD
    0x00004698   0x00004698   0x0000010a   Code   RO         1343    .text.dhcp_reboot   dhcp.o
    0x000047a2   0x000047a2   0x00000002   PAD
    0x000047a4   0x000047a4   0x000000f6   Code   RO         1361    .text.dhcp_recv     dhcp.o
    0x0000489a   0x0000489a   0x00000002   PAD
    0x0000489c   0x0000489c   0x000000d8   Code   RO         1307    .text.dhcp_release_and_stop  dhcp.o
    0x00004974   0x00004974   0x000000ee   Code   RO         1345    .text.dhcp_renew    dhcp.o
    0x00004a62   0x00004a62   0x00000002   PAD
    0x00004a64   0x00004a64   0x000001a4   Code   RO         1357    .text.dhcp_select   dhcp.o
    0x00004c08   0x00004c08   0x00000012   Code   RO         1327    .text.dhcp_set_state  dhcp.o
    0x00004c1a   0x00004c1a   0x00000002   PAD
    0x00004c1c   0x00004c1c   0x000000b4   Code   RO         1309    .text.dhcp_start    dhcp.o
    0x00004cd0   0x00004cd0   0x0000002e   Code   RO         1349    .text.dhcp_supplied_address  dhcp.o
    0x00004cfe   0x00004cfe   0x00000002   PAD
    0x00004d00   0x00004d00   0x00000032   Code   RO         1313    .text.dhcp_t1_timeout  dhcp.o
    0x00004d32   0x00004d32   0x00000002   PAD
    0x00004d34   0x00004d34   0x00000032   Code   RO         1311    .text.dhcp_t2_timeout  dhcp.o
    0x00004d66   0x00004d66   0x00000002   PAD
    0x00004d68   0x00004d68   0x0000005a   Code   RO         1317    .text.dhcp_timeout  dhcp.o
    0x00004dc2   0x00004dc2   0x00000002   PAD
    0x00004dc4   0x00004dc4   0x00000044   Code   RO          684    .text.do_memp_free_pool  memp.o
    0x00004e08   0x00004e08   0x00000058   Code   RO          678    .text.do_memp_malloc_pool  memp.o
    0x00004e60   0x00004e60   0x0000005c   Code   RO          194    .text.enet_send_frame  enet_ethernetif_kinetis.o
    0x00004ebc   0x00004ebc   0x00000118   Code   RO          562    .text.err_tcp       api_msg.o
    0x00004fd4   0x00004fd4   0x000001a8   Code   RO         1438    .text.etharp_find_entry  etharp.o
    0x0000517c   0x0000517c   0x0000003c   Code   RO         1430    .text.etharp_free_entry  etharp.o
    0x000051b8   0x000051b8   0x000000d4   Code   RO         1442    .text.etharp_input  etharp.o
    0x0000528c   0x0000528c   0x0000013c   Code   RO         1448    .text.etharp_output  etharp.o
    0x000053c8   0x000053c8   0x000000ac   Code   RO         1450    .text.etharp_output_to_arp_index  etharp.o
    0x00005474   0x00005474   0x000001f8   Code   RO         1452    .text.etharp_query  etharp.o
    0x0000566c   0x0000566c   0x00000104   Code   RO         1446    .text.etharp_raw    etharp.o
    0x00005770   0x00005770   0x00000010   Code   RO         1432    .text.etharp_request  etharp.o
    0x00005780   0x00005780   0x0000002c   Code   RO         1454    .text.etharp_request_dst  etharp.o
    0x000057ac   0x000057ac   0x0000006e   Code   RO         1428    .text.etharp_tmr    etharp.o
    0x0000581a   0x0000581a   0x00000002   PAD
    0x0000581c   0x0000581c   0x000000bc   Code   RO         1444    .text.etharp_update_arp_entry  etharp.o
    0x000058d8   0x000058d8   0x00000064   Code   RO          178    .text.ethernet_callback  enet_ethernetif_kinetis.o
    0x0000593c   0x0000593c   0x000000a4   Code   RO         1544    .text.ethernet_input  ethernet.o
    0x000059e0   0x000059e0   0x00000094   Code   RO         1546    .text.ethernet_output  ethernet.o
    0x00005a74   0x00005a74   0x00000048   Code   RO          196    .text.ethernetif0_init  enet_ethernetif_kinetis.o
    0x00005abc   0x00005abc   0x00000144   Code   RO          172    .text.ethernetif_enet_init  enet_ethernetif_kinetis.o
    0x00005c00   0x00005c00   0x00000002   Code   RO          186    .text.ethernetif_enet_ptr  enet_ethernetif_kinetis.o
    0x00005c02   0x00005c02   0x00000002   PAD
    0x00005c04   0x00005c04   0x00000010   Code   RO          159    .text.ethernetif_get_enet_base  enet_ethernetif.o
    0x00005c14   0x00005c14   0x000000d8   Code   RO          161    .text.ethernetif_init  enet_ethernetif.o
    0x00005cec   0x00005cec   0x00000044   Code   RO          157    .text.ethernetif_input  enet_ethernetif.o
    0x00005d30   0x00005d30   0x00000064   Code   RO          188    .text.ethernetif_linkinput  enet_ethernetif_kinetis.o
    0x00005d94   0x00005d94   0x00000080   Code   RO          192    .text.ethernetif_linkoutput  enet_ethernetif_kinetis.o
    0x00005e14   0x00005e14   0x00000118   Code   RO          147    .text.ethernetif_phy_init  enet_ethernetif.o
    0x00005f2c   0x00005f2c   0x00000032   Code   RO          174    .text.ethernetif_rx_alloc  enet_ethernetif_kinetis.o
    0x00005f5e   0x00005f5e   0x00000002   PAD
    0x00005f60   0x00005f60   0x000000c8   Code   RO          190    .text.ethernetif_rx_frame_to_pbufs  enet_ethernetif_kinetis.o
    0x00006028   0x00006028   0x00000098   Code   RO          176    .text.ethernetif_rx_free  enet_ethernetif_kinetis.o
    0x000060c0   0x000060c0   0x00000012   Code   RO          182    .text.ethernetif_rx_release  enet_ethernetif_kinetis.o
    0x000060d2   0x000060d2   0x00000002   PAD
    0x000060d4   0x000060d4   0x0000000c   Code   RO         1413    .text.icmp_dest_unreach  icmp.o
    0x000060e0   0x000060e0   0x000001b0   Code   RO         1411    .text.icmp_input    icmp.o
    0x00006290   0x00006290   0x000000c4   Code   RO         1415    .text.icmp_send_response  icmp.o
    0x00006354   0x00006354   0x0000000c   Code   RO         1417    .text.icmp_time_exceeded  icmp.o
    0x00006360   0x00006360   0x0000000e   Code   RO          941    .text.inet_chksum   inet_chksum.o
    0x0000636e   0x0000636e   0x00000002   PAD
    0x00006370   0x00006370   0x00000052   Code   RO          943    .text.inet_chksum_pbuf  inet_chksum.o
    0x000063c2   0x000063c2   0x00000002   PAD
    0x000063c4   0x000063c4   0x0000002e   Code   RO          929    .text.inet_chksum_pseudo  inet_chksum.o
    0x000063f2   0x000063f2   0x00000002   PAD
    0x000063f4   0x000063f4   0x00000074   Code   RO          931    .text.inet_cksum_pseudo_base  inet_chksum.o
    0x00006468   0x00006468   0x00000034   Code   RO         1467    .text.ip4_addr_isbroadcast_u32  ip4_addr.o
    0x0000649c   0x0000649c   0x0000023c   Code   RO         1507    .text.ip4_frag      ip4_frag.o
    0x000066d8   0x000066d8   0x000001c6   Code   RO         1390    .text.ip4_input     ip4.o
    0x0000689e   0x0000689e   0x00000002   PAD
    0x000068a0   0x000068a0   0x0000002c   Code   RO         1392    .text.ip4_input_accept  ip4.o
    0x000068cc   0x000068cc   0x00000030   Code   RO         1394    .text.ip4_output_if  ip4.o
    0x000068fc   0x000068fc   0x00000138   Code   RO         1396    .text.ip4_output_if_src  ip4.o
    0x00006a34   0x00006a34   0x00000230   Code   RO         1497    .text.ip4_reass     ip4_frag.o
    0x00006c64   0x00006c64   0x00000068   Code   RO         1388    .text.ip4_route     ip4.o
    0x00006ccc   0x00006ccc   0x00000014   Code   RO          933    .text.ip_chksum_pseudo  inet_chksum.o
    0x00006ce0   0x00006ce0   0x0000000a   Code   RO         1509    .text.ip_frag_alloc_pbuf_custom_ref  ip4_frag.o
    0x00006cea   0x00006cea   0x00000002   PAD
    0x00006cec   0x00006cec   0x00000024   Code   RO         1511    .text.ip_frag_free_pbuf_custom_ref  ip4_frag.o
    0x00006d10   0x00006d10   0x0000024c   Code   RO         1503    .text.ip_reass_chain_frag_into_datagram_and_validate  ip4_frag.o
    0x00006f5c   0x00006f5c   0x0000004c   Code   RO         1505    .text.ip_reass_dequeue_datagram  ip4_frag.o
    0x00006fa8   0x00006fa8   0x0000005c   Code   RO         1501    .text.ip_reass_enqueue_new_datagram  ip4_frag.o
    0x00007004   0x00007004   0x00000128   Code   RO         1495    .text.ip_reass_free_complete_datagram  ip4_frag.o
    0x0000712c   0x0000712c   0x0000008e   Code   RO         1499    .text.ip_reass_remove_oldest_datagram  ip4_frag.o
    0x000071ba   0x000071ba   0x00000002   PAD
    0x000071bc   0x000071bc   0x00000036   Code   RO         1493    .text.ip_reass_tmr  ip4_frag.o
    0x000071f2   0x000071f2   0x00000002   PAD
    0x000071f4   0x000071f4   0x0000002c   Code   RO         1513    .text.ipfrag_free_pbuf_custom  ip4_frag.o
    0x00007220   0x00007220   0x00000032   Code   RO          961    .text.lwip_cyclic_timer  timeouts.o
    0x00007252   0x00007252   0x00000002   PAD
    0x00007254   0x00007254   0x00000004   Code   RO          739    .text.lwip_htonl    def.o
    0x00007258   0x00007258   0x00000004   Code   RO          737    .text.lwip_htons    def.o
    0x0000725c   0x0000725c   0x00000020   Code   RO          919    .text.lwip_init     init.o
    0x0000727c   0x0000727c   0x00000020   Code   RO          546    .text.lwip_netconn_do_accepted  api_msg.o
    0x0000729c   0x0000729c   0x00000038   Code   RO          526    .text.lwip_netconn_do_bind  api_msg.o
    0x000072d4   0x000072d4   0x000000a4   Code   RO          554    .text.lwip_netconn_do_close  api_msg.o
    0x00007378   0x00007378   0x00000268   Code   RO          524    .text.lwip_netconn_do_close_internal  api_msg.o
    0x000075e0   0x000075e0   0x000000f8   Code   RO          520    .text.lwip_netconn_do_delconn  api_msg.o
    0x000076d8   0x000076d8   0x0000010c   Code   RO          538    .text.lwip_netconn_do_listen  api_msg.o
    0x000077e4   0x000077e4   0x00000014   Code   RO          512    .text.lwip_netconn_do_newconn  api_msg.o
    0x000077f8   0x000077f8   0x0000003c   Code   RO          544    .text.lwip_netconn_do_recv  api_msg.o
    0x00007834   0x00007834   0x000000b4   Code   RO          548    .text.lwip_netconn_do_write  api_msg.o
    0x000078e8   0x000078e8   0x000002ec   Code   RO          550    .text.lwip_netconn_do_writemore  api_msg.o
    0x00007bd4   0x00007bd4   0x0000003c   Code   RO          564    .text.lwip_netconn_err_to_msg  api_msg.o
    0x00007c10   0x00007c10   0x00000054   Code   RO          510    .text.lwip_netconn_is_err_msg  api_msg.o
    0x00007c64   0x00007c64   0x00000060   Code   RO          927    .text.lwip_standard_chksum  inet_chksum.o
    0x00007cc4   0x00007cc4   0x00000078   Code   RO            4    .text.main          lwip_tcpecho_freertos.o
    0x00007d3c   0x00007d3c   0x00000128   Code   RO         1095    .text.mem_free      mem.o
    0x00007e64   0x00007e64   0x00000084   Code   RO         1091    .text.mem_init      mem.o
    0x00007ee8   0x00007ee8   0x0000005e   Code   RO         1097    .text.mem_link_valid  mem.o
    0x00007f46   0x00007f46   0x00000002   PAD
    0x00007f48   0x00007f48   0x000001c8   Code   RO         1105    .text.mem_malloc    mem.o
    0x00008110   0x00008110   0x00000010   Code   RO         1103    .text.mem_to_ptr    mem.o
    0x00008120   0x00008120   0x000001b0   Code   RO         1101    .text.mem_trim      mem.o
    0x000082d0   0x000082d0   0x00000050   Code   RO          686    .text.memp_free     memp.o
    0x00008320   0x00008320   0x00000020   Code   RO          674    .text.memp_init     memp.o
    0x00008340   0x00008340   0x00000036   Code   RO          672    .text.memp_init_pool  memp.o
    0x00008376   0x00008376   0x00000002   PAD
    0x00008378   0x00008378   0x00000050   Code   RO          680    .text.memp_malloc   memp.o
    0x000083c8   0x000083c8   0x0000009c   Code   RO          446    .text.netbuf_data   netbuf.o
    0x00008464   0x00008464   0x00000026   Code   RO          436    .text.netbuf_delete  netbuf.o
    0x0000848a   0x0000848a   0x00000002   PAD
    0x0000848c   0x0000848c   0x0000004c   Code   RO          448    .text.netbuf_next   netbuf.o
    0x000084d8   0x000084d8   0x00000104   Code   RO          627    .text.netconn_accept  api_lib.o
    0x000085dc   0x000085dc   0x000000a4   Code   RO          516    .text.netconn_alloc  api_msg.o
    0x00008680   0x00008680   0x0000001c   Code   RO          609    .text.netconn_apimsg  api_lib.o
    0x0000869c   0x0000869c   0x00000064   Code   RO          617    .text.netconn_bind  api_lib.o
    0x00008700   0x00008700   0x0000000a   Code   RO          657    .text.netconn_close  api_lib.o
    0x0000870a   0x0000870a   0x00000002   PAD
    0x0000870c   0x0000870c   0x00000058   Code   RO          659    .text.netconn_close_shutdown  api_lib.o
    0x00008764   0x00008764   0x00000020   Code   RO          613    .text.netconn_delete  api_lib.o
    0x00008784   0x00008784   0x000000c2   Code   RO          522    .text.netconn_drain  api_msg.o
    0x00008846   0x00008846   0x00000002   PAD
    0x00008848   0x00008848   0x0000001c   Code   RO          629    .text.netconn_err   api_lib.o
    0x00008864   0x00008864   0x000000ac   Code   RO          518    .text.netconn_free  api_msg.o
    0x00008910   0x00008910   0x00000058   Code   RO          625    .text.netconn_listen_with_backlog  api_lib.o
    0x00008968   0x00008968   0x000000f0   Code   RO          607    .text.netconn_new_with_proto_and_callback  api_lib.o
    0x00008a58   0x00008a58   0x00000026   Code   RO          611    .text.netconn_prepare_delete  api_lib.o
    0x00008a7e   0x00008a7e   0x00000002   PAD
    0x00008a80   0x00008a80   0x000000b8   Code   RO          647    .text.netconn_recv  api_lib.o
    0x00008b38   0x00008b38   0x00000114   Code   RO          643    .text.netconn_recv_data  api_lib.o
    0x00008c4c   0x00008c4c   0x0000008c   Code   RO          637    .text.netconn_recv_data_tcp  api_lib.o
    0x00008cd8   0x00008cd8   0x00000042   Code   RO          633    .text.netconn_tcp_recvd_msg  api_lib.o
    0x00008d1a   0x00008d1a   0x00000002   PAD
    0x00008d1c   0x00008d1c   0x0000001c   Code   RO          653    .text.netconn_write_partly  api_lib.o
    0x00008d38   0x00008d38   0x00000150   Code   RO          655    .text.netconn_write_vectors_partly  api_lib.o
    0x00008e88   0x00008e88   0x000001c8   Code   RO         1037    .text.netif_add     netif.o
    0x00009050   0x00009050   0x00000014   Code   RO         1057    .text.netif_do_ip_addr_changed  netif.o
    0x00009064   0x00009064   0x00000014   Code   RO         1053    .text.netif_do_set_gw  netif.o
    0x00009078   0x00009078   0x00000056   Code   RO         1045    .text.netif_do_set_ipaddr  netif.o
    0x000090ce   0x000090ce   0x00000002   PAD
    0x000090d0   0x000090d0   0x00000014   Code   RO         1049    .text.netif_do_set_netmask  netif.o
    0x000090e4   0x000090e4   0x0000003a   Code   RO         1077    .text.netif_get_by_index  netif.o
    0x0000911e   0x0000911e   0x00000002   PAD
    0x00009120   0x00009120   0x00000002   Code   RO         1031    .text.netif_init    netif.o
    0x00009122   0x00009122   0x00000002   PAD
    0x00009124   0x00009124   0x0000005c   Code   RO         1065    .text.netif_issue_reports  netif.o
    0x00009180   0x00009180   0x00000006   Code   RO         1039    .text.netif_null_output_ip4  netif.o
    0x00009186   0x00009186   0x00000002   PAD
    0x00009188   0x00009188   0x0000006a   Code   RO         1041    .text.netif_set_addr  netif.o
    0x000091f2   0x000091f2   0x00000002   PAD
    0x000091f4   0x000091f4   0x00000014   Code   RO         1061    .text.netif_set_default  netif.o
    0x00009208   0x00009208   0x00000058   Code   RO         1063    .text.netif_set_up  netif.o
    0x00009260   0x00009260   0x00000030   Code   RO          407    .text.netifapi_do_netif_add  netifapi.o
    0x00009290   0x00009290   0x00000018   Code   RO          415    .text.netifapi_do_netif_common  netifapi.o
    0x000092a8   0x000092a8   0x00000042   Code   RO          405    .text.netifapi_netif_add  netifapi.o
    0x000092ea   0x000092ea   0x00000002   PAD
    0x000092ec   0x000092ec   0x0000001a   Code   RO          413    .text.netifapi_netif_common  netifapi.o
    0x00009306   0x00009306   0x00000002   PAD
    0x00009308   0x00009308   0x0000000a   Code   RO          777    .text.pbuf_add_header  pbuf.o
    0x00009312   0x00009312   0x00000002   PAD
    0x00009314   0x00009314   0x0000006e   Code   RO          779    .text.pbuf_add_header_impl  pbuf.o
    0x00009382   0x00009382   0x00000002   PAD
    0x00009384   0x00009384   0x000001cc   Code   RO          765    .text.pbuf_alloc    pbuf.o
    0x00009550   0x00009550   0x00000054   Code   RO          767    .text.pbuf_alloc_reference  pbuf.o
    0x000095a4   0x000095a4   0x0000003c   Code   RO          773    .text.pbuf_alloced_custom  pbuf.o
    0x000095e0   0x000095e0   0x000000d4   Code   RO          797    .text.pbuf_cat      pbuf.o
    0x000096b4   0x000096b4   0x00000010   Code   RO          799    .text.pbuf_chain    pbuf.o
    0x000096c4   0x000096c4   0x00000010   Code   RO          793    .text.pbuf_clen     pbuf.o
    0x000096d4   0x000096d4   0x0000003c   Code   RO          821    .text.pbuf_clone    pbuf.o
    0x00009710   0x00009710   0x00000044   Code   RO          803    .text.pbuf_copy     pbuf.o
    0x00009754   0x00009754   0x000000e0   Code   RO          807    .text.pbuf_copy_partial  pbuf.o
    0x00009834   0x00009834   0x00000168   Code   RO          805    .text.pbuf_copy_partial_pbuf  pbuf.o
    0x0000999c   0x0000999c   0x000000f8   Code   RO          769    .text.pbuf_free     pbuf.o
    0x00009a94   0x00009a94   0x0000000a   Code   RO          789    .text.pbuf_header_force  pbuf.o
    0x00009a9e   0x00009a9e   0x00000002   PAD
    0x00009aa0   0x00009aa0   0x00000016   Code   RO          787    .text.pbuf_header_impl  pbuf.o
    0x00009ab6   0x00009ab6   0x00000002   PAD
    0x00009ab8   0x00009ab8   0x0000001e   Code   RO          771    .text.pbuf_init_alloced_pbuf  pbuf.o
    0x00009ad6   0x00009ad6   0x00000002   PAD
    0x00009ad8   0x00009ad8   0x00000104   Code   RO          775    .text.pbuf_realloc  pbuf.o
    0x00009bdc   0x00009bdc   0x00000038   Code   RO          795    .text.pbuf_ref      pbuf.o
    0x00009c14   0x00009c14   0x0000007c   Code   RO          783    .text.pbuf_remove_header  pbuf.o
    0x00009c90   0x00009c90   0x00000098   Code   RO          514    .text.pcb_new       api_msg.o
    0x00009d28   0x00009d28   0x00000140   Code   RO         1099    .text.plug_holes    mem.o
    0x00009e68   0x00009e68   0x00000074   Code   RO          560    .text.poll_tcp      api_msg.o
    0x00009edc   0x00009edc   0x000000a2   Code   RO         2706    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00009f7e   0x00009f7e   0x00000002   PAD
    0x00009f80   0x00009f80   0x000000ae   Code   RO         2694    .text.prvAddNewTaskToReadyList  tasks.o
    0x0000a02e   0x0000a02e   0x00000002   PAD
    0x0000a030   0x0000a030   0x0000006c   Code   RO         2851    .text.prvCheckForValidListAndQueue  timers.o
    0x0000a09c   0x0000a09c   0x0000004e   Code   RO         2816    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0000a0ea   0x0000a0ea   0x00000002   PAD
    0x0000a0ec   0x0000a0ec   0x00000026   Code   RO         2587    .text.prvCopyDataFromQueue  queue.o
    0x0000a112   0x0000a112   0x00000002   PAD
    0x0000a114   0x0000a114   0x0000007a   Code   RO         2575    .text.prvCopyDataToQueue  queue.o
    0x0000a18e   0x0000a18e   0x00000002   PAD
    0x0000a190   0x0000a190   0x00000012   Code   RO         2700    .text.prvDeleteTCB  tasks.o
    0x0000a1a2   0x0000a1a2   0x00000002   PAD
    0x0000a1a4   0x0000a1a4   0x00000012   Code   RO         2591    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0000a1b6   0x0000a1b6   0x00000002   PAD
    0x0000a1b8   0x0000a1b8   0x00000020   Code   RO         2887    .text.prvGetNextExpireTime  timers.o
    0x0000a1d8   0x0000a1d8   0x0000002a   Code   RO         2732    .text.prvIdleTask   tasks.o
    0x0000a202   0x0000a202   0x00000002   PAD
    0x0000a204   0x0000a204   0x00000020   Code   RO         2563    .text.prvInitialiseMutex  queue.o
    0x0000a224   0x0000a224   0x00000020   Code   RO         2559    .text.prvInitialiseNewQueue  queue.o
    0x0000a244   0x0000a244   0x000000ae   Code   RO         2692    .text.prvInitialiseNewTask  tasks.o
    0x0000a2f2   0x0000a2f2   0x00000002   PAD
    0x0000a2f4   0x0000a2f4   0x00000070   Code   RO         2814    .text.prvInitialiseTaskLists  tasks.o
    0x0000a364   0x0000a364   0x00000040   Code   RO         2899    .text.prvInsertTimerInActiveList  timers.o
    0x0000a3a4   0x0000a3a4   0x00000018   Code   RO         2589    .text.prvIsQueueEmpty  queue.o
    0x0000a3bc   0x0000a3bc   0x0000001c   Code   RO         2577    .text.prvIsQueueFull  queue.o
    0x0000a3d8   0x0000a3d8   0x00000028   Code   RO         2928    .text.prvPortStartFirstTask  port.o
    0x0000a400   0x0000a400   0x0000006e   Code   RO         2895    .text.prvProcessExpiredTimer  timers.o
    0x0000a46e   0x0000a46e   0x00000002   PAD
    0x0000a470   0x0000a470   0x00000122   Code   RO         2891    .text.prvProcessReceivedCommands  timers.o
    0x0000a592   0x0000a592   0x00000002   PAD
    0x0000a594   0x0000a594   0x00000080   Code   RO         2889    .text.prvProcessTimerOrBlockTask  timers.o
    0x0000a614   0x0000a614   0x00000026   Code   RO         2698    .text.prvResetNextTaskUnblockTime  tasks.o
    0x0000a63a   0x0000a63a   0x00000002   PAD
    0x0000a63c   0x0000a63c   0x0000002a   Code   RO         2893    .text.prvSampleTimeNow  timers.o
    0x0000a666   0x0000a666   0x00000002   PAD
    0x0000a668   0x0000a668   0x0000008e   Code   RO         2897    .text.prvSwitchTimerLists  timers.o
    0x0000a6f6   0x0000a6f6   0x00000002   PAD
    0x0000a6f8   0x0000a6f8   0x00000032   Code   RO         2918    .text.prvTaskExitError  port.o
    0x0000a72a   0x0000a72a   0x00000002   PAD
    0x0000a72c   0x0000a72c   0x00000018   Code   RO         2509    .text.prvTestWaitCondition  event_groups.o
    0x0000a744   0x0000a744   0x00000016   Code   RO         2853    .text.prvTimerTask  timers.o
    0x0000a75a   0x0000a75a   0x00000002   PAD
    0x0000a75c   0x0000a75c   0x00000072   Code   RO         2579    .text.prvUnlockQueue  queue.o
    0x0000a7ce   0x0000a7ce   0x00000002   PAD
    0x0000a7d0   0x0000a7d0   0x0000000e   Code   RO         1093    .text.ptr_to_mem    mem.o
    0x0000a7de   0x0000a7de   0x00000002   PAD
    0x0000a7e0   0x0000a7e0   0x00000018   Code   RO         2344    .text.pvPortMalloc  heap_3.o
    0x0000a7f8   0x0000a7f8   0x00000018   Code   RO         2798    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x0000a810   0x0000a810   0x00000028   Code   RO         2916    .text.pxPortInitialiseStack  port.o
    0x0000a838   0x0000a838   0x00000110   Code   RO          566    .text.recv_tcp      api_msg.o
    0x0000a948   0x0000a948   0x000000f4   Code   RO          556    .text.recv_udp      api_msg.o
    0x0000aa3c   0x0000aa3c   0x00000068   Code   RO          558    .text.sent_tcp      api_msg.o
    0x0000aaa4   0x0000aaa4   0x00000048   Code   RO          532    .text.setup_tcp     api_msg.o
    0x0000aaec   0x0000aaec   0x00000190   Code   RO            6    .text.stack_init    lwip_tcpecho_freertos.o
    0x0000ac7c   0x0000ac7c   0x0000005e   Code   RO          231    .text.sys_arch_mbox_fetch  sys_arch.o
    0x0000acda   0x0000acda   0x00000002   PAD
    0x0000acdc   0x0000acdc   0x00000020   Code   RO          233    .text.sys_arch_mbox_tryfetch  sys_arch.o
    0x0000acfc   0x0000acfc   0x00000026   Code   RO          257    .text.sys_arch_protect  sys_arch.o
    0x0000ad22   0x0000ad22   0x00000002   PAD
    0x0000ad24   0x0000ad24   0x00000042   Code   RO          237    .text.sys_arch_sem_wait  sys_arch.o
    0x0000ad66   0x0000ad66   0x00000002   PAD
    0x0000ad68   0x0000ad68   0x00000014   Code   RO          259    .text.sys_arch_unprotect  sys_arch.o
    0x0000ad7c   0x0000ad7c   0x00000018   Code   RO          217    .text.sys_assert    sys_arch.o
    0x0000ad94   0x0000ad94   0x00000090   Code   RO          267    .text.sys_check_core_locking  sys_arch.o
    0x0000ae24   0x0000ae24   0x00000052   Code   RO          967    .text.sys_check_timeouts  timeouts.o
    0x0000ae76   0x0000ae76   0x00000002   PAD
    0x0000ae78   0x0000ae78   0x00000002   Code   RO          251    .text.sys_init      sys_arch.o
    0x0000ae7a   0x0000ae7a   0x00000002   PAD
    0x0000ae7c   0x0000ae7c   0x00000030   Code   RO          261    .text.sys_lock_tcpip_core  sys_arch.o
    0x0000aeac   0x0000aeac   0x00000012   Code   RO          265    .text.sys_mark_tcpip_thread  sys_arch.o
    0x0000aebe   0x0000aebe   0x00000002   PAD
    0x0000aec0   0x0000aec0   0x00000026   Code   RO          223    .text.sys_mbox_free  sys_arch.o
    0x0000aee6   0x0000aee6   0x00000002   PAD
    0x0000aee8   0x0000aee8   0x00000020   Code   RO          221    .text.sys_mbox_new  sys_arch.o
    0x0000af08   0x0000af08   0x00000060   Code   RO          227    .text.sys_mbox_trypost  sys_arch.o
    0x0000af68   0x0000af68   0x00000014   Code   RO          241    .text.sys_mutex_lock  sys_arch.o
    0x0000af7c   0x0000af7c   0x0000001a   Code   RO          239    .text.sys_mutex_new  sys_arch.o
    0x0000af96   0x0000af96   0x00000002   PAD
    0x0000af98   0x0000af98   0x00000010   Code   RO          243    .text.sys_mutex_unlock  sys_arch.o
    0x0000afa8   0x0000afa8   0x00000008   Code   RO          253    .text.sys_now       sys_arch.o
    0x0000afb0   0x0000afb0   0x0000000a   Code   RO          249    .text.sys_sem_free  sys_arch.o
    0x0000afba   0x0000afba   0x00000002   PAD
    0x0000afbc   0x0000afbc   0x00000036   Code   RO          235    .text.sys_sem_new   sys_arch.o
    0x0000aff2   0x0000aff2   0x00000002   PAD
    0x0000aff4   0x0000aff4   0x00000010   Code   RO          247    .text.sys_sem_signal  sys_arch.o
    0x0000b004   0x0000b004   0x00000064   Code   RO          255    .text.sys_thread_new  sys_arch.o
    0x0000b068   0x0000b068   0x00000060   Code   RO          955    .text.sys_timeout   timeouts.o
    0x0000b0c8   0x0000b0c8   0x00000090   Code   RO          963    .text.sys_timeout_abs  timeouts.o
    0x0000b158   0x0000b158   0x00000028   Code   RO          959    .text.sys_timeouts_init  timeouts.o
    0x0000b180   0x0000b180   0x00000028   Code   RO          971    .text.sys_timeouts_sleeptime  timeouts.o
    0x0000b1a8   0x0000b1a8   0x0000002e   Code   RO          263    .text.sys_unlock_tcpip_core  sys_arch.o
    0x0000b1d6   0x0000b1d6   0x00000002   PAD
    0x0000b1d8   0x0000b1d8   0x00000148   Code   RO         1188    .text.tcp_abandon   tcp.o
    0x0000b320   0x0000b320   0x0000000a   Code   RO         1194    .text.tcp_abort     tcp.o
    0x0000b32a   0x0000b32a   0x00000002   PAD
    0x0000b32c   0x0000b32c   0x0000001a   Code   RO         1254    .text.tcp_accept    tcp.o
    0x0000b346   0x0000b346   0x00000002   PAD
    0x0000b348   0x0000b348   0x00000038   Code   RO         1206    .text.tcp_accept_null  tcp.o
    0x0000b380   0x0000b380   0x000000c4   Code   RO         1232    .text.tcp_alloc     tcp.o
    0x0000b444   0x0000b444   0x00000012   Code   RO         1246    .text.tcp_arg       tcp.o
    0x0000b456   0x0000b456   0x00000002   PAD
    0x0000b458   0x0000b458   0x00000046   Code   RO         1180    .text.tcp_backlog_accepted  tcp.o
    0x0000b49e   0x0000b49e   0x00000002   PAD
    0x0000b4a0   0x0000b4a0   0x00000046   Code   RO         1178    .text.tcp_backlog_delayed  tcp.o
    0x0000b4e6   0x0000b4e6   0x00000002   PAD
    0x0000b4e8   0x0000b4e8   0x000000fc   Code   RO         1196    .text.tcp_bind      tcp.o
    0x0000b5e4   0x0000b5e4   0x00000054   Code   RO         1182    .text.tcp_close     tcp.o
    0x0000b638   0x0000b638   0x00000160   Code   RO         1184    .text.tcp_close_shutdown  tcp.o
    0x0000b798   0x0000b798   0x00000072   Code   RO         1220    .text.tcp_close_shutdown_fin  tcp.o
    0x0000b80a   0x0000b80a   0x00000002   PAD
    0x0000b80c   0x0000b80c   0x00000118   Code   RO          851    .text.tcp_create_segment  tcp_out.o
    0x0000b924   0x0000b924   0x0000005c   Code   RO         1216    .text.tcp_eff_send_mss_netif  tcp.o
    0x0000b980   0x0000b980   0x00000184   Code   RO          857    .text.tcp_enqueue_flags  tcp_out.o
    0x0000bb04   0x0000bb04   0x0000004c   Code   RO         1252    .text.tcp_err       tcp.o
    0x0000bb50   0x0000bb50   0x00000094   Code   RO         1174    .text.tcp_fasttmr   tcp.o
    0x0000bbe4   0x0000bbe4   0x00000030   Code   RO         1170    .text.tcp_free      tcp.o
    0x0000bc14   0x0000bc14   0x000000f8   Code   RO         1004    .text.tcp_free_acked_segments  tcp_in.o
    0x0000bd0c   0x0000bd0c   0x00000038   Code   RO         1268    .text.tcp_free_listen  tcp.o
    0x0000bd44   0x0000bd44   0x00000044   Code   RO         1000    .text.tcp_get_next_optbyte  tcp_in.o
    0x0000bd88   0x0000bd88   0x0000002e   Code   RO         1234    .text.tcp_handle_closepend  tcp.o
    0x0000bdb6   0x0000bdb6   0x00000002   PAD
    0x0000bdb8   0x0000bdb8   0x00000002   Code   RO         1168    .text.tcp_init      tcp.o
    0x0000bdba   0x0000bdba   0x00000002   PAD
    0x0000bdbc   0x0000bdbc   0x000005dc   Code   RO          986    .text.tcp_input     tcp_in.o
    0x0000c398   0x0000c398   0x00000074   Code   RO          994    .text.tcp_input_delayed_close  tcp_in.o
    0x0000c40c   0x0000c40c   0x00000058   Code   RO          893    .text.tcp_keepalive  tcp_out.o
    0x0000c464   0x0000c464   0x00000060   Code   RO         1240    .text.tcp_kill_prio  tcp.o
    0x0000c4c4   0x0000c4c4   0x0000004e   Code   RO         1238    .text.tcp_kill_state  tcp.o
    0x0000c512   0x0000c512   0x00000002   PAD
    0x0000c514   0x0000c514   0x00000044   Code   RO         1236    .text.tcp_kill_timewait  tcp.o
    0x0000c558   0x0000c558   0x00000054   Code   RO         1266    .text.tcp_listen_closed  tcp.o
    0x0000c5ac   0x0000c5ac   0x000001a0   Code   RO          990    .text.tcp_listen_input  tcp_in.o
    0x0000c74c   0x0000c74c   0x0000014c   Code   RO         1204    .text.tcp_listen_with_backlog_and_err  tcp.o
    0x0000c898   0x0000c898   0x00000058   Code   RO         1258    .text.tcp_netif_ip_addr_changed  tcp.o
    0x0000c8f0   0x0000c8f0   0x00000060   Code   RO         1260    .text.tcp_netif_ip_addr_changed_pcblist  tcp.o
    0x0000c950   0x0000c950   0x0000000a   Code   RO         1244    .text.tcp_new_ip_type  tcp.o
    0x0000c95a   0x0000c95a   0x00000002   PAD
    0x0000c95c   0x0000c95c   0x0000006c   Code   RO         1198    .text.tcp_new_port  tcp.o
    0x0000c9c8   0x0000c9c8   0x00000040   Code   RO         1214    .text.tcp_next_iss  tcp.o
    0x0000ca08   0x0000ca08   0x000002c4   Code   RO          859    .text.tcp_output    tcp_out.o
    0x0000cccc   0x0000cccc   0x00000060   Code   RO          889    .text.tcp_output_alloc_header  tcp_out.o
    0x0000cd2c   0x0000cd2c   0x000000a0   Code   RO          897    .text.tcp_output_alloc_header_common  tcp_out.o
    0x0000cdcc   0x0000cdcc   0x00000070   Code   RO          883    .text.tcp_output_control_segment  tcp_out.o
    0x0000ce3c   0x0000ce3c   0x00000098   Code   RO          887    .text.tcp_output_control_segment_netif  tcp_out.o
    0x0000ced4   0x0000ced4   0x0000003c   Code   RO          891    .text.tcp_output_fill_options  tcp_out.o
    0x0000cf10   0x0000cf10   0x00000188   Code   RO          865    .text.tcp_output_segment  tcp_out.o
    0x0000d098   0x0000d098   0x00000040   Code   RO          869    .text.tcp_output_segment_busy  tcp_out.o
    0x0000d0d8   0x0000d0d8   0x000000a0   Code   RO          998    .text.tcp_parseopt  tcp_in.o
    0x0000d178   0x0000d178   0x000000ec   Code   RO          849    .text.tcp_pbuf_prealloc  tcp_out.o
    0x0000d264   0x0000d264   0x0000007c   Code   RO         1218    .text.tcp_pcb_purge  tcp.o
    0x0000d2e0   0x0000d2e0   0x000000f0   Code   RO         1190    .text.tcp_pcb_remove  tcp.o
    0x0000d3d0   0x0000d3d0   0x00000070   Code   RO         1256    .text.tcp_poll      tcp.o
    0x0000d440   0x0000d440   0x00000618   Code   RO          992    .text.tcp_process   tcp_in.o
    0x0000da58   0x0000da58   0x000000b8   Code   RO         1222    .text.tcp_process_refused_data  tcp.o
    0x0000db10   0x0000db10   0x00000520   Code   RO         1002    .text.tcp_receive   tcp_in.o
    0x0000e030   0x0000e030   0x0000004c   Code   RO         1248    .text.tcp_recv      tcp.o
    0x0000e07c   0x0000e07c   0x00000060   Code   RO         1226    .text.tcp_recv_null  tcp.o
    0x0000e0dc   0x0000e0dc   0x000000ac   Code   RO         1210    .text.tcp_recved    tcp.o
    0x0000e188   0x0000e188   0x00000050   Code   RO         1270    .text.tcp_remove_listener  tcp.o
    0x0000e1d8   0x0000e1d8   0x00000098   Code   RO          875    .text.tcp_rexmit    tcp_out.o
    0x0000e270   0x0000e270   0x00000084   Code   RO          877    .text.tcp_rexmit_fast  tcp_out.o
    0x0000e2f4   0x0000e2f4   0x0000003c   Code   RO          873    .text.tcp_rexmit_rto  tcp_out.o
    0x0000e330   0x0000e330   0x00000048   Code   RO          871    .text.tcp_rexmit_rto_commit  tcp_out.o
    0x0000e378   0x0000e378   0x000000a0   Code   RO          867    .text.tcp_rexmit_rto_prepare  tcp_out.o
    0x0000e418   0x0000e418   0x00000016   Code   RO          863    .text.tcp_route     tcp_out.o
    0x0000e42e   0x0000e42e   0x00000002   PAD
    0x0000e430   0x0000e430   0x00000030   Code   RO          879    .text.tcp_rst       tcp_out.o
    0x0000e460   0x0000e460   0x0000008c   Code   RO          881    .text.tcp_rst_common  tcp_out.o
    0x0000e4ec   0x0000e4ec   0x00000034   Code   RO          885    .text.tcp_rst_netif  tcp_out.o
    0x0000e520   0x0000e520   0x00000022   Code   RO         1228    .text.tcp_seg_free  tcp.o
    0x0000e542   0x0000e542   0x00000002   PAD
    0x0000e544   0x0000e544   0x00000016   Code   RO         1192    .text.tcp_segs_free  tcp.o
    0x0000e55a   0x0000e55a   0x00000002   PAD
    0x0000e55c   0x0000e55c   0x00000074   Code   RO          861    .text.tcp_send_empty_ack  tcp_out.o
    0x0000e5d0   0x0000e5d0   0x00000068   Code   RO          855    .text.tcp_send_fin  tcp_out.o
    0x0000e638   0x0000e638   0x00000048   Code   RO         1250    .text.tcp_sent      tcp.o
    0x0000e680   0x0000e680   0x0000009c   Code   RO         1186    .text.tcp_shutdown  tcp.o
    0x0000e71c   0x0000e71c   0x0000047c   Code   RO         1176    .text.tcp_slowtmr   tcp.o
    0x0000eb98   0x0000eb98   0x000001d8   Code   RO          853    .text.tcp_split_unsent_seg  tcp_out.o
    0x0000ed70   0x0000ed70   0x00000042   Code   RO          953    .text.tcp_timer_needed  timeouts.o
    0x0000edb2   0x0000edb2   0x00000002   PAD
    0x0000edb4   0x0000edb4   0x000000d4   Code   RO          988    .text.tcp_timewait_input  tcp_in.o
    0x0000ee88   0x0000ee88   0x0000001e   Code   RO         1172    .text.tcp_tmr       tcp.o
    0x0000eea6   0x0000eea6   0x00000002   PAD
    0x0000eea8   0x0000eea8   0x00000012   Code   RO          996    .text.tcp_trigger_input_pcb_close  tcp_in.o
    0x0000eeba   0x0000eeba   0x00000002   PAD
    0x0000eebc   0x0000eebc   0x00000090   Code   RO         1208    .text.tcp_update_rcv_ann_wnd  tcp.o
    0x0000ef4c   0x0000ef4c   0x0000064c   Code   RO          845    .text.tcp_write     tcp_out.o
    0x0000f598   0x0000f598   0x000000d0   Code   RO          847    .text.tcp_write_checks  tcp_out.o
    0x0000f668   0x0000f668   0x000000dc   Code   RO          895    .text.tcp_zero_window_probe  tcp_out.o
    0x0000f744   0x0000f744   0x00000034   Code   RO          135    .text.tcpecho_init  tcpecho.o
    0x0000f778   0x0000f778   0x000000f8   Code   RO          137    .text.tcpecho_thread  tcpecho.o
    0x0000f870   0x0000f870   0x00000018   Code   RO          471    .text.tcpip_api_call  tcpip.o
    0x0000f888   0x0000f888   0x000000c0   Code   RO          483    .text.tcpip_init    tcpip.o
    0x0000f948   0x0000f948   0x00000060   Code   RO          461    .text.tcpip_inpkt   tcpip.o
    0x0000f9a8   0x0000f9a8   0x00000024   Code   RO          463    .text.tcpip_input   tcpip.o
    0x0000f9cc   0x0000f9cc   0x00000016   Code   RO          469    .text.tcpip_send_msg_wait_sem  tcpip.o
    0x0000f9e2   0x0000f9e2   0x00000002   PAD
    0x0000f9e4   0x0000f9e4   0x0000003e   Code   RO          957    .text.tcpip_tcp_timer  timeouts.o
    0x0000fa22   0x0000fa22   0x00000002   PAD
    0x0000fa24   0x0000fa24   0x00000048   Code   RO          485    .text.tcpip_thread  tcpip.o
    0x0000fa6c   0x0000fa6c   0x00000048   Code   RO          495    .text.tcpip_thread_handle_msg  tcpip.o
    0x0000fab4   0x0000fab4   0x0000005c   Code   RO          493    .text.tcpip_timeouts_mbox_fetch  tcpip.o
    0x0000fb10   0x0000fb10   0x000000c0   Code   RO         1137    .text.udp_bind      udp.o
    0x0000fbd0   0x0000fbd0   0x000000b0   Code   RO         1143    .text.udp_connect   udp.o
    0x0000fc80   0x0000fc80   0x00000002   Code   RO         1123    .text.udp_init      udp.o
    0x0000fc82   0x0000fc82   0x00000002   PAD
    0x0000fc84   0x0000fc84   0x00000214   Code   RO         1125    .text.udp_input     udp.o
    0x0000fe98   0x0000fe98   0x000000d4   Code   RO         1127    .text.udp_input_local_match  udp.o
    0x0000ff6c   0x0000ff6c   0x0000003e   Code   RO         1155    .text.udp_netif_ip_addr_changed  udp.o
    0x0000ffaa   0x0000ffaa   0x00000002   PAD
    0x0000ffac   0x0000ffac   0x00000022   Code   RO         1151    .text.udp_new       udp.o
    0x0000ffce   0x0000ffce   0x00000002   PAD
    0x0000ffd0   0x0000ffd0   0x0000000c   Code   RO         1153    .text.udp_new_ip_type  udp.o
    0x0000ffdc   0x0000ffdc   0x00000062   Code   RO         1139    .text.udp_new_port  udp.o
    0x0001003e   0x0001003e   0x00000002   PAD
    0x00010040   0x00010040   0x00000044   Code   RO         1147    .text.udp_recv      udp.o
    0x00010084   0x00010084   0x00000064   Code   RO         1149    .text.udp_remove    udp.o
    0x000100e8   0x000100e8   0x00000118   Code   RO         1133    .text.udp_sendto_if  udp.o
    0x00010200   0x00010200   0x000001f8   Code   RO         1135    .text.udp_sendto_if_src  udp.o
    0x000103f8   0x000103f8   0x00000024   Code   RO         2545    .text.uxListRemove  list.o
    0x0001041c   0x0001041c   0x00000026   Code   RO         2599    .text.uxQueueMessagesWaiting  queue.o
    0x00010442   0x00010442   0x00000002   PAD
    0x00010444   0x00010444   0x0000001a   Code   RO         2796    .text.uxTaskResetEventItemValue  tasks.o
    0x0001045e   0x0001045e   0x00000002   PAD
    0x00010460   0x00010460   0x00000008   Code   RO         2521    .text.vEventGroupSetBitsCallback  event_groups.o
    0x00010468   0x00010468   0x00000016   Code   RO         2537    .text.vListInitialise  list.o
    0x0001047e   0x0001047e   0x00000002   PAD
    0x00010480   0x00010480   0x00000006   Code   RO         2539    .text.vListInitialiseItem  list.o
    0x00010486   0x00010486   0x00000002   PAD
    0x00010488   0x00010488   0x0000003a   Code   RO         2543    .text.vListInsert   list.o
    0x000104c2   0x000104c2   0x00000002   PAD
    0x000104c4   0x000104c4   0x0000001c   Code   RO         2541    .text.vListInsertEnd  list.o
    0x000104e0   0x000104e0   0x00000014   Code   RO         2926    .text.vPortEnableVFP  port.o
    0x000104f4   0x000104f4   0x00000046   Code   RO         2932    .text.vPortEnterCritical  port.o
    0x0001053a   0x0001053a   0x00000002   PAD
    0x0001053c   0x0001053c   0x0000002e   Code   RO         2934    .text.vPortExitCritical  port.o
    0x0001056a   0x0001056a   0x00000002   PAD
    0x0001056c   0x0001056c   0x0000001e   Code   RO         2346    .text.vPortFree     heap_3.o
    0x0001058a   0x0001058a   0x00000002   PAD
    0x0001058c   0x0001058c   0x00000034   Code   RO         2924    .text.vPortSetupTimerInterrupt  port.o
    0x000105c0   0x000105c0   0x00000062   Code   RO         2940    .text.vPortValidateInterruptPriority  port.o
    0x00010622   0x00010622   0x00000002   PAD
    0x00010624   0x00010624   0x00000028   Code   RO         2619    .text.vQueueAddToRegistry  queue.o
    0x0001064c   0x0001064c   0x00000026   Code   RO         2605    .text.vQueueDelete  queue.o
    0x00010672   0x00010672   0x00000002   PAD
    0x00010674   0x00010674   0x0000002a   Code   RO         2607    .text.vQueueUnregisterQueue  queue.o
    0x0001069e   0x0001069e   0x00000002   PAD
    0x000106a0   0x000106a0   0x00000044   Code   RO         2623    .text.vQueueWaitForMessageRestricted  queue.o
    0x000106e4   0x000106e4   0x000000f6   Code   RO         2696    .text.vTaskDelete   tasks.o
    0x000107da   0x000107da   0x00000002   PAD
    0x000107dc   0x000107dc   0x0000001a   Code   RO         2764    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000107f6   0x000107f6   0x00000002   PAD
    0x000107f8   0x000107f8   0x0000000e   Code   RO         2768    .text.vTaskMissedYield  tasks.o
    0x00010806   0x00010806   0x00000002   PAD
    0x00010808   0x00010808   0x00000032   Code   RO         2752    .text.vTaskPlaceOnEventList  tasks.o
    0x0001083a   0x0001083a   0x00000002   PAD
    0x0001083c   0x0001083c   0x0000003e   Code   RO         2756    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0001087a   0x0001087a   0x00000002   PAD
    0x0001087c   0x0001087c   0x0000005a   Code   RO         2754    .text.vTaskPlaceOnUnorderedEventList  tasks.o
    0x000108d6   0x000108d6   0x00000002   PAD
    0x000108d8   0x000108d8   0x000000ba   Code   RO         2790    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00010992   0x00010992   0x00000002   PAD
    0x00010994   0x00010994   0x00000096   Code   RO         2760    .text.vTaskRemoveFromUnorderedEventList  tasks.o
    0x00010a2a   0x00010a2a   0x00000002   PAD
    0x00010a2c   0x00010a2c   0x0000009c   Code   RO         2730    .text.vTaskStartScheduler  tasks.o
    0x00010ac8   0x00010ac8   0x00000010   Code   RO         2704    .text.vTaskSuspendAll  tasks.o
    0x00010ad8   0x00010ad8   0x00000086   Code   RO         2722    .text.vTaskSwitchContext  tasks.o
    0x00010b5e   0x00010b5e   0x00000002   PAD
    0x00010b60   0x00010b60   0x0000001c   Code   RO         2501    .text.xEventGroupCreate  event_groups.o
    0x00010b7c   0x00010b7c   0x0000009e   Code   RO         2505    .text.xEventGroupSetBits  event_groups.o
    0x00010c1a   0x00010c1a   0x00000002   PAD
    0x00010c1c   0x00010c1c   0x00000016   Code   RO         2523    .text.xEventGroupSetBitsFromISR  event_groups.o
    0x00010c32   0x00010c32   0x00000002   PAD
    0x00010c34   0x00010c34   0x00000120   Code   RO         2507    .text.xEventGroupWaitBits  event_groups.o
    0x00010d54   0x00010d54   0x00000112   Code   RO         2922    .text.xPortStartScheduler  port.o
    0x00010e66   0x00010e66   0x00000002   PAD
    0x00010e68   0x00010e68   0x00000042   Code   RO         2573    .text.xQueueCreateCountingSemaphore  queue.o
    0x00010eaa   0x00010eaa   0x00000002   PAD
    0x00010eac   0x00010eac   0x00000016   Code   RO         2561    .text.xQueueCreateMutex  queue.o
    0x00010ec2   0x00010ec2   0x00000002   PAD
    0x00010ec4   0x00010ec4   0x00000070   Code   RO         2557    .text.xQueueGenericCreate  queue.o
    0x00010f34   0x00010f34   0x0000007e   Code   RO         2555    .text.xQueueGenericReset  queue.o
    0x00010fb2   0x00010fb2   0x00000002   PAD
    0x00010fb4   0x00010fb4   0x000001a2   Code   RO         2567    .text.xQueueGenericSend  queue.o
    0x00011156   0x00011156   0x00000002   PAD
    0x00011158   0x00011158   0x000000e8   Code   RO         2581    .text.xQueueGenericSendFromISR  queue.o
    0x00011240   0x00011240   0x00000184   Code   RO         2585    .text.xQueueReceive  queue.o
    0x000113c4   0x000113c4   0x000001c6   Code   RO         2571    .text.xQueueSemaphoreTake  queue.o
    0x0001158a   0x0001158a   0x00000002   PAD
    0x0001158c   0x0001158c   0x0000008c   Code   RO         2766    .text.xTaskCheckForTimeOut  tasks.o
    0x00011618   0x00011618   0x00000060   Code   RO         2690    .text.xTaskCreate   tasks.o
    0x00011678   0x00011678   0x0000000c   Code   RO         2782    .text.xTaskGetCurrentTaskHandle  tasks.o
    0x00011684   0x00011684   0x00000026   Code   RO         2784    .text.xTaskGetSchedulerState  tasks.o
    0x000116aa   0x000116aa   0x00000002   PAD
    0x000116ac   0x000116ac   0x0000000c   Code   RO         2738    .text.xTaskGetTickCount  tasks.o
    0x000116b8   0x000116b8   0x00000148   Code   RO         2736    .text.xTaskIncrementTick  tasks.o
    0x00011800   0x00011800   0x000000aa   Code   RO         2788    .text.xTaskPriorityDisinherit  tasks.o
    0x000118aa   0x000118aa   0x00000002   PAD
    0x000118ac   0x000118ac   0x000000aa   Code   RO         2786    .text.xTaskPriorityInherit  tasks.o
    0x00011956   0x00011956   0x00000002   PAD
    0x00011958   0x00011958   0x00000090   Code   RO         2758    .text.xTaskRemoveFromEventList  tasks.o
    0x000119e8   0x000119e8   0x00000118   Code   RO         2708    .text.xTaskResumeAll  tasks.o
    0x00011b00   0x00011b00   0x00000060   Code   RO         2849    .text.xTimerCreateTimerTask  timers.o
    0x00011b60   0x00011b60   0x00000068   Code   RO         2859    .text.xTimerGenericCommand  timers.o
    0x00011bc8   0x00011bc8   0x0000002a   Code   RO         2879    .text.xTimerPendFunctionCallFromISR  timers.o
    0x00011bf2   0x00011bf2   0x00000002   PAD
    0x00011bf4   0x00011bf4   0x00000050   Code   RO         3268    i.__free$2region    mc_w.l(malloc2.o)
    0x00011c44   0x00011c44   0x0000006c   Code   RO         3269    i.__malloc$2region  mc_w.l(malloc2.o)
    0x00011cb0   0x00011cb0   0x0000000e   Code   RO         3374    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00011cbe   0x00011cbe   0x00000002   Code   RO         3375    i.__scatterload_null  mc_w.l(handlers.o)
    0x00011cc0   0x00011cc0   0x0000000e   Code   RO         3376    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00011cce   0x00011cce   0x00000002   PAD
    0x00011cd0   0x00011cd0   0x0000000c   Data   RO           10    .rodata..L__const.stack_init.enet_config  lwip_tcpecho_freertos.o
    0x00011cdc   0x00011cdc   0x00000003   Data   RO         1375    .rodata.dhcp_discover_request_options  dhcp.o
    0x00011cdf   0x00011cdf   0x00000001   PAD
    0x00011ce0   0x00011ce0   0x00000014   Data   RO           94    .rodata.enet_ops    fsl_enet_mdio.o
    0x00011cf4   0x00011cf4   0x00000006   Data   RO         1548    .rodata.ethbroadcast  ethernet.o
    0x00011cfa   0x00011cfa   0x00000006   Data   RO         1549    .rodata.ethzero     ethernet.o
    0x00011d00   0x00011d00   0x00000004   Data   RO         1481    .rodata.ip_addr_any  ip4_addr.o
    0x00011d04   0x00011d04   0x00000004   Data   RO         1482    .rodata.ip_addr_broadcast  ip4_addr.o
    0x00011d08   0x00011d08   0x00000028   Data   RO          973    .rodata.lwip_cyclic_timers  timeouts.o
    0x00011d30   0x00011d30   0x0000000b   Data   RO           65    .rodata.mcgConfig_BOARD_BootClockRUN  clock_config.o
    0x00011d3b   0x00011d3b   0x00000001   PAD
    0x00011d3c   0x00011d3c   0x00000010   Data   RO          706    .rodata.memp_FRAG_PBUF  memp.o
    0x00011d4c   0x00011d4c   0x00000010   Data   RO          709    .rodata.memp_NETBUF  memp.o
    0x00011d5c   0x00011d5c   0x00000010   Data   RO          712    .rodata.memp_NETCONN  memp.o
    0x00011d6c   0x00011d6c   0x00000010   Data   RO          724    .rodata.memp_PBUF   memp.o
    0x00011d7c   0x00011d7c   0x00000010   Data   RO          727    .rodata.memp_PBUF_POOL  memp.o
    0x00011d8c   0x00011d8c   0x00000010   Data   RO          703    .rodata.memp_REASSDATA  memp.o
    0x00011d9c   0x00011d9c   0x00000010   Data   RO          721    .rodata.memp_SYS_TIMEOUT  memp.o
    0x00011dac   0x00011dac   0x00000010   Data   RO          715    .rodata.memp_TCPIP_MSG_API  memp.o
    0x00011dbc   0x00011dbc   0x00000010   Data   RO          718    .rodata.memp_TCPIP_MSG_INPKT  memp.o
    0x00011dcc   0x00011dcc   0x00000010   Data   RO          694    .rodata.memp_TCP_PCB  memp.o
    0x00011ddc   0x00011ddc   0x00000010   Data   RO          697    .rodata.memp_TCP_PCB_LISTEN  memp.o
    0x00011dec   0x00011dec   0x00000010   Data   RO          700    .rodata.memp_TCP_SEG  memp.o
    0x00011dfc   0x00011dfc   0x00000010   Data   RO          691    .rodata.memp_UDP_PCB  memp.o
    0x00011e0c   0x00011e0c   0x00000034   Data   RO          728    .rodata.memp_pools  memp.o
    0x00011e40   0x00011e40   0x00000001   Data   RO          568    .rodata.netconn_aborted  api_msg.o
    0x00011e41   0x00011e41   0x00000001   Data   RO          570    .rodata.netconn_closed  api_msg.o
    0x00011e42   0x00011e42   0x00000001   Data   RO          569    .rodata.netconn_reset  api_msg.o
    0x00011e43   0x00011e43   0x00000001   PAD
    0x00011e44   0x00011e44   0x00000008   Data   RO           67    .rodata.oscConfig_BOARD_BootClockRUN  clock_config.o
    0x00011e4c   0x00011e4c   0x00000020   Data   RO          125    .rodata.phyksz8081_ops  fsl_phyksz8081.o
    0x00011e6c   0x00011e6c   0x00000018   Data   RO         2386    .rodata.s_UartAdapterBase  fsl_adapter_uart.o
    0x00011e84   0x00011e84   0x00000004   Data   RO         1718    .rodata.s_enetClock  fsl_enet.o
    0x00011e88   0x00011e88   0x00000018   Data   RO         2161    .rodata.s_uartClock  fsl_uart.o
    0x00011ea0   0x00011ea0   0x00000008   Data   RO           66    .rodata.simConfig_BOARD_BootClockRUN  clock_config.o
    0x00011ea8   0x00011ea8   0x00000035   Data   RO           12    .rodata.str1.1      lwip_tcpecho_freertos.o
    0x00011edd   0x00011edd   0x00000063   Data   RO          126    .rodata.str1.1      fsl_phyksz8081.o
    0x00011f40   0x00011f40   0x00000069   Data   RO          163    .rodata.str1.1      enet_ethernetif.o
    0x00011fa9   0x00011fa9   0x0000008e   Data   RO          207    .rodata.str1.1      enet_ethernetif_kinetis.o
    0x00012037   0x00012037   0x0000002b   Data   RO          498    .rodata.str1.1      tcpip.o
    0x00012062   0x00012062   0x000000e6   Data   RO          571    .rodata.str1.1      api_msg.o
    0x00012148   0x00012148   0x0000005d   Data   RO          663    .rodata.str1.1      api_lib.o
    0x000121a5   0x000121a5   0x0000008b   Data   RO          688    .rodata.str1.1      memp.o
    0x00012230   0x00012230   0x000000d7   Data   RO          835    .rodata.str1.1      pbuf.o
    0x00012307   0x00012307   0x0000028d   Data   RO          899    .rodata.str1.1      tcp_out.o
    0x00012594   0x00012594   0x00000123   Data   RO         1014    .rodata.str1.1      tcp_in.o
    0x000126b7   0x000126b7   0x00000059   Data   RO         1114    .rodata.str1.1      mem.o
    0x00012710   0x00012710   0x00000061   Data   RO         1158    .rodata.str1.1      udp.o
    0x00012771   0x00012771   0x00000186   Data   RO         1278    .rodata.str1.1      tcp.o
    0x000128f7   0x000128f7   0x00000042   Data   RO         1373    .rodata.str1.1      dhcp.o
    0x00012939   0x00012939   0x0000000c   Data   RO         1400    .rodata.str1.1      ip4.o
    0x00012945   0x00012945   0x0000006d   Data   RO         1457    .rodata.str1.1      etharp.o
    0x000129b2   0x000129b2   0x0000019b   Data   RO         1719    .rodata.str1.1      fsl_enet.o
    0x00012b4d   0x00012b4d   0x0000003d   Data   RO         1865    .rodata.str1.1      fsl_clock.o
    0x00012b8a   0x00012b8a   0x000000c1   Data   RO         2160    .rodata.str1.1      fsl_uart.o
    0x00012c4b   0x00012c4b   0x00000081   Data   RO         2385    .rodata.str1.1      fsl_adapter_uart.o
    0x00012ccc   0x00012ccc   0x0000000d   Data   RO         1282    .rodata.tcp_backoff  tcp.o
    0x00012cd9   0x00012cd9   0x00000003   PAD
    0x00012cdc   0x00012cdc   0x00000010   Data   RO         1276    .rodata.tcp_pcb_lists  tcp.o
    0x00012cec   0x00012cec   0x00000004   Data   RO         2819    .rodata.uxTopUsedPriority  tasks.o
    0x00012cf0   0x00012cf0   0x00000020   Data   RO         3373    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x1fff0000, Load base: 0x00012d10, Size: 0x00000000, Max: 0x00010000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data_2 (Exec base: 0x20000000, Load base: 0x00012d10, Size: 0x0000df7c, Max: 0x00029400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00012d10   0x00000004   Data   RW         3345    .data               mc_w.l(mvars.o)
    0x20000004   0x00012d14   0x00000004   Data   RW         3346    .data               mc_w.l(mvars.o)
    0x20000008   0x00012d18   0x00000004   Data   RW         2362    .data.SystemCoreClock  system_mk64f12.o
    0x2000000c   0x00012d1c   0x00000004   Data   RW         1379    .data.dhcp_create_msg.xid  dhcp.o
    0x20000010   0x00012d20   0x0000000c   Data   RW           11    .data.mdioHandle    lwip_tcpecho_freertos.o
    0x2000001c   0x00012d2c   0x0000000c   Data   RW            9    .data.phyHandle     lwip_tcpecho_freertos.o
    0x20000028   0x00012d38   0x00000004   Data   RW         1868    .data.s_fastIrcFreq  fsl_clock.o
    0x2000002c   0x00012d3c   0x00000004   Data   RW         1867    .data.s_slowIrcFreq  fsl_clock.o
    0x20000030   0x00012d40   0x00000004   Data   RW         2159    .data.s_uartIsr     fsl_uart.o
    0x20000034   0x00012d44   0x00000004   Data   RW         1283    .data.tcp_next_iss.iss  tcp.o
    0x20000038   0x00012d48   0x00000002   Data   RW         1284    .data.tcp_port      tcp.o
    0x2000003a   0x00012d4a   0x00000002   Data   RW         1159    .data.udp_port      udp.o
    0x2000003c   0x00012d4c   0x00000004   Data   RW         2944    .data.uxCriticalNesting  port.o
    0x20000040        -       0x00000004   Zero   RW         1011    .bss.ackno          tcp_in.o
    0x20000044        -       0x000000f0   Zero   RW         1456    .bss.arp_table      etharp.o
    0x20000134        -       0x00000004   Zero   RW          977    .bss.current_timeout_due_time  timeouts.o
    0x20000138        -       0x00000004   Zero   RW         1374    .bss.dhcp_pcb       dhcp.o
    0x2000013c        -       0x00000001   Zero   RW         1378    .bss.dhcp_pcb_refcount  dhcp.o
    0x2000013d        -       0x00000008   Zero   RW         1377    .bss.dhcp_rx_options_given  dhcp.o
    0x20000145   0x00012d50   0x00000003   PAD
    0x20000148        -       0x00000020   Zero   RW         1376    .bss.dhcp_rx_options_val  dhcp.o
    0x20000168        -       0x000005ee   Zero   RW          208    .bss.enet_get_tx_buffer.ucBuffer  enet_ethernetif_kinetis.o
    0x20000756        -       0x00000001   Zero   RW         1458    .bss.etharp_cached_entry  etharp.o
    0x20000757   0x00012d50   0x00000001   PAD
    0x20000758        -       0x000001e0   Zero   RW          202    .bss.ethernetif0_init.ethernetif_0  enet_ethernetif_kinetis.o
    0x20000938   0x00012d50   0x00000008   PAD
    0x20000940        -       0x00000028   Zero   RW          203    .bss.ethernetif0_init.rxBuffDescrip_0  enet_ethernetif_kinetis.o
    0x20000968   0x00012d50   0x00000008   PAD
    0x20000970        -       0x00003b60   Zero   RW          205    .bss.ethernetif0_init.rxDataBuff_0  enet_ethernetif_kinetis.o
    0x200044d0        -       0x00000018   Zero   RW          204    .bss.ethernetif0_init.txBuffDescrip_0  enet_ethernetif_kinetis.o
    0x200044e8   0x00012d50   0x00000008   PAD
    0x200044f0        -       0x000011d0   Zero   RW          206    .bss.ethernetif0_init.txDataBuff_0  enet_ethernetif_kinetis.o
    0x200056c0        -       0x00000001   Zero   RW         1012    .bss.flags          tcp_in.o
    0x200056c1   0x00012d50   0x00000003   PAD
    0x200056c4        -       0x00000004   Zero   RW         2326    .bss.g_serialHandle  fsl_debug_console.o
    0x200056c8        -       0x00000004   Zero   RW         1864    .bss.g_xtal0Freq    fsl_clock.o
    0x200056cc        -       0x00000004   Zero   RW         1866    .bss.g_xtal32Freq   fsl_clock.o
    0x200056d0        -       0x00000004   Zero   RW         1020    .bss.inseg.1        tcp_in.o
    0x200056d4        -       0x00000002   Zero   RW         1021    .bss.inseg.2        tcp_in.o
    0x200056d6   0x00012d50   0x00000002   PAD
    0x200056d8        -       0x00000004   Zero   RW         1022    .bss.inseg.5        tcp_in.o
    0x200056dc        -       0x00000018   Zero   RW          759    .bss.ip_data        ip.o
    0x200056f4        -       0x00000002   Zero   RW         1401    .bss.ip_id          ip4.o
    0x200056f6        -       0x00000002   Zero   RW         1516    .bss.ip_reass_pbufcount  ip4_frag.o
    0x200056f8        -       0x00000004   Zero   RW         1112    .bss.lfree          mem.o
    0x200056fc        -       0x00000004   Zero   RW          501    .bss.lock_tcpip_core  tcpip.o
    0x20005700        -       0x00000001   Zero   RW          271    .bss.lwip_core_lock_count  sys_arch.o
    0x20005701   0x00012d50   0x00000003   PAD
    0x20005704        -       0x00000004   Zero   RW          272    .bss.lwip_core_lock_holder_thread  sys_arch.o
    0x20005708        -       0x00000004   Zero   RW          273    .bss.lwip_tcpip_thread  sys_arch.o
    0x2000570c        -       0x00000004   Zero   RW         1113    .bss.mem_mutex      mem.o
    0x20005710        -       0x0000016b   Zero   RW          704    .bss.memp_memory_FRAG_PBUF_base  memp.o
    0x2000587b        -       0x00000023   Zero   RW          707    .bss.memp_memory_NETBUF_base  memp.o
    0x2000589e        -       0x000000b3   Zero   RW          710    .bss.memp_memory_NETCONN_base  memp.o
    0x20005951        -       0x00001def   Zero   RW          725    .bss.memp_memory_PBUF_POOL_base  memp.o
    0x20007740        -       0x000000f3   Zero   RW          722    .bss.memp_memory_PBUF_base  memp.o
    0x20007833        -       0x000000a3   Zero   RW          701    .bss.memp_memory_REASSDATA_base  memp.o
    0x200078d6        -       0x000000a3   Zero   RW          719    .bss.memp_memory_SYS_TIMEOUT_base  memp.o
    0x20007979        -       0x00000083   Zero   RW          713    .bss.memp_memory_TCPIP_MSG_API_base  memp.o
    0x200079fc        -       0x00000083   Zero   RW          716    .bss.memp_memory_TCPIP_MSG_INPKT_base  memp.o
    0x20007a7f        -       0x000000c3   Zero   RW          695    .bss.memp_memory_TCP_PCB_LISTEN_base  memp.o
    0x20007b42        -       0x000005f3   Zero   RW          692    .bss.memp_memory_TCP_PCB_base  memp.o
    0x20008135        -       0x000001bb   Zero   RW          698    .bss.memp_memory_TCP_SEG_base  memp.o
    0x200082f0        -       0x000000c3   Zero   RW          689    .bss.memp_memory_UDP_PCB_base  memp.o
    0x200083b3   0x00012d50   0x00000001   PAD
    0x200083b4        -       0x00000004   Zero   RW          705    .bss.memp_tab_FRAG_PBUF  memp.o
    0x200083b8        -       0x00000004   Zero   RW          708    .bss.memp_tab_NETBUF  memp.o
    0x200083bc        -       0x00000004   Zero   RW          711    .bss.memp_tab_NETCONN  memp.o
    0x200083c0        -       0x00000004   Zero   RW          723    .bss.memp_tab_PBUF  memp.o
    0x200083c4        -       0x00000004   Zero   RW          726    .bss.memp_tab_PBUF_POOL  memp.o
    0x200083c8        -       0x00000004   Zero   RW          702    .bss.memp_tab_REASSDATA  memp.o
    0x200083cc        -       0x00000004   Zero   RW          720    .bss.memp_tab_SYS_TIMEOUT  memp.o
    0x200083d0        -       0x00000004   Zero   RW          714    .bss.memp_tab_TCPIP_MSG_API  memp.o
    0x200083d4        -       0x00000004   Zero   RW          717    .bss.memp_tab_TCPIP_MSG_INPKT  memp.o
    0x200083d8        -       0x00000004   Zero   RW          693    .bss.memp_tab_TCP_PCB  memp.o
    0x200083dc        -       0x00000004   Zero   RW          696    .bss.memp_tab_TCP_PCB_LISTEN  memp.o
    0x200083e0        -       0x00000004   Zero   RW          699    .bss.memp_tab_TCP_SEG  memp.o
    0x200083e4        -       0x00000004   Zero   RW          690    .bss.memp_tab_UDP_PCB  memp.o
    0x200083e8        -       0x00000004   Zero   RW         1082    .bss.netif_default  netif.o
    0x200083ec        -       0x00000004   Zero   RW         1081    .bss.netif_list     netif.o
    0x200083f0        -       0x00000001   Zero   RW         1080    .bss.netif_num      netif.o
    0x200083f1   0x00012d50   0x00000003   PAD
    0x200083f4        -       0x00000004   Zero   RW          976    .bss.next_timeout   timeouts.o
    0x200083f8        -       0x00000004   Zero   RW         2905    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200083fc        -       0x00000004   Zero   RW         2818    .bss.pxCurrentTCB   tasks.o
    0x20008400        -       0x00000004   Zero   RW         2903    .bss.pxCurrentTimerList  timers.o
    0x20008404        -       0x00000004   Zero   RW         2829    .bss.pxDelayedTaskList  tasks.o
    0x20008408        -       0x00000004   Zero   RW         2830    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000840c        -       0x00000004   Zero   RW         2904    .bss.pxOverflowTimerList  timers.o
    0x20008410        -       0x00000168   Zero   RW         2820    .bss.pxReadyTasksLists  tasks.o
    0x20008578        -       0x00000004   Zero   RW         1110    .bss.ram            mem.o
    0x2000857c        -       0x00000004   Zero   RW         1111    .bss.ram_end        mem.o
    0x20008580        -       0x00005813   Zero   RW         1109    .bss.ram_heap       mem.o
    0x2000dd93   0x00012d50   0x00000001   PAD
    0x2000dd94        -       0x00000004   Zero   RW         1515    .bss.reassdatagrams  ip4_frag.o
    0x2000dd98        -       0x00000002   Zero   RW         1017    .bss.recv_acked     tcp_in.o
    0x2000dd9a   0x00012d50   0x00000002   PAD
    0x2000dd9c        -       0x00000004   Zero   RW         1015    .bss.recv_data      tcp_in.o
    0x2000dda0        -       0x00000001   Zero   RW         1016    .bss.recv_flags     tcp_in.o
    0x2000dda1   0x00012d50   0x00000003   PAD
    0x2000dda4        -       0x00000004   Zero   RW         1720    .bss.s_ENETHandle.0  fsl_enet.o
    0x2000dda8        -       0x00000001   Zero   RW         2325    .bss.s_debugConsoleReadWaitSemaphore  fsl_debug_console.o
    0x2000dda9   0x00012d50   0x00000003   PAD
    0x2000ddac        -       0x00000020   Zero   RW         2324    .bss.s_debugConsoleState  fsl_debug_console.o
    0x2000ddcc        -       0x00000004   Zero   RW         1723    .bss.s_enetErrIsr.0  fsl_enet.o
    0x2000ddd0        -       0x00000004   Zero   RW         1721    .bss.s_enetRxIsr.0  fsl_enet.o
    0x2000ddd4        -       0x00000004   Zero   RW         1722    .bss.s_enetTxIsr.0  fsl_enet.o
    0x2000ddd8        -       0x00000018   Zero   RW         2162    .bss.s_uartHandle   fsl_uart.o
    0x2000ddf0        -       0x00000004   Zero   RW         1010    .bss.seqno          tcp_in.o
    0x2000ddf4        -       0x00000034   Zero   RW            8    .bss.stack_init.netif  lwip_tcpecho_freertos.o
    0x2000de28        -       0x00000004   Zero   RW         1274    .bss.tcp_active_pcbs  tcp.o
    0x2000de2c        -       0x00000001   Zero   RW         1279    .bss.tcp_active_pcbs_changed  tcp.o
    0x2000de2d   0x00012d50   0x00000003   PAD
    0x2000de30        -       0x00000004   Zero   RW         1273    .bss.tcp_bound_pcbs  tcp.o
    0x2000de34        -       0x00000004   Zero   RW         1018    .bss.tcp_input_pcb  tcp_in.o
    0x2000de38        -       0x00000004   Zero   RW         1272    .bss.tcp_listen_pcbs  tcp.o
    0x2000de3c        -       0x00000002   Zero   RW         1019    .bss.tcp_optidx     tcp_in.o
    0x2000de3e   0x00012d50   0x00000002   PAD
    0x2000de40        -       0x00000004   Zero   RW         1280    .bss.tcp_ticks      tcp.o
    0x2000de44        -       0x00000001   Zero   RW         1277    .bss.tcp_timer      tcp.o
    0x2000de45        -       0x00000001   Zero   RW         1281    .bss.tcp_timer_ctr  tcp.o
    0x2000de46   0x00012d50   0x00000002   PAD
    0x2000de48        -       0x00000004   Zero   RW         1275    .bss.tcp_tw_pcbs    tcp.o
    0x2000de4c        -       0x00000004   Zero   RW         1006    .bss.tcphdr         tcp_in.o
    0x2000de50        -       0x00000002   Zero   RW         1009    .bss.tcphdr_opt1len  tcp_in.o
    0x2000de52   0x00012d50   0x00000002   PAD
    0x2000de54        -       0x00000004   Zero   RW         1008    .bss.tcphdr_opt2    tcp_in.o
    0x2000de58        -       0x00000002   Zero   RW         1007    .bss.tcphdr_optlen  tcp_in.o
    0x2000de5a   0x00012d50   0x00000002   PAD
    0x2000de5c        -       0x00000004   Zero   RW          499    .bss.tcpip_init_done  tcpip.o
    0x2000de60        -       0x00000004   Zero   RW          500    .bss.tcpip_init_done_arg  tcpip.o
    0x2000de64        -       0x00000004   Zero   RW          497    .bss.tcpip_mbox     tcpip.o
    0x2000de68        -       0x00000001   Zero   RW          975    .bss.tcpip_tcp_timer_active  timeouts.o
    0x2000de69   0x00012d50   0x00000001   PAD
    0x2000de6a        -       0x00000002   Zero   RW         1013    .bss.tcplen         tcp_in.o
    0x2000de6c        -       0x00000001   Zero   RW         2942    .bss.ucMaxSysCallPriority  port.o
    0x2000de6d   0x00012d50   0x00000003   PAD
    0x2000de70        -       0x00000004   Zero   RW         1157    .bss.udp_pcbs       udp.o
    0x2000de74        -       0x00000004   Zero   RW         2943    .bss.ulMaxPRIGROUPValue  port.o
    0x2000de78        -       0x00000004   Zero   RW         2825    .bss.uxCurrentNumberOfTasks  tasks.o
    0x2000de7c        -       0x00000004   Zero   RW         2824    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000de80        -       0x00000004   Zero   RW         2827    .bss.uxSchedulerSuspended  tasks.o
    0x2000de84        -       0x00000004   Zero   RW         2822    .bss.uxTaskNumber   tasks.o
    0x2000de88        -       0x00000004   Zero   RW         2821    .bss.uxTopReadyPriority  tasks.o
    0x2000de8c        -       0x00000014   Zero   RW         2906    .bss.xActiveTimerList1  timers.o
    0x2000dea0        -       0x00000014   Zero   RW         2907    .bss.xActiveTimerList2  timers.o
    0x2000deb4        -       0x00000014   Zero   RW         2839    .bss.xDelayedTaskList1  tasks.o
    0x2000dec8        -       0x00000014   Zero   RW         2840    .bss.xDelayedTaskList2  tasks.o
    0x2000dedc        -       0x00000004   Zero   RW         2834    .bss.xIdleTaskHandle  tasks.o
    0x2000dee0        -       0x00000004   Zero   RW         2835    .bss.xNextTaskUnblockTime  tasks.o
    0x2000dee4        -       0x00000004   Zero   RW         2837    .bss.xNumOfOverflows  tasks.o
    0x2000dee8        -       0x00000004   Zero   RW         2836    .bss.xPendedTicks   tasks.o
    0x2000deec        -       0x00000014   Zero   RW         2833    .bss.xPendingReadyList  tasks.o
    0x2000df00        -       0x00000040   Zero   RW         2625    .bss.xQueueRegistry  queue.o
    0x2000df40        -       0x00000004   Zero   RW         2826    .bss.xSchedulerRunning  tasks.o
    0x2000df44        -       0x00000014   Zero   RW         2831    .bss.xSuspendedTaskList  tasks.o
    0x2000df58        -       0x00000014   Zero   RW         2823    .bss.xTasksWaitingTermination  tasks.o
    0x2000df6c        -       0x00000004   Zero   RW         2828    .bss.xTickCount     tasks.o
    0x2000df70        -       0x00000004   Zero   RW         2901    .bss.xTimerQueue    timers.o
    0x2000df74        -       0x00000004   Zero   RW         2902    .bss.xTimerTaskHandle  timers.o
    0x2000df78        -       0x00000004   Zero   RW         2832    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x2000df7c, Load base: 0x00012d50, Size: 0x00006400, Max: 0x00006400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000df7c        -       0x00006400   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2002f800, Load base: 0x00012d50, Size: 0x00000800, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2002f800        -       0x00000800   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1942        400         93          0          0      19156   api_lib.o
      4594        888        233          0          0      22123   api_msg.o
        22          0          0          0          0        936   board.o
       150          0         27          0          0       5065   clock_config.o
         8          0          0          0          0       3487   def.o
      4952        676         69          4         45      21721   dhcp.o
       620        124        105          0          0      10031   enet_ethernetif.o
      1282        220        142          0      21822      21730   enet_ethernetif_kinetis.o
      2306        292        109          0        241      11331   etharp.o
       312         52         12          0          0       3470   ethernet.o
       528          0          0          0          0       8542   event_groups.o
       348          8        153          0          0       6192   fsl_adapter_uart.o
        60         44          0          0          0        701   fsl_assert.o
      1744        120         61          8          8      24981   fsl_clock.o
       242          0          0          0          0       8624   fsl_component_serial_manager.o
        56          0          0          0          0       4290   fsl_component_serial_port_uart.o
       374          0          0          0         37       8951   fsl_debug_console.o
      4756        296        415          0         16      45931   fsl_enet.o
       296         76         20          0          0       8514   fsl_enet_mdio.o
       936        120        131          0          0       7938   fsl_phyksz8081.o
      1872         18          0          0          0      15261   fsl_str.o
       982         96        217          4         24      26268   fsl_uart.o
        54          0          0          0          0       1011   heap_3.o
       652        148          0          0          0       5270   icmp.o
       374          0          0          0          0       5683   inet_chksum.o
        32          0          0          0          0        503   init.o
         0          0          0          0         24       2300   ip.o
       962         48         12          0          2       6909   ip4.o
        52          0          8          0          0       5434   ip4_addr.o
      2470        444          0          0          6      11800   ip4_frag.o
       150          0          0          0          0       2254   list.o
       520        168         65         24         52       5110   lwip_tcpecho_freertos.o
      1760        448         89          0      22563       5485   mem.o
       402        128        399          0      11479       5424   memp.o
       270        116          0          0          0       4586   netbuf.o
       974        196          0          0          9       8907   netif.o
       164          0          0          0          0       6429   netifapi.o
      2430        696        215          0          0      18880   pbuf.o
       360         64          0          0          0       4583   pin_mux.o
       872         16          0          4          5       3965   port.o
      2452          0          0          0         64      20208   queue.o
       476        232       1040          0          0       2305   startup_mk64f12.o
       948        124          0          0          9       8918   sys_arch.o
        54          0          0          4          0       3582   system_mk64f12.o
      3368          8          4          0        520      30463   tasks.o
      5758       1276        419          6         23      24142   tcp.o
      5610        608        291          0         46      13101   tcp_in.o
      6306       1436        653          0          0      23524   tcp_out.o
       300         72          0          0          0       3884   tcpecho.o
       606         88         43          0         16       8195   tcpip.o
       580        120         40          0          9       4632   timeouts.o
      1180         26          0          0         60      12502   timers.o
      2272        524         97          2          4      10879   udp.o

    ----------------------------------------------------------------------
     71196      10416       5200         56      84796     556111   Object Totals
         0          0         32          0      27648          0   (incl. Generated)
       406          0          6          0         64          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        98          0          0          0          0         84   ldiv.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
       188         20          0          0          0        160   malloc2.o
        26          0          0          0          0         80   memcmp.o
        66          0          0          0          0         76   memmove.o
        36          0          0          0          0        108   memseta.o
         0          0          0          8          0          0   mvars.o
        14          0          0          0          0         68   strlen.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
       676         36          0          8          0        872   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       674         36          0          8          0        872   mc_w.l

    ----------------------------------------------------------------------
       676         36          0          8          0        872   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     71872      10452       5200         64      84796     555823   Grand Totals
     71872      10452       5200         64      84796     555823   ELF Image Totals
     71872      10452       5200         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                77072 (  75.27kB)
    Total RW  Size (RW Data + ZI Data)             84860 (  82.87kB)
    Total ROM Size (Code + RO Data + RW Data)      77136 (  75.33kB)

==============================================================================

